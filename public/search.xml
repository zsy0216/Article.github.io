<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>百年孤独</title>
      <link href="/2019/06/23/one-hundred-years-of-solitude/"/>
      <url>/2019/06/23/one-hundred-years-of-solitude/</url>
      
        <content type="html"><![CDATA[<p>昨天晚上一口气看完了剩下的《百年孤独》，距离开始看也不知道隔了多久。</p><p>好像还是有据可查的，开始的时候也写过拍过一些东西。</p><p>。。</p><p>大概是从4月1号开始的，到今天也快有三个月了。不知道为什么总感觉今年的日子过得总是那么快啊。</p><hr><p>​    看完了百年孤独，中间断断续续的也空闲了很多时间，被这样那样的事情耽搁。说实在现在再想好像有点张无忌跟张三丰学太极拳时到最后无招胜有招的地步了，怎么看完之后好像我心中也“无招”了呢？</p><p>​    对于孤独，好像每个人的看法不同，有人对它趋之若鹜，也有的甘之若饴。看完这本书，作者那奇幻的想象，拥有魔力的天马行空的文字，和对每个人物都栩栩如生的描述，确实引人入胜。全书从两个近亲结婚一直担心生出猪尾巴的孩子开始，到最后两个近亲生育出一个长有猪尾巴的孩子结束，跨越百年，历经七代，有被吉卜赛人的发明深深吸引的何塞·阿尔卡蒂奥·布恩迪亚；有为家族尽心尽力百年的乌尔苏拉；有发动战争争取自由的奥雷里亚诺·布恩迪亚上校，最后却被世人遗忘，只当做人们的杜撰……</p><p>​    <img src="https://zsy0216.gitee.io/images/hexo/one-hundred-years-of-solitude/%E7%99%BE%E5%B9%B4%E5%AD%A4%E7%8B%AC.png" alt="百年孤独"></p><p><strong>四月一日文</strong></p><p>百年孤独                    ——加西亚·马尔克斯</p><p><strong>第一小节</strong></p><p><strong>人物</strong></p><p><img src="https://zsy0216.gitee.io/images/hexo/one-hundred-years-of-solitude/1.jpg" alt></p><p><strong>地图</strong></p><p><img src="https://zsy0216.gitee.io/images/hexo/one-hundred-years-of-solitude/2map.jpg" alt></p><p>东面是无法逾越的山脉 山脉另一侧是一座古老的城市里奥阿查，南面是永远覆着绿色植被的泥塘和广阔的大沼泽，大沼泽西面是广袤无垠的水面。所以文明世界应该是在北方的道路上，但是北面也不过是灰白肮脏、泡沫翻滚的大海。</p><p>吉普赛人每次来都带来神奇的发明，一次次的吸引着何塞·阿尔卡蒂奥·布恩迪亚，所以才有了之后的北方道路的探索，更有了之后发现他们是生活在一个半岛上，进而决定搬家，最终在妻子乌尔苏拉·伊瓜兰的阻挠下放弃。</p><p><strong>第二节</strong></p><p>​     介绍了何塞·阿尔卡蒂奥·布恩迪亚和乌尔苏拉·伊瓜兰的近亲关系，在之后的婚姻生活里由于担心生出不好的孩子，所以乌尔苏拉一直保持处子之身，进而有了之后布恩迪亚与别人斗鸡胜利后被嘲讽，之后决斗将对方杀死，然后因受不了死者死后的烦扰，决定翻越山脉离开。</p><p>​       布恩迪亚迷恋于炼金术，阿尔卡蒂奥慢慢长大，后与会用纸牌算命的名叫庇拉尔·特尔内拉发生关系并有了孩子，但阿尔卡迪奥却因此陷入恐慌，在一次吉卜赛人来的时候，和一名吉卜赛女子随吉卜赛人远去。他的母亲乌尔苏拉外出寻找阿尔卡蒂奥，五个月后归来，并未追上吉卜赛人，但带回来了一群来自大沼泽另一边（只有两天路程）的人，找到了布恩迪亚在上次失败的远征中没能发现的通向伟大发明的道理。</p><p><strong>第三节</strong></p><p><img src="https://zsy0216.gitee.io/images/hexo/one-hundred-years-of-solitude/3.png" alt></p><p><img src="https://zsy0216.gitee.io/images/hexo/one-hundred-years-of-solitude/4.png" alt></p><p>​    何塞·阿尔卡迪奥与庇拉尔·特尔内拉的儿子阿尔卡蒂奥（继承何塞·阿尔卡迪奥的名字）出生后被接到家中，与阿玛兰妲一起被一个名叫比西塔西翁的瓜希拉印第安女人照料，比西塔西翁和兄弟为逃避部落中肆虐多年的失眠症来到这里，为之后整个马孔多的人都染上失眠症埋下伏笔。又为之后的吉卜赛人梅尔吉亚德斯死后的出现并给全村的人治疗失眠症做了铺垫。</p><p>​       之后，家中来了一个名叫丽贝卡的不速之客，据介绍这个孩子算是乌尔苏拉的表妹，是她居住在马纳乌雷最难忘的挚友尼卡诺尔·乌略亚和丽贝卡·蒙铁尔的女儿，但乌尔苏拉和丈夫却根本不记得这个亲戚。</p><blockquote><p>2019-6-23 8:52</p><p>现在脑子好空，不知道再写点啥了。。。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感受 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心路第九周</title>
      <link href="/2019/06/20/xinlu-9/"/>
      <url>/2019/06/20/xinlu-9/</url>
      
        <content type="html"><![CDATA[<h3 id="Report"><a href="#Report" class="headerlink" title="Report"></a>Report</h3><p>​    突然有点想放弃了，这周是第九周了，本意是记录自己内心的感受，期间也乱七八糟的不知道写了点啥，也有啥也没写的。现在我不知道写这个的意义在哪了。不知道是否还有继续下去的必要。</p><p>​    这周考试，上周本打算这周就啥也不写了的，但是不知道现在突然冒出一种无力感，感觉这个东西对我的作用好像也不是很大，或许是我对于接触久的东西都有一种厌恶感，也许这就是喜新厌旧吧。我确实是一个喜新厌旧的人，而且对于厌恶的事物很难有所妥协。坚持好像在我身上是种稀缺的品质，不知道坚持到最后的感觉到底是什么样的，或许也是因为好多事情不知道最终的终点到底在哪。</p><p>​    最近开始看武林外传，也许这是个突破点，先来思考一下武林外传中的故事吧。</p><p>​    看的最新一集是关于孩子的教育问题，佟掌柜眼红镇上其他孩子都有一技之长，便要求小贝去学习艺术。跟秀才学围棋，跟老白学声乐，跟小郭学书法，最后又请先生学绘画。曾经也看过这一集，但是现在看来真的更注重了其中表达的内涵，而不是曾经的一笑而过。现在还是有很多家长不问孩子是否感兴趣，或者不在意孩子的兴趣逼迫孩子去学习他们自以为有用的东西，报各种班，剥夺所有课余时间。</p><p>​    最近高考结束了，也有这样的问题，微博在高考结束的那几天都在刷一定要修改自己的选志愿的密码，一方面防止其他人偷偷改自己的志愿，另一方面竟然是担心家长偷偷地改孩子的志愿。而且下面评论还有很多真实的案例，被家长强行篡改志愿，以致于上了自己不喜欢的专业。在这方面我很庆幸，我能够自主的选择自己想要的学校和专业，最起码这是一项尊重，不该由其他人剥夺。</p><p>​    教育真的是很有用的，当然人的思想不全从教育中来，这不可否认。但人的差别真的会从受到的教育和学到的知识中体现出来，成就是一方面，这方面一般会有反例，但那些反例并不适用于一般人。更重要的差别是人的言谈举止和修养，在公共场合的行为，独自一个人是的自处，即慎独。</p>]]></content>
      
      
      <categories>
          
          <category> Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象分析与设计</title>
      <link href="/2019/06/19/OOA-D/"/>
      <url>/2019/06/19/OOA-D/</url>
      
        <content type="html"><![CDATA[<h3 id="第一章-面向对象方法概论"><a href="#第一章-面向对象方法概论" class="headerlink" title="第一章 面向对象方法概论"></a>第一章 面向对象方法概论</h3><ol><li><p>面向对象的基本原则及优点  p6  p8</p></li><li><p>封装的目的？在面向对象中如何实现封装的目的？p6</p></li><li><p>UML  p12</p></li></ol><h3 id="第二章-什么是面向对象分析"><a href="#第二章-什么是面向对象分析" class="headerlink" title="第二章 什么是面向对象分析"></a>第二章 什么是面向对象分析</h3><ol><li><p>OOA的模型（p19）、基本任务（p16）和过程（p20）</p></li><li><p>问题域和系统责任的关系（p16）</p></li></ol><h3 id="第三章-建立需求模型——用况图"><a href="#第三章-建立需求模型——用况图" class="headerlink" title="第三章 建立需求模型——用况图"></a>第三章 建立需求模型——用况图</h3><ol><li><p>用况之间的三大关系：包含、扩展、继承（p28）</p></li><li><p>用况图在面向对象分析法中的地位（p36）</p></li><li><p>自动售货机，建立用况图（p36）</p></li></ol><h3 id="第四章-建立基本模型——类图"><a href="#第四章-建立基本模型——类图" class="headerlink" title="第四章 建立基本模型——类图"></a>第四章 建立基本模型——类图</h3><ol><li><p>对象与类以及属性（p44）的基本概念（p37）</p></li><li><p>关联与链之间的关系（p58）</p></li><li><p>关系：继承 关联 聚合 依赖（p49）</p></li><li><p>p73 第6 10 16 17题</p></li><li><p>会画类图</p></li></ol><h3 id="第五章-建立辅助模型"><a href="#第五章-建立辅助模型" class="headerlink" title="第五章 建立辅助模型"></a>第五章 建立辅助模型</h3><ol><li><p>顺序图、通信图、活动图、状态机图、包图；</p><p>顺序图、通信图、活动图、状态机图用于描述系统的行为；包图用于组织系统的模型。</p></li><li><p>顺序图和通信图比较重要（图5-1 p76和图5-3  p78 和图5-9  p81）</p></li><li><p>什么时候要建立顺序图？（p83）</p></li><li><p>活动图 泳道  P88 图5-19</p></li><li><p>ATM取款顺序图和简易电梯状态机图 （p102）9,10</p></li><li><p>开发小程序的过程，建立活动图（p102）18</p></li></ol><p>p96 图5-27简易微波炉的状态机图 （4月16号强调的考试题） 5-28组合状态图（状态圆角、事件、箭头）</p><h3 id="第六章-什么是面向对象设计"><a href="#第六章-什么是面向对象设计" class="headerlink" title="第六章 什么是面向对象设计"></a>第六章 什么是面向对象设计</h3><p>1.OOA和OOD的基本概念及关系（p104）</p><h3 id="第七章-问题域部分的设计"><a href="#第七章-问题域部分的设计" class="headerlink" title="第七章 问题域部分的设计"></a>第七章 问题域部分的设计</h3><p>1.三元关系改二元关系（p114）</p><p>2.P111 图7-4</p><h3 id="第八章-人机交互部分的设计"><a href="#第八章-人机交互部分的设计" class="headerlink" title="第八章 人机交互部分的设计"></a>第八章 人机交互部分的设计</h3><p>1.人机交互的准则（5月7号强调必考）（p130）</p><h3 id="第九章-控制驱动部分的设计"><a href="#第九章-控制驱动部分的设计" class="headerlink" title="第九章 控制驱动部分的设计"></a>第九章 控制驱动部分的设计</h3><p>1.控制驱动部分的基本概念（p132）</p><p>2.顺序图对控制流之间的交互进行建模（p137）</p><p>3.如何协调控制流（p138）</p><h3 id="第十章-数据管理部分的设计"><a href="#第十章-数据管理部分的设计" class="headerlink" title="第十章 数据管理部分的设计"></a>第十章 数据管理部分的设计</h3><p>1.关系数据库（p142）</p><p>2.面向对象数据库（p142）</p><h3 id="第十一章-构件及部署部分的设计"><a href="#第十一章-构件及部署部分的设计" class="headerlink" title="第十一章 构件及部署部分的设计"></a>第十一章 构件及部署部分的设计</h3><ol><li><p>构件 （p150）</p></li><li><p>端口（p152）</p></li><li><p>供需接口（p151）</p></li><li><p>节点（p159）</p></li><li><p>端口–构件的区别</p></li><li><p>设计模式（p164）</p></li><li><p>敏捷开发  scrum骨架</p><h3 id="其中七个图四个关系，老师您强调过几次"><a href="#其中七个图四个关系，老师您强调过几次" class="headerlink" title="其中七个图四个关系，老师您强调过几次"></a>其中七个图四个关系，老师您强调过几次</h3><p>用况图、类图、顺序图、通信图、活动图、状态机图、包图；</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毛泽东思想和中国特色社会主义理论体系概论</title>
      <link href="/2019/06/17/mao-gai/"/>
      <url>/2019/06/17/mao-gai/</url>
      
        <content type="html"><![CDATA[<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="主题篇"><a href="#主题篇" class="headerlink" title="主题篇"></a>主题篇</h2><ul><li><strong>毛泽东思想</strong>：中国革命和社会主义初期建设</li><li><strong>邓小平理论</strong>：什么是社会主义？怎样建设社会主义？</li><li><strong>三个代表重要思想</strong>：建设一个什么样的党？怎样建设党？</li><li><strong>科学发展观</strong>：要实现什么样的发展？怎样发展？</li><li><strong>习近平新时代中国特色社会主义思想</strong>：坚持和发展什么样的中国特色社会主义？怎样坚持和发展中国特色社会主义？</li></ul><h2 id="历史地位篇"><a href="#历史地位篇" class="headerlink" title="历史地位篇"></a>历史地位篇</h2><ul><li><strong>毛泽东思想</strong><ol><li>马克思主义中国化的第一个重大理论成果；</li><li>中国革命和建设的科学指南；</li><li>中国共产党和中国人民宝贵的精神财富；</li></ol></li><li><strong>邓小平理论</strong><ol><li>马克思列宁主义、毛泽东思想的继承和发展；</li><li>中国特色社会主义理论体系的开篇之作；</li><li>改革开放和社会主义现代化建设的科学指南；</li></ol></li><li><strong>三个代表重要思想</strong><ol><li>中国特色社会主义理论体系的接续发展；</li><li>加强和改进党的建设，推进中国特色社会主义事业的强大理论武器；</li></ol></li><li><strong>科学发展观</strong><ol><li>中国特色社会主义理论体系的接续发展；</li><li>发展中国特色社会主义必须长期坚持的指导思想；</li></ol></li><li><strong>习近平新时代中国特色社会主义思想</strong><ol><li>马克思主义中国化的最新成果；</li><li>新时代的精神旗帜；</li><li>实现中华民族伟大复兴的行动指南；</li></ol></li></ul><h2 id="路线篇"><a href="#路线篇" class="headerlink" title="路线篇"></a>路线篇</h2><ol><li><p>新民主主义革命的总路线：</p><p>​    无产阶级领导的，人民大众的，反对帝国主义，封建主义和官僚资本主义的革命；</p></li><li><p>过渡时期（社会主义改造理论）的总路线：<strong>一化三改</strong></p><p><u>    社会主义工业化</u>，<u>对个体农业、手工业和资本主义工商业的社会主义改造；</u></p></li><li><p>党的基本路线：</p><p>​    领导和团结各族人民，以经济建设为中心，坚持四项基本原则，坚持改革开放，为把我国建设成为富强、民主、文明的社会主义现代化国家而奋斗。（和谐、美丽的社会主义现代化强国）</p></li></ol><h2 id="一带一路"><a href="#一带一路" class="headerlink" title="一带一路"></a>一带一路</h2><p>​    “一带一路”建设对推动构建人类命运共同体具有重要的意义和作用。党的十九大提出要以“一带一路”建设为重点，坚持引进来和走出去并重，遵循共商共建共享原则，加强创新能力开放合作，形成陆海内外联动、东西双向互济经济的开放格局。一是要坚持引进来和走出去并重，深化双向投资合作。二是坚持共商共建共享原则。三十加强创新能力开放合作，主要是加强技术创新合作、理论创新交流互鉴、创新人才资源交流合作。四是把“一带一路”与构建人类命运共同体更加紧密结合起来，与落实2030年可持续发展议程紧密结合起来，打造国际合作新平台，增添共同发展新动力，把“一带一路”建成和平之路、繁荣之路、开放之路、创新之路、文明之路。</p><h2 id="主要矛盾的变化"><a href="#主要矛盾的变化" class="headerlink" title="主要矛盾的变化"></a>主要矛盾的变化</h2><ol><li>随着土地改革的基本完成，<u>无产阶级和资产阶级的矛盾</u>逐步成为国内的主要矛盾，而解决这一矛盾必然使中国社会实现向社会主义的转变。</li><li>历史主要矛盾：人民日益增长的物质文化需要同落后的社会生产之间的矛盾；</li><li>现在主要矛盾：人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾；</li></ol><h2 id="新发展理念"><a href="#新发展理念" class="headerlink" title="新发展理念"></a>新发展理念</h2><p><strong>创新、协调、绿色、开放、共享</strong></p><h1 id="第一部分-旗帜举起来"><a href="#第一部分-旗帜举起来" class="headerlink" title="第一部分 旗帜举起来"></a>第一部分 旗帜举起来</h1><h2 id="专题一-马克思主义中国化"><a href="#专题一-马克思主义中国化" class="headerlink" title="专题一 马克思主义中国化"></a>专题一 马克思主义中国化</h2><h3 id="1-提出："><a href="#1-提出：" class="headerlink" title="1.提出："></a>1.提出：</h3><p>​    1938年10月,在中共六届六中全会上,毛泽东在《论新阶段》的报告中,第一次<strong>提出</strong>了“马克思主义中国化”的任务。</p><h3 id="2-科学内涵"><a href="#2-科学内涵" class="headerlink" title="2.科学内涵"></a>2.科学内涵</h3><p>马克思主义中国化的<strong>科学内涵</strong>包括以下三个方面：</p><p>​    第一，马克思主义中国化是马克思主义在指导中国革命、建设和改革的实践中实现具体化；</p><p>​    第二，马克思主义中国化是把中国革命、建设和改革的实践经验和历史经验上升为马克思主义理论；</p><p>​    第三，马克思主义中国化是把马克思主义植根于中国的优秀文化之中。</p><h3 id="3-两大理论成果"><a href="#3-两大理论成果" class="headerlink" title="3.两大理论成果"></a>3.两大理论成果</h3><p>毛泽东思想和中国特色社会主义理论体系</p><p>两者的关系：一脉相承，与时俱进。</p><h2 id="专题二-毛泽东思想"><a href="#专题二-毛泽东思想" class="headerlink" title="专题二 毛泽东思想"></a>专题二 毛泽东思想</h2><h3 id="1-形成过程"><a href="#1-形成过程" class="headerlink" title="1.形成过程"></a>1.形成过程</h3><ul><li>毛泽东在著作中提出并阐述了农村包围城市、武装夺取政权的思想，标志着毛泽东思想的<strong>初步形成</strong>；</li><li>新民主主义革命理论的系统阐述，标志着毛泽东思想<strong>趋于成熟</strong>。</li><li>1945年，党的七大将毛泽东思想<strong>写入党章</strong>，确立为党必须长期坚持的指导思想（刘少奇），</li></ul><h3 id="2-围绕主题"><a href="#2-围绕主题" class="headerlink" title="2.围绕主题"></a>2.围绕主题</h3><p>​    中国革命和社会主义初期建设</p><p>拓展：</p><p>​    <strong>邓小平理论</strong>围绕主题：什么是社会主义？怎样建设社会主义？</p><p>​    <strong>三个代表重要思想</strong>围绕主题：建设一个什么样的党？怎样建设党？</p><p>​    <strong>科学发展观</strong>主题：要实现什么样的发展？怎样发展？</p><p>​    <strong>习近平新时代中国特色社会主义思想</strong>围绕的主题：坚持和发展什么样的中国特色社会主义？怎样坚持和发展中国特色社会主义？</p><h3 id="3-主要内容"><a href="#3-主要内容" class="headerlink" title="3.主要内容"></a>3.主要内容</h3><ol><li>新民主主义革命理论</li><li>社会主义革命和社会主义建设理论</li><li>革命军队建设和军事战略的理论</li><li>政策和策略的理论</li><li>思想政治工作和文化工作的理论</li><li>党的建设理论</li><li>毛泽东的哲学思想</li></ol><h3 id="4-活的灵魂"><a href="#4-活的灵魂" class="headerlink" title="4.活的灵魂"></a>4.活的灵魂</h3><p>​    <strong>实事求是、群众路线、独立自主。</strong></p><p>​    实事求是：一切从实际出发，理论联系实际，坚持在实践中检验真理和发展真理。</p><p>​    群众路线：一切为了群众，一切依靠群众，从群众中来，到群众中去，把党的正确主张变成群众的自觉行动。</p><p>​    独立自主：坚持独立思考，走自己的路，就是坚定不移地维护民族独立、捍卫国家主权，把立足点放在依靠自己力量的基础上，同时积极争取外援，开展国际经济文化交流，学习外国一切对我们有益的先进事物。</p><h3 id="5-改革开放和独立自主的联系"><a href="#5-改革开放和独立自主的联系" class="headerlink" title="5.改革开放和独立自主的联系"></a>5.改革开放和独立自主的联系</h3><p>根本上：就是在独立自主的前提下进行对外开放。<br>一、 独立自主是立国之基。<br>二、 改革开放是强国之道，是我国长期坚持的基本国策。在对外开放上，<br>主导权必须在我。<br>三、 独立自主是对外开放的前提和基础，而对外开放主力提升自主发展的<br>能力。两者是相辅相成，相得益彰，相互促进的。</p><h3 id="6-历史地位"><a href="#6-历史地位" class="headerlink" title="6.历史地位"></a>6.历史地位</h3><ol><li>马克思主义中国化的第一个重大理论成果</li><li>中国革命和建设的科学指南</li><li>中国共产党和中国人民宝贵的精神财富</li></ol><h1 id="第二部分-中国人民站起来"><a href="#第二部分-中国人民站起来" class="headerlink" title="第二部分 中国人民站起来"></a>第二部分 中国人民站起来</h1><h2 id="专题三-新民主主义革命理论"><a href="#专题三-新民主主义革命理论" class="headerlink" title="专题三 新民主主义革命理论"></a>专题三 新民主主义革命理论</h2><h3 id="0-新民主主义革命"><a href="#0-新民主主义革命" class="headerlink" title="0.新民主主义革命"></a>0.新民主主义革命</h3><p>​    新民主主义革命：指从 1919 年五四运动到 1949 年中华人民共和国成立为止的一段时间内，由中国共产党领导的，针对帝（帝国主义）、官（官僚资本主义）、封（封建主义）（也就是俗称的“三座大山”）的资产阶级民主革命。</p><h3 id="1-近代中国社会为什么要进行革命？"><a href="#1-近代中国社会为什么要进行革命？" class="headerlink" title="1.近代中国社会为什么要进行革命？"></a>1.近代中国社会为什么要进行革命？</h3><p>​    因为中国当时的国情处于“半殖民地半封建社会”，蕴含着特殊的社会矛盾和革命要求。</p><h3 id="2-近代中国的国情"><a href="#2-近代中国的国情" class="headerlink" title="2.近代中国的国情"></a>2.近代中国的国情</h3><p>​    <strong>半殖民地半封建社会</strong></p><p>​    半殖民地表示的是国际地位，另一面指半独立。</p><p>​    半封建指的是国内情况，另一面指半资本主义。</p><p>​    近代中国基本国情的一二三四五，就是：一大危险，亡国灭种；一大主题，救亡图存；两对主要矛盾，帝国主义和中华民族的矛盾、封建主义和人民大众的矛盾；两大敌人，帝国主义和封建主义；中国革命的双重属性，民族革命与民主革命；中国革命的两大任务，反帝、反封建；三座大山，帝国主义、封建主义、官僚资本主义；四根绳索，政权、族权、神权、夫权；五场战争，鸦片战争、第二次鸦片战争、中法战争、中日甲午战争、八国联军侵华战争。</p><h3 id="3-新民主主义新在何处？"><a href="#3-新民主主义新在何处？" class="headerlink" title="3.新民主主义新在何处？"></a>3.新民主主义新在何处？</h3><ol><li>第一，新民主主义革命处于世界无产阶级社会主义革命的时代，是世界无产阶级社会主义革命的一部分；（<strong>时代不同</strong>）</li><li>第二，新民主主义革命的领导力量是中国无产阶级及其先锋队——中国共产党；（<strong>领导阶级不同</strong>）（区别新旧两类革命的最根本标志）</li><li>第三，新民主主义革命的指导思想是马克思列宁主义；（<strong>指导思想不同</strong>）</li><li>第四，新民主主义革命的前途是社会主义而不是资本主义。</li></ol><h3 id="4-新民主主义革命的总路线和基本纲领：P24、P31"><a href="#4-新民主主义革命的总路线和基本纲领：P24、P31" class="headerlink" title="4.新民主主义革命的总路线和基本纲领：P24、P31"></a>4.新民主主义革命的总路线和基本纲领：P24、P31</h3><p>​    <strong>总路线</strong>：无产阶级领导的，人民大众的，反对帝国主义、封建主义和官僚资本主义的革命。</p><p>​    基本纲领：新民主主义的基本纲领是新民主主义革命总路线得进一步展开和体现，为新民主主义革命指明了奋斗目标。</p><p>​    新民主主义的<strong>政治纲领</strong>是推翻帝国主义和封建主义的统治，建立一个无产阶级领导的以工农联盟为基础的各革命阶级联合专政的新民主主义的共和国。</p><p>​        新民主主义的<strong>经济纲领</strong>是没收封建地主阶级的土地归农民所有，没收官僚资产阶级的垄断资本归新民主主义的国家所有，保护民族工商业。</p><p>​        新民主主义的<strong>文化纲领</strong>是无产阶级领导的人民大众的、反帝反封建的文化，即民族的、科学的、大众的文化。</p><h3 id="5-区分新旧两种不同范畴的民主主义革命的根本标志：p28"><a href="#5-区分新旧两种不同范畴的民主主义革命的根本标志：p28" class="headerlink" title="5.区分新旧两种不同范畴的民主主义革命的根本标志：p28"></a>5.区分新旧两种不同范畴的民主主义革命的根本标志：p28</h3><p>​    革命的领导权是掌握在无产阶级（新）手中还是掌握在资产阶级（旧）手中。</p><h3 id="6-动力？领导力量？敌人？p25-26-27"><a href="#6-动力？领导力量？敌人？p25-26-27" class="headerlink" title="6.动力？领导力量？敌人？p25 26 27"></a>6.动力？领导力量？敌人？p25 26 27</h3><ol><li>动力：新民主主义的革命的动力包括无产阶级、农民阶级、城市小资产阶级和民族资产阶级。</li><li>领导力量：中国无产阶级及其政党。</li><li>敌人：帝国主义、封建主义、官僚资本主义</li></ol><h3 id="7-革命道路、三大法宝-p34-36"><a href="#7-革命道路、三大法宝-p34-36" class="headerlink" title="7.革命道路、三大法宝  p34 36"></a>7.革命道路、三大法宝  p34 36</h3><p>​    革命道路：农村包围城市、武装夺取政权</p><p>​    三大法宝：统一战线、武装斗争、党的建设</p><h3 id="8-革命意义：p41"><a href="#8-革命意义：p41" class="headerlink" title="8.革命意义：p41"></a>8.革命意义：p41</h3><ol><li>中国新民主主义革命的胜利，结束了帝国主义、封建主义和官僚资本主义在中国的统治，建立了人民民主专政的新中国。</li><li>中国新民主主义革命的胜利，对世界历史的发展也发生了巨大的影响。</li><li>中国革命的胜利，是马克思列宁主义、毛泽东思想的胜利。</li></ol><h3 id="9-新民主主义国家的国体和政体：P31"><a href="#9-新民主主义国家的国体和政体：P31" class="headerlink" title="9.新民主主义国家的国体和政体：P31"></a>9.新民主主义国家的国体和政体：P31</h3><p>​    国体：各革命阶层联合专政</p><p>​    政体：民主集中制的人民代表大会制度</p><h3 id="10-两头小、中间大指的是？"><a href="#10-两头小、中间大指的是？" class="headerlink" title="10.两头小、中间大指的是？"></a>10.两头小、中间大指的是？</h3><p>​    “两头小”指工人阶级和官僚资产阶级。</p><p>​    “中间大”指农民阶级、小资产阶级、民族资产阶级。</p><h3 id="11-建设社会主义社会的两个步骤："><a href="#11-建设社会主义社会的两个步骤：" class="headerlink" title="11.建设社会主义社会的两个步骤："></a>11.建设社会主义社会的两个步骤：</h3><ol><li>新民主主义革命—-&gt;新民主主义社会</li><li>社会主义革命（三大改造） —-&gt;社会主义社会</li></ol><h2 id="专题四-社会主义改造理论"><a href="#专题四-社会主义改造理论" class="headerlink" title="专题四 社会主义改造理论"></a>专题四 社会主义改造理论</h2><h3 id="1-新民主主义社会是一个过渡性的社会"><a href="#1-新民主主义社会是一个过渡性的社会" class="headerlink" title="1.新民主主义社会是一个过渡性的社会"></a>1.新民主主义社会是一个过渡性的社会</h3><p>​    新民主主义社会的五种经济成分：社会主义性质的国营经济；半社会主义性质的合作社经济；农民和手工业者的个人经济；私人资本主义经济；国家资本主义经济</p><p>​    主要的三种经济成分：社会主义经济、个体经济和资本主义经济。</p><p>​    经济基础决定社会性质。</p><h3 id="2-矛盾"><a href="#2-矛盾" class="headerlink" title="2. 矛盾"></a>2. 矛盾</h3><p>​    社会主义和资本主义两条道路、工人阶级和资产阶级两个阶级的矛盾。</p><p>​    随着土地改革的基本完成，无产阶级和资产阶级的矛盾逐步成为国内的主要矛盾，而解决这一矛盾必然使中国社会实现向社会主义的转变。</p><h3 id="3-过渡时期的总路线"><a href="#3-过渡时期的总路线" class="headerlink" title="3.过渡时期的总路线"></a>3.过渡时期的总路线</h3><p>​    主要内容：<strong>一化三改</strong></p><p>​    一化：社会主义工业化</p><p>​    三改：对个体农业、手工业和资本主义工商业的社会主义改造。</p><p>​    其中一化是主体，三改是两翼。</p><p>​    这是一条社会主义建设和社会主义改造并举的路线</p><h3 id="4-1956年中国进入社会主义社会"><a href="#4-1956年中国进入社会主义社会" class="headerlink" title="4.1956年中国进入社会主义社会"></a>4.1956年中国进入社会主义社会</h3><h3 id="5-社会主义基本制度的确立及其理论依据："><a href="#5-社会主义基本制度的确立及其理论依据：" class="headerlink" title="5.社会主义基本制度的确立及其理论依据："></a>5.社会主义基本制度的确立及其理论依据：</h3><p>​    农业、手工业和资本主义工商业的社会主义改造的基本完成</p><h2 id="专题五-社会主义建设道路初步探索理论"><a href="#专题五-社会主义建设道路初步探索理论" class="headerlink" title="专题五 社会主义建设道路初步探索理论"></a>专题五 社会主义建设道路初步探索理论</h2><h3 id="1-时间：1956-1966"><a href="#1-时间：1956-1966" class="headerlink" title="1.时间：1956-1966"></a>1.时间：1956-1966</h3><p>​    1949-1956：新民主主义社会时期</p><p>​    1966-1976：十年文革</p><h3 id="2-初步探索的重要理论成果"><a href="#2-初步探索的重要理论成果" class="headerlink" title="2.初步探索的重要理论成果"></a>2.初步探索的重要理论成果</h3><p>​    1. 调动一切积极因素为社会主义事业服务（论十大关系）</p><p>​        2. 正确认识和处理社会主义社会矛盾的思想（关于正确处理人民内部矛盾的问题）</p><h3 id="3-初步探索的意义和经验教训"><a href="#3-初步探索的意义和经验教训" class="headerlink" title="3.初步探索的意义和经验教训"></a>3.初步探索的意义和经验教训</h3><ol><li>意义：<ul><li>第一，巩固和发展了我国的社会主义制度</li><li>第二，为开创中国特色社会主义提供了宝贵经验、理论准备、物质基础</li><li>第三，丰富了科学社会主义的理论和实践</li></ul></li><li>经验教训<ul><li>第一，必须把马克思主义与中国实际相结合，探索符合中国特点的社会主义道路；</li><li>第二，必须正确认识社会主义的主要矛盾和根本任务，集中发展生产力；</li><li>第三，必须从实际出发进行社会主义建设，建设规模和速度要和国力相适应，不能急于求成；</li><li>第四，必须发展社会主义民主，健全社会主义法制；</li><li>第五，必须坚持党的民主集中制和集体领导制度，加强执政党的建设；</li><li>第六，必须坚持对外开放，借鉴和吸收人类文明成果建设社会主义，不能关起门来搞建设。</li></ul></li></ol><h3 id="4-论十大关系"><a href="#4-论十大关系" class="headerlink" title="4.论十大关系"></a>4.论十大关系</h3><ol><li>重工业和轻工业、农业的关系；</li><li>沿海工业和内地工业的关系；</li><li>经济建设和国防建设的关系；</li><li>国家、生产单位和生产者个人的关系；</li><li>中央和地方的关系；</li><li>汉族与少数民族的关系；</li><li>党与非党的关系；</li><li>革命和反革命的关系；</li><li>是非关系；</li><li>中国和外国的关系。</li></ol><h1 id="第三部分-中国人民富起来"><a href="#第三部分-中国人民富起来" class="headerlink" title="第三部分 中国人民富起来"></a>第三部分 中国人民富起来</h1><h2 id="专题六-邓小平理论"><a href="#专题六-邓小平理论" class="headerlink" title="专题六  邓小平理论"></a>专题六  邓小平理论</h2><p> 力挽狂澜——开辟中国特色社会主义新道路</p><h3 id="1-主题"><a href="#1-主题" class="headerlink" title="1.主题"></a>1.主题</h3><p>​    <strong>什么是社会主义？</strong>  社会主义本质论（p95）见4.</p><p>​    <strong>怎么建设社会主义？</strong>  社会主义初级阶段论（1987年十三大）思想路线，三步走战略，改革开放，一国两制。</p><h3 id="2-形成过程"><a href="#2-形成过程" class="headerlink" title="2.形成过程"></a>2.形成过程</h3><ol><li><p>1978年12月党的十一届三中全会，确立了<u>解放思想，实事求是</u>的<strong>思想路线</strong>；</p><p>工作重心由以阶级斗争为纲转移到以经济建设为中心</p></li><li><p>1987年党的十三大第一次比较系统地论述了<strong>社会主义初级阶段理论</strong>，邓小平理论<strong>轮廓形成时期</strong>；</p></li><li><p>1992年南方谈话，邓小平理论逐步走向<strong>成熟</strong>；</p></li><li><p>1992年十四大报告系统阐述了邓小平理论的历史地位和指导意义。</p></li><li><p>1997年党的十五大<strong>正式提出</strong>邓小平理论这一概念，并将邓小平理论同马克思列宁主义、毛泽东思想一起确立为党的指导思想，并<strong>写入党章</strong>；</p></li><li><p>1999年，邓小平理论<strong>载入宪法</strong>；</p></li></ol><h3 id="3-一个中心，两个基本点"><a href="#3-一个中心，两个基本点" class="headerlink" title="3.一个中心，两个基本点"></a>3.一个中心，两个基本点</h3><p>（社会主义初级阶段论提出）</p><p>​    一个中心：以经济建设为中心；</p><p>​    两个基本点：坚持四项基本原则、坚持改革开放</p><h3 id="4-社会主义本质"><a href="#4-社会主义本质" class="headerlink" title="4.社会主义本质"></a>4.社会主义本质</h3><p>​    <strong>社会主义的本质是，解放生产力，发展生产力，消灭剥削，消除两极分化，最终达到共同富裕</strong></p><h3 id="5-邓小平理论的主要内容"><a href="#5-邓小平理论的主要内容" class="headerlink" title="5.邓小平理论的主要内容"></a>5.邓小平理论的主要内容</h3><ol><li><p>解放思想、实事求是的思想路线；</p></li><li><p>社会主义初级阶段理论；</p><p>（十三大 1987年）见6.</p><p><strong>社会主义初级阶段理论是建设中国特色社会主义的总依据</strong></p></li><li><p>党的基本路线；</p></li><li><p>社会主义根本任务理论；</p></li><li><p>“三步走”战略；</p></li><li><p>改革开放理论；</p></li><li><p>社会主义市场经济理论；</p></li><li><p>“两手抓，两手都要硬”；</p></li><li><p>“一国两制”；</p></li><li><p>中国问题的关键在于党</p></li></ol><h3 id="6-社会主义初级阶段理论"><a href="#6-社会主义初级阶段理论" class="headerlink" title="6.社会主义初级阶段理论"></a>6.社会主义初级阶段理论</h3><ol><li>提出时间：1987年十三大，邓小平</li><li>主要内容：社会主义初级阶段是指，我国在生产力落后、商品经济不发达条件下建设社会主义必然要经历的特定阶段，即从我国进入社会主义到基本实现社会主义现代化的整个历史阶段。（<strong>长期性、复杂性、艰巨性</strong>）</li><li>两层含义：<ul><li>我国已经进入社会主义，必须坚持而不能离开社会主义。</li><li>我国的社会主义社会还处在不发达的阶段，必须正视而不能超越初级阶段。</li></ul></li><li>意义：<u>社会主义初级阶段理论是建设中国特色社会主义的总依据</u></li></ol><h3 id="7-党的基本路线"><a href="#7-党的基本路线" class="headerlink" title="7.党的基本路线"></a>7.党的基本路线</h3><p>​    <u>领导和团结全国各族人民，<strong>以经济建设为中心，坚持四项基本原则，坚持改革开放</strong>，自力更生，艰苦创业，为把我国建设成为富强、民主、文明的社会主义现代化国家而奋斗。</u>   （和谐、美丽的现代化强国）</p><h3 id="8-三步走战略"><a href="#8-三步走战略" class="headerlink" title="8.三步走战略"></a>8.三步走战略</h3><ol><li>第一步，从1981年到1990年实现国民生产总值比1980年翻一番，解决人民的温饱问题；</li><li>第二步，从1991年到20世纪末，使国民生产总值再翻一番，达到小康水平；</li><li>第三步，到21世纪中叶，国民生产总值再翻两番，达到中等发达国家水平，基本实现现代化。</li></ol><h3 id="9-改革开放理论"><a href="#9-改革开放理论" class="headerlink" title="9.改革开放理论"></a>9.改革开放理论</h3><p>​    <strong>改革开放是中国的第二次革命。</strong></p><p>​    中国共产党领导的第一次革命，把一个半殖民地半封建的旧中国变成了一个社会主义新中国；</p><p>​    中国共产党领导的第二次革命，把一个经济文化比较落后的社会主义中国变成一个现代化的社会主义国家。</p><h3 id="10-一国两制"><a href="#10-一国两制" class="headerlink" title="10.一国两制"></a>10.一国两制</h3><p>​    主要内容：<strong>坚持一个中国</strong>，这是“和平统一，一国两制”的<strong>核心</strong>，是发展两岸关系和实现和平统一的<strong>基础</strong>；<strong>两制并存</strong>，在祖国统一的<strong>前提</strong>下，国家主体部分实行社会主义制度，同时在台湾、香港、澳门保持原有的社会制度和生活方式长期不变；<strong>高度自治</strong>，祖国完全统一后，台湾、香港、澳门作为特别行政区，享有不同于中国其他省、市、自治区的高度自治权，台湾、香港、澳门同胞各种合法权益将得到切实尊重和维护；<strong>尽最大努力争取和平统一</strong>，但不承诺放弃使用武力；<strong>解决台湾问题</strong>，实现祖国完全统一，寄希望于台湾人民。</p><h3 id="11-邓小平理论的历史地位"><a href="#11-邓小平理论的历史地位" class="headerlink" title="11.邓小平理论的历史地位"></a>11.邓小平理论的历史地位</h3><ol><li>马克思列宁主义、毛泽东思想的继承和发展；</li><li>中国特色社会主义理论体系的开篇之作；</li><li>改革开放和社会主义现代化建设的科学指南；</li></ol><h2 id="专题七-三个代表重要思想"><a href="#专题七-三个代表重要思想" class="headerlink" title="专题七  三个代表重要思想"></a>专题七  三个代表重要思想</h2><p>披荆斩棘——拓宽中国特色社会主义新道路（江泽民）</p><h3 id="1-主题-1"><a href="#1-主题-1" class="headerlink" title="1.主题"></a>1.主题</h3><p>​    建设一个什么样的党？怎样建设党？</p><h3 id="2-形成过程-1"><a href="#2-形成过程-1" class="headerlink" title="2.形成过程"></a>2.形成过程</h3><ol><li>十五大（1997）之后，江泽民考察工作中<strong>提出</strong>三个代表重要思想；</li><li>十六大（2002），<strong>写入党章</strong>。</li></ol><h3 id="3-核心观点"><a href="#3-核心观点" class="headerlink" title="3.核心观点"></a>3.核心观点</h3><ol><li>始终代表中国先进生产力的发展要求（<strong>前提和基础</strong>）</li><li>始终代表中国先进文化的前进方向（<strong>致力支持，反作用</strong>）</li><li>始终代表中国最广大人民的根本利益（<strong>最终的落脚点</strong>）</li></ol><h3 id="4-主要内容"><a href="#4-主要内容" class="headerlink" title="4.主要内容"></a>4.主要内容</h3><ol><li><p>发展是党执政兴国的第一要务</p></li><li><p>建立社会主义市场经济体制     1992年（十四大）</p><p>建立社会主义市场经济体制，必须坚持和完善公有制为主体、多种所有制经济共同发展的社会主义基本制度。</p></li><li><p>全面建设小康社会</p></li><li><p>建设社会主义政治文明</p></li><li><p>推进党的建设新的伟大工程</p></li></ol><h3 id="5-历史地位"><a href="#5-历史地位" class="headerlink" title="5.历史地位"></a>5.历史地位</h3><ol><li>中国特色社会主义理论体系的接续发展。</li><li>加强和改进党的建设，推进中国特色社会主义事业的强大理论武器。</li></ol><h2 id="专题八-科学发展观"><a href="#专题八-科学发展观" class="headerlink" title="专题八  科学发展观"></a>专题八  科学发展观</h2><p>科学转型——发展中国特色社会主义新道路（胡锦涛）</p><h3 id="1-主题-2"><a href="#1-主题-2" class="headerlink" title="1.主题"></a>1.主题</h3><p>​    要实现什么样的发展？怎么发展？</p><h3 id="2-科学内涵-1"><a href="#2-科学内涵-1" class="headerlink" title="2.科学内涵"></a>2.科学内涵</h3><p>​    <strong>第一要义</strong>   是发展，</p><p>​    <strong>核心立场</strong>   是以人为本，</p><p>​    <strong>基本要求</strong>   是全面协调可持续，</p><p>​    <strong>根本方法</strong>   是统筹兼顾。</p><h3 id="3-形成过程"><a href="#3-形成过程" class="headerlink" title="3.形成过程"></a>3.形成过程</h3><ol><li>2003年党的十六届三中全会第一次<strong>提出</strong>；</li><li>2004年，科学发展观<strong>形成</strong>；</li><li>2007年十七大<strong>写入党章</strong>，成为党必须长期坚持的指导思想；</li></ol><h3 id="4-精神实质"><a href="#4-精神实质" class="headerlink" title="4.精神实质"></a>4.精神实质</h3><p>​    解放思想、实事求是、与时俱进、求真务实，是科学发展观最鲜明的精神实质。</p><h3 id="5-历史地位-1"><a href="#5-历史地位-1" class="headerlink" title="5.历史地位"></a>5.历史地位</h3><ol><li>中国特色社会主义理论体系的接续发展；</li><li>发展中国特色社会主义必须长期坚持的指导思想；</li></ol><h1 id="第四部分-中国人民强起来"><a href="#第四部分-中国人民强起来" class="headerlink" title="第四部分  中国人民强起来"></a>第四部分  中国人民强起来</h1><h2 id="专题九-中国特色社会主义新时代"><a href="#专题九-中国特色社会主义新时代" class="headerlink" title="专题九     中国特色社会主义新时代"></a>专题九     中国特色社会主义新时代</h2><p>​    进入新时代：党的十八大（2012年10月18日-24日）习近平</p><h3 id="1-主题-3"><a href="#1-主题-3" class="headerlink" title="1.主题"></a>1.主题</h3><p>​    坚持和发展什么样的中国特色社会主义？</p><p>​    怎样坚持和发展中国特色社会主义？</p><h3 id="2-社会矛盾的变化"><a href="#2-社会矛盾的变化" class="headerlink" title="2.社会矛盾的变化"></a>2.社会矛盾的变化</h3><p>​    历史主要矛盾：人民日益增长的物质文化需要同落后的社会生产之间的矛盾；</p><p>​    现在主要矛盾：人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾；</p><p>​    我国仍处于并将长期处于社会主义初级阶段的<strong>基本国情</strong>，我国是世界最大发展中国家的<strong>国际地位</strong>没有变。</p><h3 id="3-新时代的内涵和意义"><a href="#3-新时代的内涵和意义" class="headerlink" title="3.新时代的内涵和意义"></a>3.新时代的内涵和意义</h3><p><strong>内涵：</strong></p><ol><li>这个新时代是承前启后、继往开来，在新的历史条件下继续夺取中国特色社会主义伟大胜利的时代；</li><li>这个新时代是决胜全面建成小康社会、进而全面建设社会主义现代化强国的时代；</li><li>这个新时代是全国各族人民团结奋斗、不断创造美好生活、逐步实现全体人民共同富裕的时代；</li><li>这个新时代是全体中国中华儿女勠力同心、奋力实现中华民族伟大复兴中国梦的时代；</li><li>这个新时代是我国日益走近世界舞台中央、不断为人类做出更大贡献的时代；</li></ol><p><strong>意义：</strong></p><ol><li>第一，从中华民族复兴的历史进程看，中国特色社会主义进入新时代，意味着近代以来久经磨难的中华民族迎来了从站起来、富起来到强起来的伟大飞跃，迎来了实现中华民族伟大复兴的光明前景；</li><li>第二，从科学社会主义发展进程看，中国特色社会主义进入新时代，意味着科学社会主义在21世纪的中国焕发出强大生机活力，在世界上高高举起了中国特色社会主义伟大旗帜；</li><li>第三，从人类文明进程看，中国特色社会主义进入新时代，意味着中国特色社会主义道理、理论、制度、文化不断发展，拓展了发展中国家走向现代化的途径，给世界上那些既希望加快发展又希望保持自身独立性的国家和民族提供了全新选择，为解决人类问题贡献了中国智慧和中国方案；</li></ol><h3 id="4-习近平新时代中国特色社会主义思想的主要内容（八个明确）"><a href="#4-习近平新时代中国特色社会主义思想的主要内容（八个明确）" class="headerlink" title="4.习近平新时代中国特色社会主义思想的主要内容（八个明确）"></a>4.习近平新时代中国特色社会主义思想的主要内容（八个明确）</h3><p>​    第一、明确坚持 和发展中国特色社会主义，总任务是实现社会主义现代化和中华民族伟大复兴，在全面建成小康社会的基础上，分两步走在本世纪中叶建成富强民主文明和谐美丽的社会主义现代化强国。</p><p>​    第二、明确新时代我国社会主要矛盾是人民益增长的美好生活需要和不平衡不充分的发展之间的矛盾，必须坚持以人民为中心的发展思想，不断促进人的全面发展、全体人民共同富裕。</p><p>​    第三、明确中国特色社会主义事业总体布局是“五位一体”、战略布局是“四个全面”，强调坚定道路自信、理论自信、制度自信、文化自信。</p><p>​    第四、明确全面深化改革总目标是完善和发展中国特色社会主义制度、推进国家治理体系和治理能力现代化。</p><p>​    第五、明确全面推进依法治国总目标是建设中国特色社会主义法治体系、建设社会主义法治国家。</p><p>​    第六、明确党在新时代的强军目标是建设一支听党指挥、能打胜仗、作风优良的人民军队，把人民军队建设成为世界一流军队。</p><p>​    第七、明确中国特色大国外交要推动构建新型国际关系，推动构建人类命运共同体。</p><p>​    第八、明确中国特色社会主义最本质的特征是中国共产党领导，中国特色社会主义制度的最大优势是中国共产党领导，党是最高政治领导力量，提出新时代党的建设总要求，突出政治建设在党的建设中的重要地位。</p><p>​    这“八个明确”，高度凝练、提纲挈领地点明了习近平新时代中国特色社会主义思想的主要内容。</p><h3 id="5-坚持和发展中国特色社会主义的基本方略（十四个坚持）"><a href="#5-坚持和发展中国特色社会主义的基本方略（十四个坚持）" class="headerlink" title="5.坚持和发展中国特色社会主义的基本方略（十四个坚持）"></a>5.坚持和发展中国特色社会主义的基本方略（十四个坚持）</h3><ol><li>坚持党对一切工作的领导</li><li>坚持以人民为中心</li><li>坚持全面深化改革</li><li>坚持新发展理念</li><li>坚持人民当家作主</li><li>坚持全面依法治国</li><li>坚持社会主义核心价值体系</li><li>坚持在发展中保障和改善民生</li><li>坚持人与自然和谐共生</li><li>坚持总体国家安全观</li><li>坚持党对人民军队的绝对领导</li><li>坚持一国两制和推进祖国统一</li><li>坚持推动构建人类命运共同体</li><li>坚持全面从严治党</li></ol><h3 id="6-两个一百年："><a href="#6-两个一百年：" class="headerlink" title="6.两个一百年："></a>6.两个一百年：</h3><ol><li>第一个一百年，是到中国共产党成立100年时（2021年）全面建成小康社会；</li><li>第二个一百年，是到新中国成立100年时（2049年）建成富强、民主、文明、和谐的社会主义现代化国家。</li></ol><h3 id="7-实现社会主义现代化强国“两步走”战略的具体安排：P203"><a href="#7-实现社会主义现代化强国“两步走”战略的具体安排：P203" class="headerlink" title="7.实现社会主义现代化强国“两步走”战略的具体安排：P203"></a>7.实现社会主义现代化强国“两步走”战略的具体安排：P203</h3><ol><li>从2020年到2035年，基本实现社会主义现代化的目标要求。</li><li>从2035年到本世纪中叶，建成社会主义现代化强国的目标要求</li></ol><h3 id="8-习近平新时代中国特色社会主义思想的历史地位"><a href="#8-习近平新时代中国特色社会主义思想的历史地位" class="headerlink" title="8.习近平新时代中国特色社会主义思想的历史地位"></a>8.习近平新时代中国特色社会主义思想的历史地位</h3><ol><li>马克思主义中国化的最新成果；</li><li>新时代的精神旗帜；</li><li>实现中华民族伟大复兴的行动指南；</li></ol><h2 id="专题十-五位一体总布局"><a href="#专题十-五位一体总布局" class="headerlink" title="专题十 五位一体总布局"></a>专题十 五位一体总布局</h2><h2 id="一、建设现代化经济体系"><a href="#一、建设现代化经济体系" class="headerlink" title="一、建设现代化经济体系"></a>一、建设现代化经济体系</h2><h3 id="1-贯彻五大新发展理念"><a href="#1-贯彻五大新发展理念" class="headerlink" title="1.贯彻五大新发展理念"></a>1.贯彻五大新发展理念</h3><ol><li><p>创新、协调、绿色、开放、共享，五个之中最重要的是创新。</p><ul><li>创新是引领发展的<strong>第一动力</strong>；</li><li>协调是持续健康发展的<strong>内在要求</strong>；</li><li>绿色是永续发展的<strong>必要条件</strong>；</li><li>开放是国家繁荣发展的<strong>必由之路</strong>；</li><li>共享是中国特色社会主义的<strong>本质要求</strong>。</li><li>共享的内涵（四个内涵）：<u>全民共享、全面共享、共建共享、渐进共享</u></li></ul></li><li><p>关系：</p><p>​    <u>创新、协调、绿色、开放、共享的新发展理念，相互贯通、相互促进，是具有内在联系的集合体。</u></p><p>​    <strong>创新</strong>注重的是解决发展动力问题；</p><p>​    <strong>协调</strong>注重的是解决发展不平衡问题；</p><p>​    <strong>绿色</strong>注重的是解决人与自然和谐问题；</p><p>​    <strong>开放</strong>注重的是解决发展内外联动问题；</p><p>​    <strong>共享</strong>注重的是解决社会公平正义问题。</p></li></ol><h3 id="2-深化供给侧结构性改革"><a href="#2-深化供给侧结构性改革" class="headerlink" title="2.深化供给侧结构性改革"></a>2.深化供给侧结构性改革</h3><ol><li>第一、推进增长动能转换，以加快发展先进制造业为重点全面提升实体经济；</li><li>第二、深化要素市场化配置改革，实现由以价取胜到以质取胜的转变；</li><li>第三、加大人力资本培育力度，更加注重调动和保护人的积极性；</li><li>第四、持续推进“三去一降一补”，优化市场供求结构。</li></ol><h3 id="3-建设现代化经济体系"><a href="#3-建设现代化经济体系" class="headerlink" title="3.建设现代化经济体系"></a>3.建设现代化经济体系</h3><ol><li>我国经济已由高速增长阶段转向高质量发展阶段，正处于在转变发展方式、优化经济结构、转变增长动力的攻关期。</li><li>六个体系，一个体制（p212）：<br>现代化经济体系，现代市场体系，收入分配体系，城乡区域发展体系，绿色发展体系，全面开放体系。<br>经济体制：有效、微观主体有活力，宏观调控有度。</li></ol><h3 id="4-建设现代化经济体系的主要任务"><a href="#4-建设现代化经济体系的主要任务" class="headerlink" title="4.建设现代化经济体系的主要任务"></a>4.建设现代化经济体系的主要任务</h3><ol><li>第一、大力发展实体经济；</li><li>第二、加快实施创新驱动发展战略；</li><li>第三、激发各类市场主体活力；</li><li>第四、积极推动城乡区域协调发展；</li><li>第五、着力发展开放型经济；</li><li>第六、加快完善社会主义市场经济体制。</li></ol><h2 id="二、发展社会主义民主政治"><a href="#二、发展社会主义民主政治" class="headerlink" title="二、发展社会主义民主政治"></a>二、发展社会主义民主政治</h2><h3 id="1-坚持中国特色社会主义政治发展道路"><a href="#1-坚持中国特色社会主义政治发展道路" class="headerlink" title="1.坚持中国特色社会主义政治发展道路"></a>1.坚持中国特色社会主义政治发展道路</h3><p>​    走中国特色社会主义政治发展道路，必须坚持<u>党的领导、人民当家作主、依法治国</u>有机统一。</p><ol><li>党的领导是 人民当家作主和依法治国的根本保证；</li><li>人民当家作主是社会主义民主政治的本质特征；</li><li>依法治国是党领导人民治理国家的基本方式；</li></ol><ul><li>根本国家制度：社会主义制度；（国体） </li><li>根本政治制度：人民代表大会制度；（政体）</li><li>基本政治制度：包括中国共产党领导的多党合作和政治协商制度、民族区域自治制度以及基层群众自治制度；</li></ul><h3 id="2-爱国统一战线"><a href="#2-爱国统一战线" class="headerlink" title="2.爱国统一战线"></a>2.爱国统一战线</h3><p>​    主题：大团结，大联合；（P218）</p><p>​    社会主义的建设事业必须依靠工人、农民和知识分子，团结一切可以团结的力量。要高举爱国主义、社会主义旗帜，牢牢把握大团结大联合的主题，坚持一致性和多样性统一，找到最大公约数，画出最大同心圆。</p><h3 id="3-一国两制"><a href="#3-一国两制" class="headerlink" title="3.一国两制"></a>3.一国两制</h3><ul><li><p>基本点：</p><ul><li>一、  一个中国。世界上只有一个中国，以中华人民共和国为主体，大陆和台湾同属于一个中国，中国的主权不容侵犯，中国的领土不容分割。</li><li>二、  两制并存。一个中国的前提下，国家的主体部分实行社会主义制度。同时在香港、澳门、台湾保持原有的资本主义制度长期不变。</li><li>三、  高度自治。祖国完全统一后，台湾、香港、澳门将成为特别行政区。它不同于中国其他一般省区，享有高度的自治权。</li><li>四、  和平谈判。尽最大努力争取和平统一，但不承诺放弃使用武力。</li><li>五、  解决台湾问题，实现祖国完全统一，寄希望于台湾人民。台湾同胞具有光荣的爱国主义传统，是发展两岸关系的重要力量。</li></ul></li><li><p>一国和两制的关系：</p><p>“一国”是实行“两制”的<strong>前提和基础</strong>；</p><p>“两制”<strong>从属和派生</strong>于“一国”，并<strong>统一</strong>于“一国”之内。</p></li></ul><p>  一国两治的前提是坚持只有一个中国即中华人民共和国；</p><p>  五个基本点是:基本立场、基本目标、基本准则、基本立足点、基本国策；</p><p>  “一国”和“两制”的关系：<br>  “一国两制”是一个完整的概念。“一国”是实行，“两制”是前提和基础，“两制”从属和派生于“一国”，并统一于“一国”之内。“一国”是根，根深才能叶茂；“一国”是本，本固才能枝荣。</p><p>  “一国两制”的提出首先是为了实现和维护国家统一。</p><h2 id="三、社会主义文化"><a href="#三、社会主义文化" class="headerlink" title="三、社会主义文化"></a>三、社会主义文化</h2><h3 id="1-意识形态"><a href="#1-意识形态" class="headerlink" title="1.意识形态"></a>1.意识形态</h3><ol><li>重要性：意识形态关乎旗帜、关乎道路、关乎国家政治安全，决定文化前进方向和道路。</li><li>主要作用：强大凝聚力。</li></ol><h3 id="2-社会主义核心价值观"><a href="#2-社会主义核心价值观" class="headerlink" title="2.社会主义核心价值观"></a>2.社会主义核心价值观</h3><p>习近平当选总书记（2012年十八大提出）</p><ol><li><p>核心价值观是一个民族赖以维系的精神纽带，是一个国家共同的思想道德基础。</p></li><li><p>核心价值观是一个国家重要稳定器，能否构建具有强大感召力的核心价值观，关系社会和谐稳定，关系国家长治久安。</p><p><strong>富强、民主、文明、和谐（国家层面）</strong><br><strong>自由、平等、公正、法治（社会层面）</strong><br><strong>爱国、敬业、诚信、友善（个人层面）</strong></p></li></ol><h3 id="3-文化自信，文化自省"><a href="#3-文化自信，文化自省" class="headerlink" title="3.文化自信，文化自省"></a>3.文化自信，文化自省</h3><ol><li>文化是一个国家、一个民族的灵魂，是人民的精神家园，也是政党的精神旗帜。</li><li>文化兴国运兴，文化强国运强。没有高度的文化自信，没有文化的繁荣兴盛，就没有中华民族伟大复兴…（P230） </li></ol><h3 id="4-四个自信"><a href="#4-四个自信" class="headerlink" title="4.四个自信"></a>4.四个自信</h3><ol><li>中国特色社会主义道路自信；</li><li>理论自信；</li><li>制度自信；</li><li>文化自信；</li></ol><h2 id="四、民生"><a href="#四、民生" class="headerlink" title="四、民生"></a>四、民生</h2><h3 id="1-提高保障和改善民生水平"><a href="#1-提高保障和改善民生水平" class="headerlink" title="1.提高保障和改善民生水平"></a>1.提高保障和改善民生水平</h3><p>​    在中国特色社会主义新时代，我们要以更大的力度、更实的措施保障和改善民生，加强和创新社会治理，坚决打赢脱贫攻坚战，促进社会公平正义，在幼有所育、学有所教、劳有所得、病有所医、老有所养、住有所居、弱有所扶上不断取得新发展，让实现全体人民共同富裕在广大人民现实生活中更加充分的展示出来。</p><p>举措：</p><ol><li>第一、优先发展教育事业；</li><li>第二、提高就业质量和人民收入水平；</li><li>第三、加强社会保障体系建设；</li><li>第四、坚决打赢脱贫攻坚战；</li><li>第五、实施健康中国战略。</li></ol><h3 id="2-加强和创新社会治理：P233"><a href="#2-加强和创新社会治理：P233" class="headerlink" title="2.加强和创新社会治理：P233"></a>2.加强和创新社会治理：P233</h3><p>1.创新社会治理体制；</p><p>2.改进社会治理方式；</p><p>3.加强预防和化解社会矛盾机制建设；</p><p>4.加强社会心理服务体系建设；</p><p>5.加强社区治理体系建设。</p><h3 id="3-坚持总体国家安全观"><a href="#3-坚持总体国家安全观" class="headerlink" title="3.坚持总体国家安全观"></a>3.坚持总体国家安全观</h3><p>​    总体国家安全观是指坚持国家利益至上，以人民安全为宗旨，以政治安全为根本，以经济安全为基础，以军事、文化、社会安全为保障，以促进国际安全为依托，维护各领域国家安全，构建国家安全体系，走中国特色国家安全道路。</p><p>举措：（五个方面 P235-236）：</p><ol><li>第一、完善国家安全体系；(政治国土军事经济文化社会科技信息生态资源核安全)</li><li>第二、健全公共安全体系；</li><li>第三、推进平安中国建设；</li><li>第四、加强国家安全能力建设；</li><li>第五、加强国家安全教育。</li></ol><h2 id="五、生态文明建设"><a href="#五、生态文明建设" class="headerlink" title="五、生态文明建设"></a>五、生态文明建设</h2><h3 id="1-坚持人与自然和谐共生：P237"><a href="#1-坚持人与自然和谐共生：P237" class="headerlink" title="1.坚持人与自然和谐共生：P237"></a>1.坚持人与自然和谐共生：P237</h3><ol><li>核心：坚持人与自然和谐共生。</li><li>含义：生态文明建设是指人类再利用和改造自然的过程中，主动保护自然，积极改善和优化人与自然的关系，建设健康有序的生态运行机制和良好的生态环境。</li><li>生态文明建设的重要地位：用之不觉，失之难存。</li></ol><h3 id="2-形成人与自然和谐发展的新格局：P239"><a href="#2-形成人与自然和谐发展的新格局：P239" class="headerlink" title="2.形成人与自然和谐发展的新格局：P239"></a>2.形成人与自然和谐发展的新格局：P239</h3><ol><li>第一、把节约资源放在首位；</li><li>第二、坚持保护优先、自然恢复为主；</li><li>第三、着力推进绿色发展、循环发展、低碳发展。</li><li>第四、形成节约资源和保护环境的空间格局、产业结构、生产方式、生活方式。</li></ol><h3 id="3-建设美丽中国"><a href="#3-建设美丽中国" class="headerlink" title="3.建设美丽中国"></a>3.建设美丽中国</h3><p>​    建设美丽中国，要树立人与自然和谐共生的基本理念，实现最严格的环境保护政策，坚持绿色发展，加快生态文明体制改革（P240）。</p><p>生态文明体制改革：</p><ol><li>推进绿色发展；</li><li>着力解决突出环境问题；</li><li>加大生态系统保护力度；</li><li>改革生态环境监管体制；</li></ol><h2 id="专题十一-“四个全面”战略布局：P245"><a href="#专题十一-“四个全面”战略布局：P245" class="headerlink" title="专题十一 “四个全面”战略布局：P245"></a>专题十一 “四个全面”战略布局：P245</h2><p>​    四个全面是指：1.全面建成小康社会；2.全面深化改革；3.全面依法治国；4.全面 从严治党。    </p><p>​        党的十八大提出了到2020年全面建成小康社会的奋斗目标。全面建成小康社会标志着我们跨过了实现现代化建设第三步战略目标必经的承上启下的重要发展阶段。全面小康有更高的标准、更丰富的内涵、更全面的要求，即经济更加发展、民主更加健全、科教更加进步、文化更加繁荣、社会更加和谐、人民生活更加殷实。 </p><h3 id="1-全面建成小康社会"><a href="#1-全面建成小康社会" class="headerlink" title="1.全面建成小康社会"></a>1.全面建成小康社会</h3><p>​    全面建成小康社会，经济更加发展、民主更加健全、科教更加进步、文化更加繁荣、社会更加和谐、人民生活更加殷实。</p><p>全面指的是：平衡性、协调性、可持续性。</p><p>小康指的是：发展水平</p><p>其他三个方面在书 P249、255、259；</p><h2 id="专题十二-中国特色-大国外交"><a href="#专题十二-中国特色-大国外交" class="headerlink" title="专题十二 中国特色 大国外交"></a>专题十二 中国特色 大国外交</h2><p>（简介：书 P282 页）<br>    维护世界和平、促进共同发展是中国外交政策的宗旨。中国将坚定不移奉行独立自主的和平外交政策，同国际社会一道致力于推动建立以相互尊重、公平正义、合作共赢为核心的新型国际关系。</p><h3 id="1-人类命运共同体"><a href="#1-人类命运共同体" class="headerlink" title="1.人类命运共同体"></a>1.人类命运共同体</h3><p>（具体内容：书 289 页）<br>    推动构建人类命运共同体，就是要各国人民同心协力，建设持久和平、普遍安全、共同繁荣、开放包容、清洁美丽的世界。</p><p>​    人类只有一个地球，各国共处于一个世界。构建人类命运共同体既是中国外交的崇高目标，也是世界各国的共同责任和历史使命。世界各国应携手合作，共同努构建人类命运共同体，建设一个更加美好的世界。 </p><h3 id="2-一带一路"><a href="#2-一带一路" class="headerlink" title="2.一带一路"></a>2.一带一路</h3><p>（具体内容：书 293 页）<br>    党的十九大提出要以“一带一路”建设为重点，坚持引进来和走出去并重，遵循共商共建共享原则，加强创新能力开放合作，形成陆海内外联动、东西双向互济经济的开放格局。</p><p>​    把一带一路建成和平之路、繁荣之路、开放之路、创新之路、文明之路。</p>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>os</title>
      <link href="/2019/06/17/os/"/>
      <url>/2019/06/17/os/</url>
      
        <content type="html"><![CDATA[<h1 id="作业1（第一章）"><a href="#作业1（第一章）" class="headerlink" title="作业1（第一章）"></a>作业1（第一章）</h1><p>一、填空题</p><p>1.以下有关操作系统的叙述中，哪一个是不正确的         </p><p>A.操作系统管理系统中的各种资源 </p><p>B.操作系统为用户提供的良好的界面</p><p>C.操作系统就是资源的管理者和仲裁者 </p><p>D.操作系统是计算机系统中的一个应用软件</p><p>2.操作系统所占用的系统资源和所需的处理器时间称为         </p><p>A.资源利用率 B.系统性能 C.系统吞吐率 D.系统开销</p><p>3.操作系统所管理的资源包括:ⅠCPU Ⅱ 程序 Ⅲ 内存 Ⅳ 外部设备         </p><p>A.Ⅰ和Ⅱ B.Ⅱ和Ⅲ C Ⅰ、Ⅱ和Ⅲ D.全部</p><p>4.分时操作系统的主要特点是         </p><p>A.个人独占机器资源 B.自动控制作业运行</p><p>C.高可靠性和安全性 D.多个用户共享计算机资源</p><p>5.分时操作系统的主要目标是         </p><p>A.提高计算机系统的实时性 B.提高计算机系统的利用率</p><p>C.提高软件的运行速度 D.提高计算机系统的交互性</p><p>6.在用户程序中请求操作系统服务时应使用         </p><p>A.终端命令 B.作业控制语言 C.系统调用 D.原语</p><p>7.实时操作系统的主要目标是         </p><p>A.计算机系统的交互性 B.计算机系统的利用率</p><p>C.计算机系统的可靠性 D.提高软件的运行速度</p><p>8.操作系统具有进程管理,存储管理,文件管理和设备管理的功能,下列有关描述中,哪一项是不正确的?         </p><p>A.进程管理主要是对程序进行管理 B.存储管理主要管理内存资源</p><p>C.文件管理可以有效的支持对文件的操作，解决文件共享、保密和保护问题</p><p>D. 设备管理是指计算机系统中除了CPU和内存以外的所有输入输出设备的管理</p><p>9..引入多道程序设计的目的是         </p><p>A.增强系统的用户友好性 B.提高系统实用性 C.充分利用CPU D.扩充内存容量</p><p>10.下列哪一个不是操作系统的主要特征?         </p><p>A.并发性 B.共享性 C.灵活性 D.异步性</p><p>11.下列特性中,哪一个不是进程的特性         </p><p>A.交互性 B.异步性 C.并发性 D.静态性 </p><p>12.在精确制导导弹中使用的操作系统应属于下列哪一种         </p><p>A.批处理操作系统 B.个人计算机操作系统 C.实时操作系统 D.网络操作系统</p><p>二、判断题</p><p>1.早期的计算机中没有操作系统，用户直接与硬件打交道。     √    </p><p>2．操作系统是控制应用程序执行的程序，并充当应用程序和计算机硬件之间的接口。    √     </p><p>三、名词解释：</p><p>1．脱机I/O、联机I/O</p><p>脱机I/O:程序和数据的输入和输出都是在外围机的控制下完成的在脱离主机的情况下进行的。</p><p>联机I/O:是指程序和数据的输入输出都是在主机的直接控制下进行的。</p><p>2.临界资源</p><p>在一段时间内只允许一个进程访问的资源</p><p>3.单用户单任务OS、单用户多任务OS、多用户多任务OS（举例）</p><p>​    单用户单任务OS：只允许一个用户上机，且只允许应用程序作为一个任务运行。MS-DOS CP/M</p><p>​    单用户多任务OS：只允许一个用户上机，但允许用户把程序分为若干个任务，使它们并发执行。Windows</p><p>​    多用户多任务OS：允许多个用户通过各自的终端，使用同一台机器，共享主机系统中的各种资源。Linux</p><p>四、问答题：</p><p>1.操作系统有哪几大特征？并给予解释。</p><p>\1.   并发：指两个或多个事件在同一时间间隔内发生（不同于并行性，指两个或多个事件在同一时刻发生）；</p><p>\2.   共享：指系统中的资源可供内存中多个并发执行的进程共同使用；</p><p>\3.   虚拟：通过某种技术将一个物理实体变成若干个逻辑上的对应物的功能；</p><p>\4.   异步：进程是以人们不可预知的速度向前推进的；</p><p>2.文件管理有哪些主要功能？其主要任务是什么？</p><p>\1.   文件存储空间的管理</p><p>\2.   目录管理</p><p>\3.   文件的读/写管理和保护</p><p>\4.   主要任务：对用户文件和系统文件进行管理以方便用户使用，并保证文件的安全性。</p><h1 id="阶段测试1（第二章）"><a href="#阶段测试1（第二章）" class="headerlink" title="阶段测试1（第二章）"></a>阶段测试1（第二章）</h1><p>一、单项选择题</p><p>1．以下对进程的描述中，错误的是        。</p><p>​    A．进程是动态的概念    B．进程执行需要处理机</p><p>​    C．进程是有生命期的    D．进程是指令的集合（程序是指令的集合）</p><p>2．并发进程指的是        。</p><p>​    A．可并行执行的进程    B．可同一时刻执行的进程</p><p>​    C．可同时执行的进程    D．不可中断的进程</p><p>3．分配到必要的资源并获得处理机时间的进程状态是        。</p><p>​    A．就绪状态    B．运行状态    C．阻塞状态    D．撤销状态</p><p>4．某个运行中的进程要申请打印机，它将变为        。</p><p>​    A．就绪态    B．阻塞态    C．创建态    D．撤销态</p><p>5．以下进程状态转变中，        转变是不可能发生的。</p><p>​    A．运行一&gt;就绪    B．运行一&gt;阻塞  C．阻塞一&gt;运行  D．阻塞一&gt;就绪</p><p>6．当        时，进程从执行状态转变为就绪状态。</p><p>A．进程被调度程序选中    B．时间片到</p><p>​     C．等待某一事件          D．等待的事件发生</p><p>7．进程状态由就绪态转换为运行态是由        引起的。</p><p>A．中断事件    B．进程状态转换  C．进程调度  D．为程序创建进程</p><p>8．一个进程被唤醒意味着        。</p><p>​    A．该进程一定重新占用CPU    B．它的优先级变为最大</p><p>​    C．其PCB移至就绪队列队首    D．进程变为就绪状态</p><p>9．若P、V操作的信号量S初值为2，当前值为—1，则表示有        等待进程。</p><p>A．0个    B.1个     C.2个     D.3个</p><p>10．一次I/O操作的结束，有可能导致        。</p><p>​    A．一个进程由阻塞变为就绪    B．几个进程由阻塞变为就绪</p><p>​    C．一个进程由阻塞变为运行    D．几个进程由阻塞变为运行</p><p>二、综合应用题</p><p>1．在单用户系统中，有n个进程，问排在就绪队列和等待队列中进程个数的范围是什么?</p><p>​    解：若就绪队列中有进程在排队，则调度程序必将其中一个调入CPU并运行，所以就绪队列中的进程个数为0～n-1。所有n个进程都有可能处于阻塞状态，所以等待队列中的进程个数为0～n。</p><p>2．回答以下问题：</p><p> (1)若系统中没有运行进程，是否一定没有就绪进程?为什么?</p><p>​    是，因为若系统没有运行进程，那么系统很快会选择一个就绪进程运行。只有就绪队列无进程时，CPU才可能处于空闲状态。</p><p>(2)若系统中既没有运行进程，也没有就绪进程，系统中是否就没有进程?为什么?</p><p>​    不一定，因为系统中的所有进程可能都处于等待状态，但不一定处于死锁状态。</p><p>(3)在采用优先级进程调度时，运行进程是否一定是系统中优先级最高的进程?</p><p>​    不一定。因为高优先级的进程可能正处于等待队列。</p><p>\3. 某博物馆最多可容纳500人同时参观，有一个出入口，该出入口一次仅允许一个人通过。参观者的活动描述如下：</p><p>​    参观者进程i:</p><p>​       Begin</p><p>​         进门; 参观; 出门</p><p>​       End</p><p>​    </p><p>定义两个信号量 </p><p>Semaphore empty=500； //博物馆可以容纳的最多人数 </p><p>Semaphore mutex=1； //用于出入口资源的控制 </p><p>begin 参观者进程i： </p><p>{ </p><p>… </p><p>P(empty)；</p><p>P(mutex)；</p><p>进门； </p><p>V(mutex)； </p><p>参观； </p><p>P(mutex)； </p><p>出门； </p><p>V(mutex)； </p><p>V(empty)； </p><p>… </p><p>} </p><p>end</p><p>\4. 桌上有一空盘，允许存放一个水果。爸爸可向盘中放苹果，也可向盘中放橘子，儿子专等吃盘中的橘子，女儿专等吃盘中的苹果。规定当盘空时一次只能放一只水果供吃者取用，请用P、V原语实现爸爸、儿子、女儿三个并发进程的同步。</p><p>​    设置三个信号量： </p><p>S，初值为1，用于爸爸、儿子、女儿三个进程间的互斥，表示盘中是否为空。SO，初值为0，用于爸爸、女儿两个进程间的同步，表示盘中是否有橘子。     SA，初值为0，用于爸爸、儿子两个进程间的同步，表示盘中是否有苹果。</p><p>三个进程之间的同步描述如下：</p><p>father进程    daughter进程    son进程 </p><p>  L1：           L2：         L3：</p><p>P(S)           P(SO)        P(SA)               将水果放入盘中  从盘中取出橘子   从盘中取出苹果</p><p>if(放入是橘子)V(SO)    V(S)       V(S) </p><p>else V(SA)        吃橘子      吃苹果            </p><p>goto L1          goto L2     goto L3 </p><h1 id="作业2（第二章）"><a href="#作业2（第二章）" class="headerlink" title="作业2（第二章）"></a>作业2（第二章）</h1><p>一、单项选择</p><p>1．以下关于进程的描述中，正确的是        。</p><p>​    A．进程获得CPU运行是通过调度得到的</p><p>​    B．优先级是进程调度的重要依据，一旦确定就不能改变</p><p>​    C．在单CPU的系统中，任意时刻都有一个进程处于运行状态</p><p>D．进程申请CPU得不到满足时，其状态变为阻塞</p><p>调度程序的功能是为进程分配处理机；动态优先级是可以改变的；有时计算机系统中没有任何进程运行，CPU处于空闲状态，计算机进行空转；进程已获得除CPU以外的资源时处于就绪状态。本题答案为A。</p><p>2．一个进程是        。</p><p>​    A．由处理机执行的一个程序         B．一个独立的程序+数据集</p><p>​    C．PCB结构、程序和数据的组合     D．一个独立的程序</p><p>3．在多道程序环境下，操作系统分配资源以        为基本单位。</p><p>​    A．程序    B．指令    C．进程    D．作业</p><p>4．操作系统通过        对进程进行管理。</p><p>​    A．JCB    B．PCB    C．DCT D．CHCT</p><p>5．当一个进程处于这样的状态时，        ，称为阻塞状态。</p><p>​    A．它正等着输入一批数据        B．它正等着进程调度</p><p>​    C．它正等着分给它一个时间片    D．它正等着进入内存</p><p>6．一个进程的基本状态可以从其他两种基本状态转变过来，这个基本状态一定是        。</p><p>​    A．运行状态    B．阻塞状态    c．就绪状态    D．完成状态</p><p>7．以下可能导致一个进程从运行状态变为就绪状态的事件是        。</p><p>​    A．一次I/O操作结束     B．运行进程需做I/O操作</p><p>​    C．运行进程结束         D．出现了比现在进程优先级更高的进程</p><p>8．以下说法中，        不是创建进程必须的。</p><p>​    A．建立一个进程的进程表项    B．为进程分配内存</p><p>C．为进程分配 CPU            D．将进程表项插入就绪队列中</p><p>解：进程刚创建后处于就绪状态，所以不为其分配CPU。本题答案为C。</p><p>9．以下关于父进程和子进程的叙述中，正确的是        。</p><p>​    A．父进程创建了子进程，因此父进程运行完了，子进程才能运行</p><p>​    B．父进程和子进程可以并发执行</p><p>​    C．撤销子进程时，应该同时撤销父进程</p><p>​    D．撤销父进程时，应该同时撤销子进程</p><p>10．在引入线程的操作系统中，资源分配的基本单位是  ①C．进程  ，CPU分配的基本单位是② D进程 。</p><p>​    A．程序    B．作业    C．进程    D．线程</p><p>二、综合应用题</p><p>1．为什么要引入进程概念?进程的基本特点是什么?它与程序有何联系和区别。</p><p>​    解：为了能使程序并发执行，并且可以对并发执行的程序加以描述和控制</p><p>​    基本特点：</p><p>​       动态性、并发性、独立性和异步性。</p><p>​    联系：</p><p>​       进程是程序的一次执行过程，没有程序就没有进程；</p><p>​    区别：</p><p>\1.   进程是程序的执行，进程属于动态的概念；而程序是一组指令的集合，是静态的概念。</p><p>\2.   进程是程序的执行，它是由声明过程的，由创建到死亡，进程的存在是暂时的，程序的存在是永久的。</p><p>\3.   进程是程序的执行，所以进程的组成包括程序和数据。除此之外，进程还由记录进程状态信息的PCB组成。</p><p>\4.   进程是竞争计算机系统资源的基本单位。</p><p>\5.   一个进程能与其他进程并发地活动。</p><p>\6.   一个程序可能对应多个进程，一个进程可以包含多个程序。也就是说，程序和进程无一一对应关系。</p><p>\7.   进程的几个特点程序都不具备。</p><p>2．设系统中有n(n&gt;2)个进程，且当前不执行进程调度程序，试考虑下述4种情况：</p><p>①没有运行进程，有2个就绪进程，n个进程处于等待状态。</p><p>②有1个运行进程，没有就绪进程，n-1个进程处于等待状态。</p><p>③有1个运行进程，有1个就绪进程，n-2个进程处于等待状态。</p><p>④有1个运行进程，n-1个就绪进程，没有进程处于等待状态。</p><p>上述情况中，不可能发生的情况是哪些? </p><p>①就绪队列非空，处理机不应休闲。</p><p>\3. 用P、V操作管理临界区时，任何一个进程在进入临界区之前应调用<strong>P</strong>操作，退出临界区时应调用<strong><em>V</em></strong>操作。</p><p>\4. 信箱是一种   间接  通信方式；用信箱实现通信时，应有      发送  <strong>_和</strong>接收<strong>两条基本原语。信箱在逻辑上分成</strong>信箱头__ _和__信箱体_两部分，前一部分存放有关信箱的描述，后者由若干格子组成，每格存放一信件，格子的数目和大小在创建信箱时确定。</p><p>\5. 有一自动管理的地下车库，最多可停放50辆汽车，出入口都有自动感应装置。当有车到达入口时，若车库中没有停满车，则开启入口门让其驶入，否则需等待；当有一辆车要离开车库时，若有车等待进入，则允许一辆车驶入；否则，增加一个空位。假定这个自动管理系统采用P、V操作来管理，回答下列问题：</p><p>(1) 应定义几个信号量?写出信号量的初值。</p><p>​           1                 50</p><p>(2) 在下面管理系统的程序结构中的方框位置填上能满足管理要求的P、V操作。</p><p>入口：                                出口：</p><p>Begin  P                                  begin  V</p><p>一辆车到达入口；                      一辆车到达出口；</p><p>打开车库门；</p><p>打开车库门；</p><p>汽车驶入车库；                      汽车离开车库；</p><p>end；                                 end；</p><p>(3) 分别写出信号量值变化成&gt;0、&lt;0和=0时的含义。</p><p>大于0：表示车库中有空位</p><p>小于0：表示车库已满，且有车辆等待进入</p><p>等于0：表示车库已满，且没有车辆等待</p><p>\6. 从调度性、并发性、拥有资源及系统开销方面对进程和线程进行比较。</p><p>​    调度性：在传统OS中，进程是资源拥有的基本单位，也是独立调度和分派的基本单位；在引入线程的OS中，线程是独立调度和分派的基本单位，进程只是拥有资源的基本单位，两个角色分开。</p><p>​    并发性：在引入线程的OS中，不仅进程间可以并发执行，而且一个进程内的多线程也可以并发执行，因而比传统的OS具有更好的并发性；</p><p>​    拥有资源：在各类OS中，拥有资源的基本单位都是进程，线程除了一点简单资源外，本身基本不拥有系统资源，但它可以共享所属进程的资源。</p><p>​    系统开销：创建和撤销进程，由于要分配和回收系统资源，因此系统开销远大于创建和撤销线程；进程切换要保存和设置的现场信息也较多，所以进程切换的系统开销也大于线程切换。</p><p>\7. 用记录型信号量解决哲学家进餐问题。</p><p>8 .系统中有多个生产者进程和消费者进程，共用一个可以存1000个产品的缓冲区（初始为空），当缓冲区未满时，生产者进程可以放入一件其生产的产品，否则等待；当缓冲区未空时，消费者进程可以取走一件产品，否则等待。要求一个消费者进程从缓冲区连续取出10件产品后，其他消费者进程才可以取产品，请用P，V（wait，signal）操作实现进程间的互斥和同步，要求写出完整的过程；并指出所用信号量的含义和初值。</p><h1 id="作业3（第三章）"><a href="#作业3（第三章）" class="headerlink" title="作业3（第三章）"></a>作业3（第三章）</h1><p>一、判断题</p><p>1、循环轮转调度中，时间片q越小，响应时间越短，所以调度效果越好。       （   ×   ）</p><p>2、按银行家算法来分配资源是不会产生死锁的。                             （   √   ）</p><p>二、选择题</p><p>1、下列进程调度算法中，                调度算法对长进程比较有利。</p><p>A、先来先服务       B、时间片轮转        C、短进程优先     D、最高响应比优先</p><p>2、以下哪种调度算法不可能是剥夺方式的？                </p><p>A、先来先服务   B、最短CPU执行期优先   C、最高优先权   D、轮转法</p><p>3、预防死锁的方法通常是打破四个必要条件之一，但一般不能破坏(        )条件。</p><p>A、互斥条件          B、请求保持条件       C、不剥夺条件       D、环路等待条件</p><p>4、若系统中有五台绘图仪，有多个进程均需要使用两台，规定每个进程一次仅允许申请一台，则至多允许（      ）个进程参于竞争，而不会发生死锁。</p><p>A、5             B、2                  C、3                   D、4</p><p>5、在进程资源图中(   )是发生死锁的必要条件。</p><p>A、互斥        B、可剥夺件             C、环路                D、同步</p><p>三、填空题</p><p>1、产生死锁有四个必要条件，预先分配策略破坏了<strong><em>请求和保持</em></strong>条件，使死锁不会发生；而有序分配策略破坏了<strong><em>循环等待</em></strong>条件，也同样使死锁不会发生。</p><p>2、银行家算法是在能确保系统处于    安全状态     的情况下，才把资源分配给申请者的。</p><p>四、简答题</p><p>1、课后作业P127：1、6、11、15、23、27</p><p>五、综合题</p><p>1、某操作系统采用非抢占的调度方式，若有4个作业A、B、C、D，它们的到达时间、估计的运行时间和设置的优先级如下表所示（单位为S）。请回答下列问题（要求给出过程）：</p><p>（1）采用先来先服务调度算法，调度顺序是什么？作业的平均周转时间是多少？</p><p>（2）采用最短作业优先调度算法时,调度顺序是什么？作业的平均周转时间是多少？</p><p>（3）采用最高优先级优先的调度算法时,调度顺序是什么？作业的平均周转时间是多少？    </p><table><thead><tr><th>作业</th><th>到达时间</th><th>运行时间</th><th>优先级(大者高)</th></tr></thead><tbody><tr><td>A</td><td>0</td><td>2</td><td>1</td></tr><tr><td>B</td><td>1</td><td>10</td><td>3</td></tr><tr><td>C</td><td>2</td><td>2</td><td>2</td></tr><tr><td>D</td><td>4</td><td>5</td><td>4</td></tr></tbody></table><p>2、课后作业P128：30。</p><p>3、某系统有三类非剥夺性资源，其中A类资源共有2个、B类资源共有2个、C类共有3个；若有三个进程P1、P2、P3，它们对资源的占用和请求情况如下表所示。</p><table><thead><tr><th>进程</th><th>资源占用情况</th><th>资源请求情况</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>A</td><td>B</td><td>C</td><td>A</td><td>B</td><td>C</td><td></td></tr><tr><td>P1</td><td>1</td><td></td><td>1</td><td>1</td><td></td><td></td></tr><tr><td>P2</td><td></td><td></td><td>2</td><td></td><td>1</td><td></td></tr><tr><td>P3</td><td></td><td>2</td><td></td><td>2</td><td></td><td>1</td></tr></tbody></table><p>请用死锁定理解释该状态是否发生了死锁？(要给出过程)</p><h1 id="阶段测试2（第三章）"><a href="#阶段测试2（第三章）" class="headerlink" title="阶段测试2（第三章）"></a>阶段测试2（第三章）</h1><p>一、判断题</p><p>1、先来先服务（FCFS）算法是一种简单的调度算法，但其效率比较高。（   ×  ）</p><p>2、FCFS调度算法对短作业有利。（      ×     ）</p><p>3、时间片的大小对轮转法（RR）的性能有很大的影响，时间片太短，会导致系统开销大大增加。（      √     ）</p><p>4、进程申请CPU得不到满足时, 其状态变为等待态。                      （    ×    ）</p><p>5、系统处于不安全状态必然导致系统死锁。                              （    ×    ）</p><p>二、选择题</p><p>1、在进行作业调度时，要想兼顾作业等待时间和作业执行时间，应选取          。</p><p>A.轮转法      B.先进先出调度算法      C.响应比高优先算法      D.短作业优先调度</p><p>2、规定进程必须一次性地申请其在整个执行过程中所需要的全部资源，破坏了                 条件，保证死锁不会发生。</p><p>环路等待 B. 不剥夺        C. 互斥        D. 请求保持</p><p>3、用P、V操作管理临界区时，信号量的初值应定义为          。</p><p>A．—1            B．0              C．1               D．2</p><p>4、死锁定理用于                                。</p><p>A.死锁预防    B.死锁解除    C.死锁避免    D.死锁检测</p><p>5、某系统正在执行三个进程P1、P2和P3，各进程的计算(CPU)时间和I/O时间比例如下表所列：为提高系统资源利用率，合理的进程优先级设置应为          。</p><table><thead><tr><th>进程</th><th>计算时间</th><th>I/O时间</th></tr></thead><tbody><tr><td>P1</td><td>90%</td><td>10%</td></tr><tr><td>P2</td><td>50%</td><td>50%</td></tr><tr><td>P3</td><td>15%</td><td>85%</td></tr></tbody></table><p>A．P1＞P2＞P3     B．P3＞P2＞P1      C．P2＞P1=P3      D．P1＞P2=P3</p><p>三、填空题</p><p>1、在响应比最高者优先的作业调度算法中，当各个作业等待时间相同时，     要求服务时间短     的作业将得到优先调度；当各个作业要求运行的时间相同时，      等待时间长      的作业得到优先调度。</p><p>2、分时系统采用的调度方法是    轮转调度算法        。在分时系统中，当用户数目为100时，为保证响应时间不超过2秒，此时时间片最大应为      0.02        。</p><p>3、有三个同时到达的作业J1，J2和J3，它们的执行时间分别是T1，T2和T3，且T1&lt;T2&lt;T3。系统按单道方式运行且采用短作业优先算法，则平均周转时间是   (3T1+2T2+T3)/3             。</p><p>4、作业进入系统到运行结束，可能要经历作业调度,进程调度 、中级调度 三级调度。</p><p>5、在处理死锁问题的方法中，银行家算法属于  _避免死锁<strong>的方法；资源的按序请求摒弃了产生死锁的</strong>循环等待    条件。</p><p>6、某系统中有3个并发进程，分别需要某类资源2、3、3个，试问该类资源最少应配备<strong><em>5</em></strong>个，使它们一定不会发生死锁。</p><p>四、综合应用题</p><p>1、设有四道作业，它们的提交时间及执行时间由下表给出:</p><p>作业号 提交时间 执行时   间   优先级</p><p>1        8.5       1.0     2</p><p>2        9.2       1.6     4</p><p>3        9.4       0.5     1</p><p>4        9.8       2.0     3</p><p>试计算在单道程序环境下，采用先来先服务调度算法（4分）、最短作业优先调度算法（8分）和高优先级优先调度算法（8分）时的平均周转时间 (时间单位:小时，以十进制进行计算；要求写出计算过程)。</p><p>2、设系统中有3种类型的资源（A，B，C）和5个进程P1，P2，P3，P4，P5。A资源的总数为17，B资源的总数为5，C资源的总数为20。在To时刻的系统状态见下表所示。系统采用银行家算法实施死锁避免策略。</p><p>① To时刻是否为安全状态？若是，请给出安全序列。（7分）</p><p>② 在To时刻,若进程P2请求资源（0，3，4），是否能实现资源分配？为什么？（3分）</p><p>③ 在②的基础上，若进程P3请求资源（2，0，1），是否能实施资源分配？为什么？（10分）</p><p>（请给出必要过程）</p><table><thead><tr><th></th><th>Allocation</th><th>Need</th><th>Available</th></tr></thead><tbody><tr><td>P1   P2   P3   P4   P5</td><td>2      1       2   4      0       2   2      0       4   4      0       5   3      1       4</td><td>3      4       7   1      3       4   2      2       1   0      0       6   1      1       0</td><td></td></tr></tbody></table><h1 id="作业4（第四章）"><a href="#作业4（第四章）" class="headerlink" title="作业4（第四章）"></a>作业4（第四章）</h1><p>一、选择填空题</p><p>1、在存储管理中，采用覆盖与交换技术的目的是            。</p><p>A. 节省存储空间                  B. 物理上扩充主存容量</p><p>C. 提高CPU利用率                   D. 实现主存共享</p><p>覆盖和交换是虚拟上扩充内存的技术。</p><p>2、动态重定位技术依赖于            。</p><p>A. 重定位装入程序             B. 重定位寄存器</p><p>C. 地址机构                      D. 目标程序</p><p>3、在固定分区分配中,每个分区的大小是            .</p><p>A.相同   B.随作业长度变化    C.可以不同但预先固定   D.可以不同但根据作业长度固定</p><p>4、在连续存储管理方式中，可重定位分区管理采用紧凑技术的目的是<strong><strong>____</strong></strong>。</p><p>A.增加主存容量    B. 缩短访问周期    C. 集中空闲区   D.加速地址转换</p><p>5、分区管理中采用”最佳适应”分配算法时,宜把空闲区按            次序登记在空闲区表中.</p><p>A.长度递增    B.长度递减    C.地址递增    D.地址递减</p><p>6、若一个系统采用分页存储管理方式，当一个进程处于执行态时，该进程的页表始址和页表长度信息将被送至           。</p><p>A.PCB    B. 物理地址寄存器     C. 页表寄存器       D. 重定位寄存器</p><p>7、采用段式存储管理的系统中,若地址用24位表示,其中8位表示段号,则允许每段的最大长度是＿＿＿.</p><p>  A.2的24次方    B.2的16次方    C.2的8次方    D.2的32次方</p><p>8、首次适应算法的空闲区是<strong>____</strong>.</p><p>A.按地址递增顺序连在一起    B.始端指针表指向最大空闲区</p><p>C.按大小递增顺序连在一起    D.寻找从最大空闲区开始</p><p>9、在分页地址环境下,程序员编制的程序,其地址空间是连续的，分页是由<strong>____</strong>完成的。</p><p>A.程序员     B.编译地址     C.用户     D.系统</p><p>10、在段页式存储管理系统中，内存等分成<strong>_ A.块___</strong>，程序按逻辑模块划分成若干_   D. 段 ___</p><p>A.块      B. 基块     C. 分区       D. 段     E. 页号       F. 段长</p><p>11、某段表的内容表示如下:</p><table><thead><tr><th>段号                      段首址                       段长度</th></tr></thead><tbody><tr><td>0                         120K                        40K   1                         760K                        30K   2                         480K                        20K   3                         370K                        20K</td></tr></tbody></table><p> 一逻辑地址为 (2，154) , 它对应的物理地址为<strong>_____</strong>.</p><p>A.120K+2    B. 480K+154    C. 30K+154            D. 2+480K</p><p>12、如果一个程序为多个进程所共享, 那么该程序的代码在执行的过程中不能被修改, 即程序应该是<strong>_____</strong>.</p><p>A.可执行码     B. 可重入码p160     C.可改变码       D.可再现码</p><p><strong>二、</strong> <strong>填空题</strong></p><p>\1. 将作业地址空间中的逻辑地址转换为贮存中的物理地址的过程为_ 重定位_.</p><p>\2. 在页式和段式管理中, 指令的地址结构形式分别为__       页号__            和<strong>页内地址（位移量）<em>、</em></strong>段号<strong>__</strong>和<strong><strong>段内地址__</strong></strong>。</p><p>\3. 段表表目的主要内容包括<strong><strong>起始地址___</strong></strong>和<strong><strong><em>段的长度_</em></strong></strong>.</p><p>4．页表表目的主要内容包括<strong><em>页号____</em></strong>、<strong><strong>块号_</strong></strong>.  </p><p>5．主存中一系列物理存储单元的集合称为<strong><strong>存储空间___</strong></strong>. </p><p>6．静态重定位在<strong>进程装入_</strong>时进行；而动态重定位在<strong>运行</strong>时进行。</p><p>7．在段页式存储管理系统中，每道程序都有一个<strong><em>段</em>表和一组</strong>页__表。</p><p><strong>三、简答题</strong></p><p>第四章课后P162: 11、14、19、24、26</p><p>没有快表的情况下，基本分页、基本分段、基本段页式存储管理，要访问一个数据需要访问内存的次数？2   2   3</p><p><strong>四、分析题</strong></p><p>1、某系统采用页式存储管理策略，拥有逻辑空间32页，每页为2KB，拥有物理空间1MB。</p><p>（1）写出逻辑地址的格式。</p><p>（2）若不考虑访问权限等，进程的页表有多少项？每项至少有多少位？</p><p>（3）如果物理空间减少一半，页表结构应相应作怎样的改变？</p><p>​                                                  </p><p>2、某程序在逻辑地址100处有一条取数指令LOAD 1,200，而200单元存放数据2500，设程序分配到内存起始地址为5000的单元。要求分别用图表示出如下三种地址变换过程：</p><p>（1）静态重定位；</p><p>（2）动态重定位；</p><p>（3）页面大小为100个单元，该程序的页面顺序映射到50、51、52、53号物理块上。</p><p>（选择每题3分，填空每空1分，简答每题5分，分析每题10分）</p><h1 id="作业5（第五章）"><a href="#作业5（第五章）" class="headerlink" title="作业5（第五章）"></a>作业5（第五章）</h1><p>一、单选题</p><p>\1. 虚拟存储器的最大容量            。</p><p>A.为内外存容量之和    B. 由计算机的地址结构决定  </p><p> C.是任意的           D. 由作业的地址空间决定</p><p>2.在虚拟存储系统中，若进程在内存中占3块（开始时为空），采用先进先出页面淘汰算法，当执行访问页号序列为1﹑2﹑3﹑4﹑1﹑2﹑5﹑1﹑2﹑3﹑4﹑5﹑6时，将产生            次缺页中断。</p><p>A.7                 B. 8                    C. 9         D. 10</p><p>\3. 实现虚拟存储器的目的是             .</p><p>A.实现存储保护      B.实现程序浮动       C.扩充辅存容量      D.扩充主存容量</p><p>\4. 作业在执行中发生了缺页中断,经操作系统处理后,应让其执行       指令.</p><p>A.被中断的前一条    B.被中断的       C.被中断的后一条        D.启动时的第一条</p><p>5.在请求分页存储管理中，若采用FIFO页面淘汰算法，则当分配的页面数增加时，缺页中断的次数<strong>____</strong>。(在最后一题做完后再作答)</p><p>A．减少         B. 增加           C. 无影响            D. 可能增加也可能减少</p><p>6.虚拟存储管理系统的基础是程序的<strong>____</strong>理论.</p><p>A.局部性       B. 全局性        C. 动态性            D.虚拟性</p><p>\7. 下述<strong>___</strong>页面淘汰算法会产生Belady现象.</p><p>A.先进先出      B. 最近最少使用       C. 最近不经常使用     D. 最佳</p><p><strong>二**</strong>.** <strong>填空题</strong></p><p>1．在虚存管理中，虚拟地址空间是指逻辑地址空间，实地址空间是指物理地址空间；前者的大小只受_  机器的地址长度  限制，而后者的大小受_物理内存大小。</p><p>2．若选用的<strong>置换_</strong>算法不合适，可能会出现抖动现象。</p><p>3．在页式存储管理系统中，常用的页面淘汰算法有：<strong>最佳置换算法_</strong>，选择淘汰不再使用或最远的将来才使用的页；<strong>先进先出页面置换算法___</strong>，选择淘汰在主存驻留时间最长的页；<strong><em>最近最久未使用置换算法_</em></strong>选择淘汰离当前时刻最近的一段时间内使用代最少的页。</p><p>4．在虚拟段式存储管理系统中，若逻辑地址的段内地质大于段表中该段的段长，则发生<strong>地址越界中断_</strong>.</p><p><strong>三、简答题：</strong></p><p>P189: 3、6、7、14、15</p><p>1、什么是抖动？（P182）</p><p>2、请求分段存储管理方式下，在地址变换过程中，可能出现哪些中断？分别在什么情况下发生？</p><p>3、在分段系统中，为确保段信息安全，采取的保护措施有哪些？</p><p><strong>四、综合题：</strong></p><p>1、一个进程已经分配到4个物理块，每一页的装入时间、最后访问时间、访问位A、修改位M如下表所示（所有数字为十进制）：</p><p>（1）若页面大小为1024B，则逻辑地址3125对应的物理地址是什么？</p><p>（2）当进程访问4号页面时，产生缺页中断。请分别用FIFO、LRU和改进型Clock置换算法选择淘汰页面；要求给出其页号，并说明作出该决定的原因。</p><table><thead><tr><th>页号</th><th>块号</th><th>装入时间</th><th>最后访问时间</th><th>访问位A</th><th>修改位M</th></tr></thead><tbody><tr><td>2</td><td>7</td><td>60</td><td>279</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>130</td><td>290</td><td>0</td><td>0</td></tr><tr><td>0</td><td>4</td><td>26</td><td>160</td><td>1</td><td>0</td></tr><tr><td>3</td><td>2</td><td>20</td><td>200</td><td>1</td><td>1</td></tr></tbody></table><p>2、在一个请求分页存储管理系统中，一个作业的页面走向为4，3，2，1，4，3，5，4，3，2，1，5，当分配给该作业的物理块数分别为3，4时，试计算采用下述页面淘汰算法时的缺页率（假设开始执行时主存中没有页面），并比较所得结果。</p><p>(1)最佳置换淘汰算法</p><p>(2)先进先出淘汰算法</p><p>(3)最近最久未使用淘汰算法</p><p>(一题每空3分，二题每空2分，三题每题5分，四（1）10分4/2/2/2，四（2）13分4/4/5)</p><h1 id="阶段测试三（）"><a href="#阶段测试三（）" class="headerlink" title="阶段测试三（）"></a>阶段测试三（）</h1><p>一、判断题</p><p>1、动态地址映射是指在程序装入主存时，将逻辑地址转换为物理地址。      （   ×  ）</p><p>2、在没有快表的情况下，基本段页式系统每访问一次数据，要访问3次内存。     （   √   ）</p><p>3、采用动态重定位技术的系统，目标程序可以不经任何改动，而装入物理内存。   （   √   ）</p><p>4、在虚存存储器系统中, 只要磁盘空间无限大, 作业就能拥有任意大的编址空间。 （    ×  ）</p><p>5、请求分段存储管理中，分段的尺寸由系统决定。                             （   ×   ）</p><p>6、请求段页式系统是以页为单位管理用户的虚空间，以段为单位管理内存空间。   （   ×   ）</p><p>7、虚拟存储器容量的扩大是以牺牲CPU时间以及内、外存交换时间为代价的。     （   √   ）</p><p>8、将用户源程序变成可在内存中执行的程序，要经过的步骤是：链接-&gt;编译-&gt;装入。（   ×   ）</p><p>二、填空题</p><p>1、文件系统中，位示图的主要功能是                    。</p><p>   A.实现按名存取  B.文件目录查找     C.管理文件存储器的空闲空间   D.允许重名</p><p>2、为了解决“命名冲突”问题，通常在文件系统中采用                  。</p><p>   A.约定的方法     B.路径     C.多级目录     D.索引</p><p>3、下列选项中，属于多级页表优点的是<strong>_____</strong>。</p><p>   A.加快地址变换速度                   B. 减少页表项所占字节数</p><p>   C.减少页表所占的连续内存空间        D. 减少缺页中断次数</p><p>4、不适当的页面置换算法可能会导致进程发生“抖动”，抖动是指<strong><strong>____</strong></strong>。</p><p>   A.使用机器时，造成屏幕闪烁的现象</p><p>   B.刚被调出的页面又立即被装入所形成的频繁装入/调出的现象　</p><p>   C.系统盘有问题，造成系统不稳定的现象</p><p>   D.由于主存分配不当，偶然造成主存不够的现象</p><p>三、综合题</p><p>1、在一个请求分段系统中，作业的虚地址为24位，其中高8位是段号，低16位为段内相对地址。试问：</p><p>①一个作业最多可以有多少段？</p><p>​    28 =256段</p><p>②每段的最大长度为多少字节？</p><p>216=64KB</p><p>③系统中一个作业的段表如右图，试计算逻辑地址[0，600]、[1，80]、[3，60]的主存地址。当无法进行地址变换时，应说明产生何种中断。</p><table><thead><tr><th>段号</th><th>段长</th><th>主存起始地址</th><th>是否在主存</th></tr></thead><tbody><tr><td>0</td><td>600</td><td>2100</td><td>是</td></tr><tr><td>1</td><td>100</td><td></td><td>否</td></tr><tr><td>2</td><td>40</td><td>3000</td><td>是</td></tr><tr><td>3</td><td>80</td><td>4000</td><td>是</td></tr></tbody></table><p> 2、请求分页管理系统中，假设某进程的页表内容如下表所示（H代表十六进制）。</p><p>页号   页框号    存在位</p><p>0       101H       1</p><p>1       –         0</p><p>2       254H       1</p><p>页面大小为4KB，一次内存的访问时间是100ns，一次快表的访问时间是10ns，处理一次缺页的平均时间为108ns（已含更新快表和页表的时间），进程所占内存块固定为2块，采用最近最少使用置换算法（LRU）和局部淘汰策略。假设①快表初始为空；②地址转换时先访问快表，若快表未命中，再访问页表（忽略访问页表之后的快表更新时间）；③存在位为0表示页面不在内存，产生缺页中断，缺页中断处理后，返回到产生缺页中断的指令处重新执行。设有虚地址访问序列2362H、1565H、25A5H，请问：</p><p>（1）依次访问上述三个虚地址，各需多少时间？给出计算过程。</p><p>（2）基于上述访问序列，虚地址1565H的物理地址是多少？请说明理由。</p><h1 id="作业6"><a href="#作业6" class="headerlink" title="作业6"></a>作业6</h1><p>一、选择题</p><p>1、对操作系统的文件系统而言，一个源程序、一批数据、一篇文章或一张图片等都可以被称为文件，只要它是<strong><strong>____</strong></strong>。</p><p>A．连续分布在一片磁盘区域中的信息集合</p><p>B．采用链接方式连接起来的多个磁盘块组成的信息集合</p><p>C．逻辑上具有完整意义的信息集合</p><p>D．属于同一个用户的一个信息集合</p><p>2、通过<strong><strong>____</strong></strong>技术，可以把一台物理I/O设备虚拟为多台逻辑I/O设备。</p><p>​    A.多道程序   B. 可重入码         C. 紧凑      D. Spooling</p><p>3、使用绝对路径名访问文件是从<strong><strong>____</strong></strong>开始按目录结构访问某个文件。</p><p>​    A.当前目录   B. 用户主目录    C. 根目录             D. 父目录</p><p>4、在计算机系统中引入通道结构后仍然无法做到的是<strong><strong>____</strong></strong>。</p><p>  A．主存储器和外围设备之间传送信息的操作直接通过通道进行</p><p>  B．通道完全独立运行，无需由CPU 启动</p><p>  C．外围设备可以和 CPU 并行工作</p><p>  D．各通道上的外围设备可以并行工作</p><p>5、程序员利用系统调用打开I/O设备时，通常使用的设备标识是<strong><strong>____</strong></strong>。</p><p>​    A.逻辑设备名     B. 物理设备名       C. 主设备号         D. 从设备号</p><p>6、在磁盘调度算法中，磁头只能单向移动，优先响应与当前磁头移动方向一致、且距离最近的进程的算法为           算法。</p><p>   A.FIFO             B. SCAN             C. CSCAN              D. FSCAN</p><p>7、为了允许不同用户的文件具有相同的文件名，通常在文件系统中采用<strong><strong>____</strong></strong>。</p><p>​    A.重名翻译      B. 多级目录         C. 约定               D. 文件名</p><p>8、在磁盘调度算法中，有可能使I/O请求无限期等待的调度算法是(        )。</p><p>​    A.FCFS          B.SSTF　           C.SCAN            D.CSCAN</p><p>二、简答题</p><p>课本p236： 24、30、31</p><p>（15、16、17）回答：有哪几种I/O控制方式?I/O控制方式发展的目标(宗旨/驱动力)是什么?各自的特点？字符设备、块设备分别用什么样的控制方式?</p><p>（4、18）回答：设备无关性(设备独立性)的含义是什么?为什么要引入设备独立性?如何实现?</p><p>假设磁盘有200个磁道，磁盘请求队列中是一些随机请求，它们按照到达的次序分别处于98、183、37、122、14、124、65、67号磁道上，当前磁头在53号磁道上，并向磁道号减小的方向上移动。</p><p>(1)请给出按电梯（SCAN）算法进行磁盘调度时满足请求的次序。</p><p>(2)计算平均寻道长度。</p><p>课本P266： 4、16</p><p>课本296： 2、3、7、9、14、15</p><p>页面大小为4KB，一次内存的访问时间是100ns，一次快表的访问时间是10ns，处理一次缺页的平均时间为108ns（已含更新快表和页表的时间），进程所占内存块固定为2块，采用最近最少使用置换算法（LRU）和局部淘汰策略。假设①快表初始为空；②地址转换时先访问快表，若快表未命中，再访问页表（忽略访问页表之后的快表更新时间）；③存在位为0表示页面不在内存，产生缺页中断，缺页中断处理后，返回到产生缺页中断的指令处重新执行。设有虚地址访问序列2362H、1565H、25A5H，请问：</p><p>（1）依次访问上述三个虚地址，各需多少时间？给出计算过程。</p><p>（2）基于上述访问序列，虚地址1565H的物理地址是多少？请说明理由。</p>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/2019/06/13/computer-internet/"/>
      <url>/2019/06/13/computer-internet/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2 id="前言：题型解析"><a href="#前言：题型解析" class="headerlink" title="前言：题型解析"></a>前言：题型解析</h2><table><thead><tr><th>题型</th><th>题数</th><th>分值占比</th></tr></thead><tbody><tr><td>选择题</td><td>16</td><td>24</td></tr><tr><td>填空题</td><td>10</td><td>10</td></tr><tr><td>名词解释</td><td>10</td><td>10</td></tr><tr><td>简答题</td><td>3</td><td>24</td></tr><tr><td>计算题</td><td>2</td><td>22</td></tr><tr><td>应用题</td><td>1</td><td>10</td></tr></tbody></table><h2 id="第一章-概述部分"><a href="#第一章-概述部分" class="headerlink" title="第一章 概述部分"></a>第一章 概述部分</h2><ol><li><p>三网：电信网络、有线电视网络、计算机网络 p1</p></li><li><p>互联网的两个基本特点：连通性和共享 p2</p></li><li><p>所谓的共享即资源共享：可以是信息共享、软件共享也可以是硬件共享 p3</p></li><li><p>ARPANET：Internet的前身，美国。p5</p></li><li><p>ISP：（Internet Service Provider）互联网服务提供者。 p6</p></li><li><p>RFC：（Request For Comments）互联网标准发布的文档形式。 p9</p></li><li><p>互联网的组成：边缘部分、核心部分。 p10 小题</p></li><li><p>通信方式(边缘部分)：客户-服务器方式（C/S方式）、对等方式（P2P方式）。 p11</p></li><li><p>交换技术(核心部分)：电路交换、报文交换、分组交换 p17 小题</p></li><li><p>计算机网络的性能指标：速率、带宽、吞吐量、时延 p21</p></li><li><p>带宽：单位，比特每秒（bit/s） p21</p></li><li><p>时延： p22</p><ul><li>发送时延：</li></ul><p>$$<br>发送时延=数据帧长度（bit）/发送速率（bit/s）<br>$$</p><ul><li>传播时延：</li></ul><p>$$<br>传播时延=信道长度（m）/电磁波在信道上的传播速率（m/s）<br>$$</p></li></ol><pre><code>- 处理时延：主机或路由器在收到分组时的处理时间- 排队时延：分组在经过网络传输时，进图路由器后在队列中的排队时间- 总时延：$$总时延=发送时延+传播时延+处理时延+排队时延$$</code></pre><ol start="13"><li><p>OSI/RM：（Open System Interconnection Reference Model）开放系统互连基本参考模型 p27</p></li><li><p>协议：p29 简答，填空</p><ul><li>三要素：语法、语义、同步 </li></ul></li><li><p>OSI和TCP/IP的体系结构 p31</p></li></ol><p><img src="https://zsy0216.gitee.io/images/hexo/computer-networks/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.png" alt="计算机网络体系结构"></p><ol start="16"><li><p>PDU：（Protocol Data Unit）协议数据单元，指对等层次之间传送的数据单位。  p33</p></li><li><p>各层对应数据单元名称：p31</p><ul><li>应用层：报文/数据/消息</li><li>运输层：报文段</li><li>网络层：分组/数据报</li><li>数据链路层：帧</li><li>物理层：比特</li></ul></li><li><p>协议和服务的区别与联系  p34</p><ul><li><p>区别：协议是控制两个对等实体（或多个实体）进行通信的规则的集合，是水平的。</p><pre><code>服务是下层通过层间接口向上层提供的功能，是垂直的。</code></pre></li><li><p>联系：协议的实现保证了能够向上一层提供服务，要实现本层协议还需使用下层提供的服务。</p></li></ul></li><li></li></ol><h2 id="第二章-物理层"><a href="#第二章-物理层" class="headerlink" title="第二章 物理层"></a>第二章 物理层</h2><ol><li><p>特性：机械特性、电气特性、功能特性、过程特性   p41</p></li><li><p>信号：模拟信号、数字信号。  p43 小题</p></li><li><p>通信方式：单工通信、半双工通信、全双工通信。  p43</p></li><li><p>信道的极限容量：  p45</p><ul><li><p>奈氏准则：在任何信道中，码元传输的速率是有上限的，传输速率超过此上限，就会出现严重的码间串扰的问题，使接收端对码元的判决（即识别）成为不可能。</p></li><li><p>香农公式：信道的带宽或信道中的信噪比越大，信息的极限传输速率就越高。</p><p>​        C=W log<sub>2</sub>(1+S/N)（bit/s）</p><p>C：信道的极限信息传输速率</p><p>W：信道的带宽（以Hz为单位）</p><p>S：信道内所传信号的平均功率</p><p>N：信道内部的高斯噪声功率</p></li></ul></li><li><p>传输介质：p47</p><p>抗干扰能力强的应选屏蔽双绞线和光纤    </p><ul><li>双绞线：p47<ul><li>STP：屏蔽双绞线</li><li>UTP：非屏蔽双绞线</li></ul></li><li>同轴电缆：p48</li><li>光缆：单模光纤、多模光纤  p49</li></ul><table><thead><tr><th>类别</th><th>传输质量</th><th>传输距离</th><th>价格</th><th>颜色</th></tr></thead><tbody><tr><td>多模光纤</td><td>低</td><td>近</td><td>便宜</td><td>橙</td></tr><tr><td>单模光纤</td><td>高</td><td>远</td><td>贵</td><td>黄</td></tr></tbody></table></li><li><p>ISM：Industrial、Scientific、Medical(工业、科学、医药)，即所谓的工、科、医频段。  p53</p></li><li><p>信道复用技术：p53</p><ul><li>FDM：频分复用</li><li>TDM：时分复用</li><li>WDM：波分复用</li><li>CDM：码分复用</li></ul></li><li><p>多路复用的速率体系：北美和日本的T1速率（1.544Mbit/s），欧洲的E1速率（2.048Mbit/s）互不兼容  p59</p></li><li><p>宽带接入技术：p60</p><ul><li>ADSL技术：非对称数字用户线</li><li>HFC网：光纤同轴混合网</li><li>FTTx技术：光纤到x</li></ul></li><li></li></ol><h2 id="第三章-数据链路层"><a href="#第三章-数据链路层" class="headerlink" title="第三章 数据链路层"></a>第三章 数据链路层</h2><ol><li><p>信道类型：点对点信道，广播信道。  p69</p></li><li><p>三个基本问题：封装成帧，透明传输，差错检测。  p71</p></li><li><p>CRC：循环冗余检验。  p74</p></li><li><p>差错处理：检错（CRC），纠错（海明码）.  p75</p></li><li><p>PPP：point-to-point protocol . 点对点协议。  p76</p></li><li><p>PPP的组成： p78</p><ul><li>一个将IP数据报封装到串行链路的方法。</li><li>一个用来建立、配置和测试数据链路连接的链路控制协议LCP。</li><li>一套网络控制协议NCP。</li></ul></li><li><p>零比特填充：如何填/删？ p80</p><p>​    在发送端，先扫描整个信息字段（通常用硬件实现，但也可用软件实现，只是会慢些）。只要发现有5个连续1，则立即填入一个0.因此经过这种零比特填充的数据，就可以保证在信息字段中不会出现6个连续1。（六个连续的1表示一个帧的开始或结束）</p><p>​    接收端在收到一个帧时，先找到标志字段F以确定一个帧的边界，接着再用硬件对其中的比特流进行扫描。每当发现5个连续1时，就把这5个连续1后的一个0删除，以还原成原来的信息比特流。这样就保证了透明传输：在所传送的数据比特流中可以传送任意组合的比特流，而不会引起对帧边界的错误判断。</p></li><li><p>拓扑类型：星形网，环形网，总线网。  p82</p></li><li><p>CSMA/CD：以太网协议。  p85</p></li><li><p>以太网帧：p96. p97.</p><ul><li>MAC帧格式：</li></ul><p><img src="https://zsy0216.gitee.io/images/hexo/computer-networks/MAC%E5%B8%A7%E6%A0%BC%E5%BC%8F.png" alt="MAC帧格式"></p><ul><li>帧尾(FCS)作用：校验</li><li>前同步码（前导码）作用：实现位同步</li></ul></li><li><p>STP：生成树协议   p101</p><p>作用：防止链路层环路</p></li><li><p>VLAN：虚拟局域网。   p101</p><p>作用：限制了接收广播信息的计算机数，使得网络不会因传播过多的广播信息（即所谓的“广播风暴”）而引起性能恶化。</p></li><li></li></ol><h2 id="第四章-网络层"><a href="#第四章-网络层" class="headerlink" title="第四章 网络层"></a>第四章 网络层</h2><ol><li><p>中间设备：  p116</p><ul><li><strong>物理层</strong>使用的中间设备叫做<strong>转发器</strong>。升级版为集线器</li><li><strong>数据链路层</strong>：<strong>网桥或桥接器</strong>。（交换机）</li><li><strong>网络层</strong>：<strong>路由器</strong></li><li><strong>网络层以上</strong>：<strong>网关</strong></li></ul></li><li><p>IP地址：p119</p><table><thead><tr><th>类别</th><th>网络号</th><th>主机号</th><th>最大网络数</th><th>IP地址范围</th><th>单个网段最大主机数</th></tr></thead><tbody><tr><td>A</td><td>8</td><td>24</td><td>126(2<sup>7</sup>-2)</td><td>1.0.0.1-127.255.255.254</td><td>16777214</td></tr><tr><td>B</td><td>16</td><td>16</td><td>16384(2<sup>14</sup>)</td><td>128.0.0.0-191.255.255.255</td><td>65534</td></tr><tr><td>C</td><td>24</td><td>8</td><td>2097152(2<sup>21</sup>)</td><td>192.0.0.0-223.255.255.255</td><td>254</td></tr></tbody></table></li><li><p><strong>IP地址</strong> 简答题：p119???</p><ul><li>IP地址是否合法？</li><li>广播地址？网络号？主机地址？</li></ul></li><li><p>ARP：地址解析协议  p124</p><p>作用：地址映射。通过IP地址找出其对应的硬件地址。</p></li><li><p>IP数据报的格式：  p128</p><p>生存时间字段：防止分组在网络中无限循环。</p></li><li><p>子网掩码：  p137</p><ul><li><p>默认子网掩码：</p><ul><li>A类：255.0.0.0</li><li>B类：255.255.0.0</li><li>C类：255.255.255.0</li></ul></li><li><p>问题：前缀为/30，包含多少IP，多少主机IP</p><p>IP数：2<sup>32-30</sup> = 2<sup>2 </sup> = 4个</p><p>​    IP地址位数为32位，除去前缀还有2位，可分配2的平方个IP</p><p>主机数：4 - 2 = 2 个</p><p>​    IP地址中全0和全1为特殊地址，全0表示本主机，全1表示该网络上的所有主机</p></li></ul></li><li><p>VLSM：变长子网掩码。 p142</p></li><li><p>CIDR：无分类域间路由选择。  p142</p></li><li><p>最长前缀匹配：  p145</p><p>在查找路由表时可能会得到不止一个匹配结果，应当从匹配结果中选择具有最长网络前缀的路由。</p></li><li><p>ICMP：网际控制报文协议。  p149</p><ul><li>PING：<ul><li>作用：用来测试两台主机之间的连通性</li><li>原理：</li></ul></li><li>traceroute：<ul><li>作用：跟踪一个分组从源点到终点的路径。</li><li>原理：TTL，生存时间</li></ul></li></ul></li><li><p>路由协议： p152</p><ul><li>分类：???</li></ul></li><li><p>内部网关协议RIP与OSPF对比：  p153???</p></li><li><p>RIP的特点： p154</p></li><li><p>仅和<strong>相邻路由器</strong>交换信息；who</p></li><li><p>路由器交换的信息是<strong>当前本路由器所知道的全部信息，即自己现在的路由表</strong>；what</p></li><li><p>按<strong>固定的时间间隔</strong>交换路由信息；when</p></li><li><p>IPV6：地址长度128比特   p171</p></li><li><p>私有（专有）地址范围：  p185</p></li></ol><table><thead><tr><th>类别</th><th>范围</th></tr></thead><tbody><tr><td>A类</td><td>10.0.0.0-10.255.255.255（或10.0.0.0/8，又称为24位块）</td></tr><tr><td>B类</td><td>172.16.0.0~172.31.255.255（或172.16.0.0/12，又称为20位块）</td></tr><tr><td>C类</td><td>192.168.0.0~192.168.255.255（或192.168.0.0/16，又称为16位块）</td></tr></tbody></table><ol start="16"><li><p>NAT：网络地址转换。  p187</p><p>DHCP：动态主机配置协议，分配ip。</p><p>NAT和DHCP：家用路由器，应用题</p></li><li><p>课后题：p197 199</p></li></ol><blockquote><p><strong>4-20</strong>  设某路由器建立了如下路由表</p><table><thead><tr><th>目的网络</th><th>子网掩码</th><th>下一跳</th></tr></thead><tbody><tr><td>128.96.39.0</td><td>255.255.255.128</td><td>接口m0</td></tr><tr><td>128.96.39.128</td><td>255.255.255.128</td><td>接口m1</td></tr><tr><td>128.96.40.0</td><td>255.255.255.128</td><td>R2</td></tr><tr><td>128.4.153.0</td><td>255.255.255.192</td><td>R3</td></tr><tr><td>* （默认）</td><td>-</td><td>R4</td></tr></tbody></table><p>现共收到5个分组，其目的地址分别为：</p><p>（1）128.96.39.0</p><p>（2）128.96.40.12    </p><p>（3）128.96.40.151</p><p>（4）192.4.153.17</p><p>（5）192.4.153.90</p><p>试分别计算其下一跳</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">解：用目的IP地址和路由表中的子网掩码相与，若结果出现在路由表中的目的网络中，则转发相应的下一跳，若没有出现在路由表中的目的网络中，则转发到默认站R4.(1与1相与为1,1与0,0与1,0与0都为0)</span><br><span class="line">十进制转化二进制：除二取余，逆序排列</span><br><span class="line">二进制转化十进制：补齐位数，0或1乘以2的0次方，1次方。。。相加</span><br><span class="line">（1）</span><br></pre></td></tr></table></figure><blockquote><p>​    <strong>4-37</strong>  某单位分配到一个地址块136.23.12.64/26.现在需要进一步划分为4个一样大的字网。试问：</p><p>（1）每个子网的网络前缀有多长？</p><p>（2）每一个子网中有多少个地址？</p><p>（3）每一个子网的地址块是什么？</p><p>（4）每一个子网可分配给主机使用的最小地址和最大地址是什么？</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(1)原来网络前缀是26位，需要再增加2位，才能划分4个一样大的子网。因此每个子网的网络前缀是28位</span><br><span class="line">(2)每个子网的地址中有32-28=4位留给主机用，因此共有2的4次方即16个地址（可用的有14个）</span><br><span class="line">(3)地址中的前三个字节分别记为B1,B2,B3则136.23.12.64/26=B1.B2.B3.01000000/26</span><br><span class="line">四个子网的地址块是：</span><br><span class="line">B1.B2.B3.01000000/28=136.23.12.64/28,</span><br><span class="line">B1.B2.B3.01010000/28=136.23.12.80/28,</span><br><span class="line">B1.B2.B3.01100000/28=136.23.12.96/28,</span><br><span class="line">B1.B2.B3.01110000/28=136.23.12.112/28,</span><br><span class="line">(4)136.23.12.64/28,</span><br><span class="line">最小地址：B1.B2.B3.01000001=136.23.12.65,</span><br><span class="line">最大地址：B1.B2.B3.01001110=136.23.12.78,</span><br><span class="line">   136.23.12.80/28,</span><br><span class="line">   最小地址：B1.B2.B3.01010001=136.23.12.81</span><br><span class="line">   最大地址：B1.B2.B3.01011110=136.23.12.94</span><br><span class="line">   136.23.12.96/28,</span><br><span class="line">   最小地址：B1.B2.B3.01100001=136.23.12.97</span><br><span class="line">   最大地址：B1.B2.B3.01101110=136.23.12.110</span><br><span class="line">   136.23.12.112/28,</span><br><span class="line">  最小地址：B1.B2.B3.01110001=136.23.12.113</span><br><span class="line">   最大地址：B1.B2.B3.01111110=136.23.12.126</span><br></pre></td></tr></table></figure><blockquote><p><strong>4-41</strong>  假定网络中的路由器B的路由表有如下的项目（这三列分别表示“目的网络”、“距离”和“下一跳路由器”）：</p><table><thead><tr><th>目的网络</th><th>距离</th><th>下一跳路由器</th></tr></thead><tbody><tr><td>N1</td><td>7</td><td>A</td></tr><tr><td>N2</td><td>2</td><td>C</td></tr><tr><td>N6</td><td>8</td><td>F</td></tr><tr><td>N8</td><td>4</td><td>E</td></tr><tr><td>N9</td><td>4</td><td>F</td></tr></tbody></table><p>​        现在B收到从C发来的路由信息（这两列分别表示“目的网络”和“距离”）：</p><table><thead><tr><th>目的网络</th><th>距离</th></tr></thead><tbody><tr><td>N2</td><td>4</td></tr><tr><td>N3</td><td>8</td></tr><tr><td>N6</td><td>4</td></tr><tr><td>N8</td><td>3</td></tr><tr><td>N9</td><td>5</td></tr></tbody></table><p>​    试求出路由器B更新后的路由表（详细说明每一个步骤）。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">先把收到的路由信息中的距离加一：</span><br><span class="line">N25</span><br><span class="line">N39</span><br><span class="line">N65</span><br><span class="line">N84</span><br><span class="line">N96</span><br><span class="line">路由器B更新后的路由表如下：</span><br><span class="line">N17A无新信息，不改变</span><br><span class="line">N25C相同的下一跳，更新</span><br><span class="line">N39C新的项目，添加进来</span><br><span class="line">N65C不同的下一跳，距离更短，更新</span><br><span class="line">N84E不同的下一跳，距离一样，不改变</span><br><span class="line">N94F不同的下一跳，距离更大，不改变</span><br></pre></td></tr></table></figure><h2 id="第五章-运输层"><a href="#第五章-运输层" class="headerlink" title="第五章 运输层"></a>第五章 运输层</h2><ol><li>网络寻址实现： p203</li></ol><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>运输层</td><td>port</td><td>端到端</td></tr><tr><td>网络层</td><td>IP</td><td>主机之间</td></tr><tr><td>数据链路层</td><td>MAC</td><td>相邻两个节点</td></tr></tbody></table><ol start="2"><li>TCP、UDP对比？  p207</li></ol><table><thead><tr><th>对比</th><th>UDP</th><th>TCP</th></tr></thead><tbody><tr><td><strong>协议名称</strong></td><td>用户数据报协议</td><td>传输控制协议</td></tr><tr><td><strong>是否面向连接</strong></td><td>无连接</td><td>面向连接</td></tr><tr><td><strong>是否支持广播或多播</strong></td><td>支持一对一，一对多，多对一和多对多交互通信</td><td>每一条TCP连接只能有两个端点，只能是点对点（一对一）的</td></tr><tr><td><strong>是否提供可靠传输服务</strong></td><td>尽最大努力交付（不可靠交付）</td><td>可靠交付</td></tr><tr><td><strong>对应用层报文的处理</strong></td><td>面向报文</td><td>面向字节流</td></tr><tr><td><strong>流量控制和拥塞控制</strong></td><td>不使用流量控制和拥塞控制</td><td>使用流量控制和拥塞服务</td></tr><tr><td><strong>首部开销</strong></td><td>首部开销小，仅8字节</td><td>首部最小20字节，最大60字节</td></tr></tbody></table><ol start="3"><li>port：端口，socket：套接字  p207</li><li>熟知端口号或系统端口号：0~1023  p207</li><li>UDP报文格式：p217</li></ol><p><img src="https://zsy0216.gitee.io/images/hexo/computer-networks/UDP%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png" alt="img"></p><ol start="3"><li>TCP报文格式</li></ol><p><img src="https://zsy0216.gitee.io/images/hexo/computer-networks/TCP%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png" alt="img"></p><ol start="3"><li>相同字段：源端口、目的端口、校验和  p217</li><li>TCP的四个计时器：重传计时器、坚持计时器、保活计时器、时间等待计时器。  p225</li><li>TCP的流量控制：滑动窗口技术。  p227</li><li>TCP的拥塞控制方法：慢开始、拥塞避免、快重传、快恢复。  p232</li><li>TCP，建立连接：3次握手，释放连接：4次握手。  p238  非大题</li><li>课后题：p247 248</li></ol><h2 id="第六章-应用层"><a href="#第六章-应用层" class="headerlink" title="第六章 应用层"></a>第六章 应用层</h2><ol><li>DNS：域名系统   p252</li><li>WWW：万维网  p264</li><li>URL：统一资源定位符  p266</li><li>HTTP：超文本传输协议  p267</li><li>HTML：超文本标记语言  p274</li><li>电子邮件协议：  p284<ul><li>SMTP：简单邮件传送协议</li><li>POP：邮局协议</li></ul></li><li>DHCP：动态主机配置协议，  p295</li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> Review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 期末复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心路第八周</title>
      <link href="/2019/06/11/xinlu-8/"/>
      <url>/2019/06/11/xinlu-8/</url>
      
        <content type="html"><![CDATA[<h3 id="Report"><a href="#Report" class="headerlink" title="Report"></a>Report</h3><p>本周为复习周，加上要考科二和六级，剩余的复习时间不足。</p><p>下周考试，不再多言。</p><h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>​    越到考试越浪啊，感觉没有曾经对于考试啊什么的慌乱感了，面对一件事更淡定稳定了，虽然不知道是不是飘了。但是相对于曾经遇到稍微一点点事就不知所措的样子还是感到很是欣慰的。以后再慢慢修炼吧。</p><p>​    </p><p>​    叶剑，以叶为剑，百步杀人。    </p><p>​    叶家，世代修剑，虽未有叶家子弟在江湖上声名显赫，但流传上百年的叶家对剑道领悟仍让叶家在武林中有一席之地。特别是本代叶家家主为妻子带领叶家子弟逐凶万里，并安然凯旋的壮举让世人称道。</p><p>​    叶剑，是家主唯一子嗣。</p><p>​    叶府方圆十里，不曾有任何植被生长，无论是树木还是花草，凡是长有叶子的有生命的物种皆被清除一空，相传与曾经叶家公子叶剑的降生有关，也有传闻是叶家周围风水不好，不适合草木生长，谁也不清楚。在叶家掌控范围内，似乎所有人对于此事的态度都有统一的态度，那就是不知其因，不问其果。</p><p>​    其实，稍微明眼人都猜得出来到底是为什么。虽然本地的人不谈，但常有外地游侠来此，或此处小辈走出，总会听出一些风声。再说，堂堂叶家偌大嘉业，怎么会选址在一个不长草木，寸草不生的蛮荒之地呢？</p><p>​    </p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6-03</title>
      <link href="/2019/06/10/6-03/"/>
      <url>/2019/06/10/6-03/</url>
      
        <content type="html"><![CDATA[<h3 id="6-3"><a href="#6-3" class="headerlink" title="6.3"></a>6.3</h3><hr><p>​    雨女无瓜。</p><p>​    今天又是打雷又是下雨下冰雹的，不知道有没有下（夏）雪呢？</p><p>​    刚才看微博说郑州雷劈死个人。。。</p><p>​    天道无常，人终究无法胜过天道。</p><p>​    今天在知乎看到一个写渡劫的文章，在我看过那么多的玄幻小说的描写之后，那篇文章最后的“姬你太美”仍然让人感到amazing啊。</p><p>​    ctrl.</p><h3 id="6-5"><a href="#6-5" class="headerlink" title="6.5"></a>6.5</h3><hr><p>​    感觉这两天对这个热情不高了啊。</p><p>​    前两天忙着自己的事情的时候反而能够想更多，这几天游戏一玩又感觉没事干的时候，有了更多时间却更少的灵感。还是得多找事情做啊，越是审视自己越是觉得不满意啊，感觉自己荒废的太多了，多少成功的案例，为什么自己不愿去追求呢？</p><p>​    昨天看到一个东西，说希望就是改变整盘菜的那撮盐，我刚才想的是梦想，或者说是目标。目标在生活中实在太重要了，特别是像我这样的人，，也说不出来是什么样的，但如果失去目标，我就变得一直庸碌了。永远不知道在下一秒到来时要做什么，行尸走肉般，坐在电脑前，美其名曰写东西，其实就是无谓的对自己的吐槽了，高三干这件事干了一年，仍然一无所成，这样写只给当下的自己拖延了时间，给予一点点的安慰感，然后呢？然后呢？然后一切又归于沉寂，有什么改善吗？</p><p>​    不写了，这样还不如去学c、t、r、l.</p><h3 id="6-6"><a href="#6-6" class="headerlink" title="6.6"></a>6.6</h3><hr><p>​    这两天在想改变一下心路的写法，不再以天为单位的记录了，而是以每次灵感的到来，或者遇到值得记录的东西，或是看到值得分享的事情。依然每周最后一天发布到网站上。更多的去写一些生活感悟，生活记录，生活的关注点，以及触动自己的言论或故事。</p><p>​    刚才看了一下一个耶鲁大学的一个关于死亡的公开课，主讲人可能因为坐在桌子上而火遍大江南北，国外的教授果然风采不同啊。需要知道的是，死亡并不是一件糟糕的事情，永生也不就是好事，人并没有所谓的灵魂（soul）。谢利卡根（shelly kagan）。</p><p>​    今天早上醒的略早了半个小时，非尿憋醒，然后打开知乎看到了一篇文章写得很好，是一个出自衡中的北大学生。听到北大再联系到衡中就不再惊讶了是吧。标题是学霸的作息时间是怎样的？为什么不会困？里面讲述的有几点是我十分赞同的，下面引述一下。</p><p>​    首先，最重要的也就是文章的开篇说的就是成为学霸的秘诀那就是自我管理，而不是他们与生俱来的体力胜于常人。这一点说的其实很准确，但又很难理解，有时自己可能会觉得我明明睡得比他还多，质量也不低，为什么白天的精神状态还是不如别人呢？这就是自我管理的重要性了。当你在一天之中没有很好的自我管理精力的话，一定会被这样那样的事情消耗，甚至于你思考当下去做什么的精力会比你做那件事情的精力更多。所以成为一个自律的人，良好的分配自己的精力并且规划好自己一天的时间。</p><p>​    然后文章分为早晨中午晚上三部分去介绍一天不同时间段的安排和需要注意的地方。</p><p>​    早晨，起床，清醒，专注。首先注意的是不要熬夜，熬夜对于第二天的状态影响是很大的，当然偶尔为之可能并不会察觉出来。关于清醒，作者谈到早晨一定要见到阳光，还很有理有据的举出阳光刺激大脑合成血清素，血清素调节我们的清醒度的论证，当然，咱也不知道，咱也不敢问。就是不知道阴雨连绵的时候他是如何清醒的（手动滑稽，来自一个真实杠精的杠）。</p><p>​    作者还谈到，早晨不要接触杂乱的信息，微博、抖音、包括知乎（想想我大早晨没起床刷到这篇文章，汗颜…）。杂乱无章的碎片信息确实很麻痹一个人，你看今天早上刷知乎差点起不来不是。看作者是深受一天之计在于晨的影响，举了很多名人名家上午专注工作的例子，论证早晨应当投入到紧张、有序、逻辑化、体系化的工作中，并尽可能的延续下去。</p><p>​    中午，饮食，午休，运动。晚上，冥想，间歇，总结。饮食不多说了，咱还是不知道，不过吃太饱确实容易犯困。。。我自从上大学以来就很少午休了，一来是只要晚上不睡的太晚，白天的精神我基本还能保证，二来是我晚上进入睡眠有一定的障碍，所以我就不敢在白天睡觉，导致晚上更难入眠。晚上的冥想和总结我觉得对我应该有些帮助，每天昏昏沉沉的不知道干嘛，冥想确实让人平静下来。总结我最近刚好也在做，帮助虽然还不是很大，但重在坚持，慢慢的规范化，我相信会有一定作用的。</p><p>​    好了，基本就介绍完了。其实类似文章也看过不好，但自己一直无法形成自律的生活习惯，对自己的时间也没有有效的安排，每天的时间都貌似在庸庸碌碌的度过，导致自己一直也很有负罪感，一直也没有下定决定去改变，慢慢去修缮自己吧，由小及大，由浅入深，咸鱼终有翻身之日，鲤鱼终有越过龙门之时。</p><h3 id="6-7"><a href="#6-7" class="headerlink" title="6.7"></a>6.7</h3><hr><p>​    今天呐</p><h3 id="6-8"><a href="#6-8" class="headerlink" title="6.8"></a>6.8</h3><hr><p>​    昨天呐</p>]]></content>
      
      
      <categories>
          
          <category> Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫和信息提取</title>
      <link href="/2019/06/04/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%92%8C%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96/"/>
      <url>/2019/06/04/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%92%8C%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Requests库入门"><a href="#1-Requests库入门" class="headerlink" title="1.Requests库入门"></a>1.Requests库入门</h1><h2 id="Requests安装"><a href="#Requests安装" class="headerlink" title="Requests安装"></a>Requests安装</h2><p>用管理员身份打开命令提示符：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><p>测试：打开IDLE：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.status_code</span><br><span class="line"><span class="number">200</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.encoding = <span class="string">'utf-8'</span> <span class="comment">#修改默认编码</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.text<span class="comment">#打印网页内容</span></span><br></pre></td></tr></table></figure><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><p>超文本传输协议,Hypertext Transfer Protocol.</p><p>HTTP是一个基于“请求与响应”模式的、无状态的应用层协议。</p><p>HTTP协议采用URL作为定位网络资源的标识。</p><h3 id="URL格式"><a href="#URL格式" class="headerlink" title="URL格式"></a>URL格式</h3><p><code>http://host[:port][path]</code></p><p>host:合法的Internet主机域名或IP地址</p><p>port：端口号，缺省端口为80</p><p>path：请求资源的路径</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>GET</td><td>请求获取URL位置的资源</td></tr><tr><td>HEAD</td><td>请求获取URl位置资源的响应消息报告，即获得该资源的头部信息</td></tr><tr><td>POST</td><td>请求向URL位置的资源后附加新的数据</td></tr><tr><td>PUT</td><td>请求向URL位置存储一个资源，覆盖原URL位置的资源</td></tr><tr><td>PATCH</td><td>请求局部更新URL位置的资源，即改变该处资源的部分内容</td></tr><tr><td>DELETE</td><td>请求删除URL位置存储的资源</td></tr></tbody></table><h2 id="Requests主要方法"><a href="#Requests主要方法" class="headerlink" title="Requests主要方法"></a>Requests主要方法</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>requests.request()</td><td>构造一个请求，支撑以下各方法的基础方法</td></tr><tr><td>requests.get()</td><td>获取HTML网页的主要方法，对应于HTTP的GET</td></tr><tr><td>requests.head()</td><td>获取HTML网页头信息的方法，对应于HTTP的HEAD</td></tr><tr><td>requests.post()</td><td>向HTML网页提交POST请求的方法，对应于HTTP的POST</td></tr><tr><td>requests.put()</td><td>向HTML网页提交PUT请求的方法，对应于HTTP的PUT</td></tr><tr><td>requests.patch()</td><td>向HTML网页提交局部修改请求，对应于HTTP的PATCH</td></tr><tr><td>requests.delete()</td><td>向HTML网页提交删除请求，对应于HTTP的DELETE</td></tr></tbody></table><p>主要方法为request方法，其他方法都是在此方法基础上封装而来以便使用。</p><h3 id="request-方法"><a href="#request-方法" class="headerlink" title="request()方法"></a>request()方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">requests.request(method,url,**kwargs)</span><br><span class="line"><span class="comment">#method:请求方式，对应get/put/post等7种</span></span><br><span class="line"><span class="comment">#url：拟获取页面的url链接</span></span><br><span class="line"><span class="comment">#**kwargs：控制访问的参数，共13个</span></span><br></pre></td></tr></table></figure><p>**kwargs：控制访问的参数，均为可选项</p><h3 id="get-方法"><a href="#get-方法" class="headerlink" title="get()方法"></a>get()方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">r  = requests.get(url)</span><br><span class="line">完整方法：</span><br><span class="line">requests.get(url,params=<span class="literal">None</span>,**kwargs)</span><br><span class="line">url:拟获取页面的url链接</span><br><span class="line">params:url中的额外参数，字典或字节流格式，可选</span><br><span class="line">**kwargs:<span class="number">12</span>个控制访问的参数，可选</span><br></pre></td></tr></table></figure><p>get()方法：</p><p>构造一个向服务器请求资源的Request对象</p><p>返回一个包含服务器资源的Response对象</p><h4 id="Response对象"><a href="#Response对象" class="headerlink" title="Response对象"></a>Response对象</h4><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>r.status_code</td><td>HTTP请求的返回状态，200表示连接成功，404表示失败</td></tr><tr><td>r.text</td><td>HTTP响应内容的字符串形式，即：url对应的页面内容</td></tr><tr><td>r.encoding</td><td>从HTTP header中猜测的响应内容编码方式</td></tr><tr><td>r.apparent_encoding</td><td>从内容中分析出的响应内容编码方式（备选编码方式）</td></tr><tr><td>r.content</td><td>HTTP响应内容的二进制形式</td></tr></tbody></table><h3 id="head-方法"><a href="#head-方法" class="headerlink" title="head()方法"></a>head()方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = requests.head(&apos;http://httpbin.org/get&apos;)</span><br><span class="line">r.headers</span><br></pre></td></tr></table></figure><p>获取网络资源的概要信息</p><h3 id="post-方法"><a href="#post-方法" class="headerlink" title="post()方法"></a>post()方法</h3><p>向服务器提交新增数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">payload = &#123;<span class="string">'key1'</span>:<span class="string">'value1'</span>,<span class="string">'key2'</span>:<span class="string">'value2'</span>&#125; <span class="comment">#新建一个字典</span></span><br><span class="line"><span class="comment">#向URL POST一个字典，自动编码为form（表单）</span></span><br><span class="line">r = requests.post(<span class="string">'http://httpbin.org/post'</span>,data = payload)</span><br><span class="line"><span class="comment">#向URL POST一个字符串，自动编码为data</span></span><br><span class="line">r = requests.post(<span class="string">'http://httpbin.org/post'</span>,data = <span class="string">'ABC'</span>) </span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h3 id="put-方法"><a href="#put-方法" class="headerlink" title="put()方法"></a>put()方法</h3><p>同post，只不过会把原来的内容覆盖掉。</p><h3 id="patch-方法"><a href="#patch-方法" class="headerlink" title="patch()方法"></a>patch()方法</h3><h3 id="delete-方法"><a href="#delete-方法" class="headerlink" title="delete()方法"></a>delete()方法</h3><h2 id="Requests库的异常"><a href="#Requests库的异常" class="headerlink" title="Requests库的异常"></a>Requests库的异常</h2><table><thead><tr><th align="left">异常</th><th>说明</th></tr></thead><tbody><tr><td align="left">requests.ConnectionError</td><td>网络连接错误异常，如DNS查询失败、拒绝连接等</td></tr><tr><td align="left">requests.HTTPError</td><td>HTTP错误异常</td></tr><tr><td align="left">requests.URLRequired</td><td>URL缺失异常</td></tr><tr><td align="left">requests.TooManyRedirects</td><td>超过最大 重定向次数，产生重定向异常</td></tr><tr><td align="left">requests.ConnectTimeout</td><td>连接远程服务器超时异常</td></tr><tr><td align="left">requests.Timeout</td><td>请求URL超时，产生超时异常</td></tr></tbody></table><table><thead><tr><th>异常方法</th><th>说明</th></tr></thead><tbody><tr><td>r.raise_for_status</td><td>如果不是200产生异常requests.HTTPError</td></tr></tbody></table><h2 id="爬取网页的通用代码框架"><a href="#爬取网页的通用代码框架" class="headerlink" title="爬取网页的通用代码框架"></a>爬取网页的通用代码框架</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url,timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status() <span class="comment">#如果不是200，引发HTTPError异常</span></span><br><span class="line">        r.recoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"产生异常"</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    url = <span class="string">"http://www.baidu.com"</span></span><br><span class="line">    print(getHTMLText(url))</span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="向百度提交关键词"><a href="#向百度提交关键词" class="headerlink" title="向百度提交关键词"></a>向百度提交关键词</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向搜索引擎进行关键词提交</span></span><br><span class="line">url = <span class="string">"http://www.baidu.com"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kv = &#123;<span class="string">'wd'</span>:<span class="string">'python'</span>&#125;</span><br><span class="line">    r = requests.get(url,params =kv)</span><br><span class="line">    print(r.request.url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    print(len(r.text))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"产生异常"</span>)</span><br></pre></td></tr></table></figure><h3 id="获取网络图片及存储"><a href="#获取网络图片及存储" class="headerlink" title="获取网络图片及存储"></a>获取网络图片及存储</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">url = <span class="string">"http://image.ngchina.com.cn/2019/0423/20190423024928618.jpg"</span></span><br><span class="line">root = <span class="string">"D://2345//Temp//"</span></span><br><span class="line">path = root + url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(root):</span><br><span class="line">        os.mkdir(root)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        <span class="keyword">with</span> open(path,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(r.content)  <span class="comment">#r.content返回二进制内容</span></span><br><span class="line">            f.close()</span><br><span class="line">            print(<span class="string">"文件保存成功"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"文件已存在"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><h1 id="2-信息提取之Beautiful-Soup库入门"><a href="#2-信息提取之Beautiful-Soup库入门" class="headerlink" title="2.信息提取之Beautiful Soup库入门"></a>2.信息提取之Beautiful Soup库入门</h1><h2 id="Beautiful-Soup库安装"><a href="#Beautiful-Soup库安装" class="headerlink" title="Beautiful Soup库安装"></a>Beautiful Soup库安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install beautifulsoup4</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">"http://python123.io/ws/demo.html"</span>)</span><br><span class="line">demo = r.text</span><br><span class="line">form bs4 <span class="keyword">import</span> BeautifulSoup <span class="comment">#从bs4中引入BeautifulSoup类</span></span><br><span class="line">soup = BeautifulSoup(demo, <span class="string">"html.parser"</span>)</span><br></pre></td></tr></table></figure><p>Beautiful Soup库是解析、遍历、维护“标签树”的功能库</p><h2 id="Beautiful-Soup库的基本元素"><a href="#Beautiful-Soup库的基本元素" class="headerlink" title="Beautiful Soup库的基本元素"></a>Beautiful Soup库的基本元素</h2><h3 id="Beautiful-Soup库的引用"><a href="#Beautiful-Soup库的引用" class="headerlink" title="Beautiful Soup库的引用"></a>Beautiful Soup库的引用</h3><p>Beautiful Soup库，也叫beautifulsoup4或bs4.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(demo,<span class="string">"html.parser"</span>)</span><br></pre></td></tr></table></figure><h3 id="Beautiful-Soup类的基本元素"><a href="#Beautiful-Soup类的基本元素" class="headerlink" title="Beautiful Soup类的基本元素"></a>Beautiful Soup类的基本元素</h3><table><thead><tr><th>基本元素</th><th>说明</th></tr></thead><tbody><tr><td>Tag</td><td>标签，最基本的信息组织单元，分别用&lt;&gt;和&lt;/&gt;标明开头和结尾</td></tr><tr><td>Name</td><td>标签的名字，<p>…</p>的名字是’p’，格式：<tag>.name</tag></td></tr><tr><td>Attributes</td><td>标签的属性，字典形式组织，格式：<tag>.attrs</tag></td></tr><tr><td>NavigableString</td><td>标签内非属性字符串，&lt;&gt;…&lt;/&gt;中字符串，格式：<tag>.string</tag></td></tr><tr><td>Comment</td><td>标签内字符串的注释部分，一种特殊的Comment类型</td></tr></tbody></table><h2 id="基于bs4库的HTML内容遍历方法"><a href="#基于bs4库的HTML内容遍历方法" class="headerlink" title="基于bs4库的HTML内容遍历方法"></a>基于bs4库的HTML内容遍历方法</h2><h3 id="下行遍历"><a href="#下行遍历" class="headerlink" title="下行遍历"></a>下行遍历</h3><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.contents(列表类型)</td><td>子节点的列表，将<tag>所有儿子节点存入列表</tag></td></tr><tr><td>.children</td><td>子节点的迭代类型，与.contents类似，用于循环遍历儿子节点</td></tr><tr><td>.descendants</td><td>子孙节点的迭代类型，包含所有子孙节点，用于循环遍历</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#遍历儿子节点</span></span><br><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span> soup.body.children</span><br><span class="line">print(child)</span><br><span class="line"><span class="comment">#遍历子孙节点</span></span><br><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span> soup.body.descendants</span><br><span class="line">print(child)</span><br></pre></td></tr></table></figure><h3 id="上行遍历"><a href="#上行遍历" class="headerlink" title="上行遍历"></a>上行遍历</h3><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.parent</td><td>节点的父亲标签</td></tr><tr><td>.parents</td><td>节点先辈标签的迭代类型，用于循环遍历先辈节点</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(demo,<span class="string">"html.parser"</span>)</span><br><span class="line"><span class="keyword">for</span> parent <span class="keyword">in</span> soup.a.parents:</span><br><span class="line">    <span class="keyword">if</span> parent <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        print(parent)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(parent.name)</span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line"><span class="comment">#p</span></span><br><span class="line"><span class="comment">#body</span></span><br><span class="line"><span class="comment">#html</span></span><br><span class="line"><span class="comment">#[document]</span></span><br></pre></td></tr></table></figure><h3 id="平行遍历"><a href="#平行遍历" class="headerlink" title="平行遍历"></a>平行遍历</h3><p>平行遍历发生在同一个父节点下的各节点间。</p><p>下一个获取的可能是字符串类型，不一定是下一个节点。</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.next_sibling</td><td>返回按照HTML文本顺序的下一个平行节点标签</td></tr><tr><td>.previous_sibling</td><td>返回按照HTML文本顺序的上一个平行节点标签</td></tr><tr><td>.next_siblings</td><td>迭代类型，返回按照HTML文本顺序的后续所有平行节点标签</td></tr><tr><td>.previous_siblings</td><td>迭代类型，返回按照HTML文本顺序的前续所有平行节点标签</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#遍历后续节点</span></span><br><span class="line"><span class="keyword">for</span> sibling <span class="keyword">in</span> soup.a.next_siblings</span><br><span class="line">print(sibling)</span><br><span class="line"><span class="comment">#遍历前续节点</span></span><br><span class="line"><span class="keyword">for</span> sibling <span class="keyword">in</span> soup.a.previous_siblings</span><br><span class="line">print(sibling)</span><br></pre></td></tr></table></figure><h2 id="基于bs4库的HTML格式化和编码"><a href="#基于bs4库的HTML格式化和编码" class="headerlink" title="基于bs4库的HTML格式化和编码"></a>基于bs4库的HTML格式化和编码</h2><h3 id="格式化方法：-prettify"><a href="#格式化方法：-prettify" class="headerlink" title="格式化方法：.prettify()"></a>格式化方法：.prettify()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(demo,<span class="string">"html.parser"</span>)</span><br><span class="line">print(soup.a.prettify())</span><br></pre></td></tr></table></figure><h3 id="编码：默认utf-8"><a href="#编码：默认utf-8" class="headerlink" title="编码：默认utf-8"></a>编码：默认utf-8</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(<span class="string">"&lt;p&gt;中文&lt;/p&gt;"</span>,<span class="string">"html.parser"</span>)</span><br><span class="line">soup.p.string</span><br><span class="line"><span class="comment">#'中文'</span></span><br><span class="line">print(soup.p.prettify())</span><br><span class="line"><span class="comment">#&lt;p&gt;</span></span><br><span class="line"><span class="comment">#  中文</span></span><br><span class="line"><span class="comment">#&lt;/p&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3-信息组织与提取"><a href="#3-信息组织与提取" class="headerlink" title="3.信息组织与提取"></a>3.信息组织与提取</h1><h2 id="信息标记的三种形式"><a href="#信息标记的三种形式" class="headerlink" title="信息标记的三种形式"></a>信息标记的三种形式</h2><p>标记后的信息可形成信息组织结构，增加了信息的维度；</p><p>标记后的信息可用于通信、存储和展示；</p><p>标记的结构和信息一样具有重要价值；</p><p>标记后的信息有利于程序的理解和运用。</p><h3 id="XML-eXtensible-Matkup-Language"><a href="#XML-eXtensible-Matkup-Language" class="headerlink" title="XML: eXtensible Matkup Language"></a>XML: eXtensible Matkup Language</h3><p>最早的通用信息标记语言，可扩展性好，但繁琐。</p><p>用于Internet上的信息交互和传递。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>...<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JSON-JavaScript-Object-Notation"><a href="#JSON-JavaScript-Object-Notation" class="headerlink" title="JSON:  JavaScript Object Notation"></a>JSON:  JavaScript Object Notation</h3><p>信息有类型，适合程序处理(js)，较XML简洁。</p><p>用于移动应用云端和节点的信息通信，无注释。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#有类型的键值对表示信息的标记形式</span><br><span class="line">"key":"value"</span><br><span class="line">"key":["value1","value2"]</span><br><span class="line">"key":&#123;"subkey":"subvalue"&#125;</span><br></pre></td></tr></table></figure><h3 id="YAMl-YAML-Ain’t-Markup-Language"><a href="#YAMl-YAML-Ain’t-Markup-Language" class="headerlink" title="YAMl: YAML Ain’t Markup Language"></a>YAMl: YAML Ain’t Markup Language</h3><p>信息无类型，文本信息比例最高，可读性好。</p><p>用于各类系统的配置文件，有注释易读。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#无类型的键值对表示信息的标记形式</span></span><br><span class="line"><span class="string">key</span> <span class="string">:</span> <span class="string">"value"</span></span><br><span class="line"><span class="string">key</span> <span class="string">:</span> <span class="comment">#comment</span></span><br><span class="line"><span class="bullet">-</span><span class="string">value1</span></span><br><span class="line"><span class="bullet">-</span><span class="string">value2</span></span><br><span class="line"><span class="string">key</span> <span class="string">:</span></span><br><span class="line"><span class="string">subkey</span> <span class="string">:</span> <span class="string">subvalue</span></span><br></pre></td></tr></table></figure><h2 id="信息提取的一般方法"><a href="#信息提取的一般方法" class="headerlink" title="信息提取的一般方法"></a>信息提取的一般方法</h2><h3 id="方法一：完整解析信息的标记形式，再提取关键信息。"><a href="#方法一：完整解析信息的标记形式，再提取关键信息。" class="headerlink" title="方法一：完整解析信息的标记形式，再提取关键信息。"></a>方法一：完整解析信息的标记形式，再提取关键信息。</h3><p>XML JSON YAML</p><p>需要标记解析器，例如bs4库的标签树遍历。</p><p>优点：信息解析准确</p><p>缺点：提取过程繁琐，过程慢</p><h3 id="方法二：无视标记形式，直接搜索关键信息"><a href="#方法二：无视标记形式，直接搜索关键信息" class="headerlink" title="方法二：无视标记形式，直接搜索关键信息"></a>方法二：无视标记形式，直接搜索关键信息</h3><p>搜索</p><p>对信息的文本查找函数即可。</p><p>优点：提取过程简洁，速度较快</p><p>缺点：提取过程准确性与信息内容相关</p><h3 id="融合方法：结合形式解析与搜索方法-提取关键信息"><a href="#融合方法：结合形式解析与搜索方法-提取关键信息" class="headerlink" title="融合方法：结合形式解析与搜索方法,提取关键信息"></a>融合方法：结合形式解析与搜索方法,提取关键信息</h3><p>XML JSON YAML  搜索</p><p>需要标记解析器及文本查找函数。</p><h3 id="实例：提取HTML中所有URL链接"><a href="#实例：提取HTML中所有URL链接" class="headerlink" title="实例：提取HTML中所有URL链接"></a>实例：提取HTML中所有URL链接</h3><blockquote><p>思路：    1. 搜索到所有<a>标签</a></p><p>​        2.解析<a>标签格式，提取href后的链接内容</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">form bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(demo,<span class="string">"html.parser"</span>)</span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>):</span><br><span class="line">print(link.get(<span class="string">'href'</span>))</span><br></pre></td></tr></table></figure><h2 id="基于bs4库的HTML内容查找方法"><a href="#基于bs4库的HTML内容查找方法" class="headerlink" title="基于bs4库的HTML内容查找方法"></a>基于bs4库的HTML内容查找方法</h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>&lt;&gt;.find_all(name,attrs,recursive,string,**kwargs)</td><td>返回一个列表类型，存储查找的结果</td></tr></tbody></table><blockquote><p>简写形式：<tag>(..) 等价于 <tag>.find_all(..)</tag></tag></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#name:对标签名称的检索字符串</span></span><br><span class="line">soup.find_all(<span class="string">'a'</span>)</span><br><span class="line">soup.find_all([<span class="string">'a'</span>, <span class="string">'b'</span>])</span><br><span class="line">soup.find_all(<span class="literal">True</span>) <span class="comment">#返回soup的所有标签信息</span></span><br><span class="line"><span class="keyword">for</span> tag <span class="keyword">in</span> soup.find_all(<span class="literal">True</span>):</span><br><span class="line">    print(tag.name) <span class="comment">#html head title body p b p a a</span></span><br><span class="line"><span class="comment">#输出所有b开头的标签，包括b和body    </span></span><br><span class="line"><span class="comment">#引入正则表达式库</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">for</span> tag <span class="keyword">in</span> soup.find_all(re.compile(<span class="string">'b'</span>)):</span><br><span class="line">    print(tag.name) <span class="comment">#body b</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#attrs:对标签属性值的检索字符串，可标注属性检索</span></span><br><span class="line">soup.find_all(<span class="string">'p'</span>, <span class="string">'course'</span>)</span><br><span class="line">soup.find_all(id=<span class="string">'link1'</span>)</span><br><span class="line"><span class="keyword">import</span> re </span><br><span class="line">soup.find_all(id=re.compile(<span class="string">'link'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#recursive:是否对子孙全部检索，默认为True</span></span><br><span class="line">soup.find_all(<span class="string">'p'</span>, recursive = <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#string:&lt;&gt;...&lt;/&gt;字符串区域的检索字符串</span></span><br><span class="line">soup.find_all(string = <span class="string">"Basic Python"</span>)</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">soup.find_all(string = re.compile(<span class="string">'Python'</span>))</span><br><span class="line"><span class="comment">#简写形式：soup(..) = soup.find_all(..)</span></span><br></pre></td></tr></table></figure><p>拓展方法：参数同.find_all()</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>&lt;&gt;.find()</td><td>搜索且只返回一个结果，字符串类型</td></tr><tr><td>&lt;&gt;.find_parents()</td><td>在先辈节点中搜索，返回列表类型</td></tr><tr><td>&lt;&gt;.find_parent()</td><td>在先辈节点中返回一个结果，字符串类型</td></tr><tr><td>&lt;&gt;.find_next_siblings()</td><td>在后续平行节点中搜索，返回列表类型</td></tr><tr><td>&lt;&gt;.find_next_sibling()</td><td>在后续平行节点中返回一个结果，字符串类型</td></tr><tr><td>&lt;&gt;.find_previous_siblings()</td><td>在前续平行节点中搜索，返回列表类型</td></tr><tr><td>&lt;&gt;.find_previous_sibling()</td><td>在前续平行节点中返回一个结果，字符串类型</td></tr></tbody></table><h1 id="4-信息提取实例"><a href="#4-信息提取实例" class="headerlink" title="4.信息提取实例"></a>4.信息提取实例</h1><h2 id="中国大学排名定向爬虫"><a href="#中国大学排名定向爬虫" class="headerlink" title="中国大学排名定向爬虫"></a>中国大学排名定向爬虫</h2><blockquote><p>功能描述：</p><p>​    输入：大学排名URL链接</p><p>​    输出：大学排名信息的屏幕输出（排名，大学名称，总分）</p><p>​    技术路线：requests-bs4</p><p>​    定向爬虫：仅对输入URL进行爬取，不拓展爬取</p></blockquote><blockquote><p>程序的结构设计：</p><p>​    步骤1：从网络上获取大学排名网页内容 </p><p>​            getHTMLText()</p><p>​    步骤2：提取网页内容中信息到合适的数据结构</p><p>​            fillUnivList()</p><p>​    步骤3：利用数据结构展示并输出结果</p><p>​            printUnivList()</p></blockquote><h2 id="初步代码编写"><a href="#初步代码编写" class="headerlink" title="初步代码编写"></a>初步代码编写</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout= <span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fillUnivList</span><span class="params">(ulist, html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> soup.find(<span class="string">'tbody'</span>).children:</span><br><span class="line">        <span class="keyword">if</span> isinstance(tr, bs4.element.Tag):</span><br><span class="line">            tds = tr(<span class="string">'td'</span>)</span><br><span class="line">            ulist.append([tds[<span class="number">0</span>].string, tds[<span class="number">1</span>].string, tds[<span class="number">3</span>].string])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printUnivList</span><span class="params">(ulist, num)</span>:</span></span><br><span class="line">    print(<span class="string">"&#123;:^10&#125;\t&#123;:^6&#125;\t&#123;:^10&#125;"</span>.format(<span class="string">"排名"</span>, <span class="string">"学校名称"</span>, <span class="string">"分数"</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        u = ulist[i]</span><br><span class="line">        print(<span class="string">"&#123;:^10&#125;\t&#123;:^6&#125;\t&#123;:^10&#125;"</span>.format(u[<span class="number">0</span>], u[<span class="number">1</span>], u[<span class="number">2</span>]))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    uinfo = []</span><br><span class="line">    url = <span class="string">'http://www.zuihaodaxue.cn/zuihaodaxuepaiming2016.html'</span></span><br><span class="line">    html = getHTMLText(url)</span><br><span class="line">    fillUnivList(uinfo,html)</span><br><span class="line">    printUnivList(uinfo,<span class="number">20</span>) <span class="comment">#20 univs</span></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h2 id="中文输出对齐问题"><a href="#中文输出对齐问题" class="headerlink" title="中文输出对齐问题"></a>中文输出对齐问题</h2><p>当输出中文的宽度不够时，系统会采用西文字符填充，导致对齐出现问题。</p><p>可以使用中文空格chr(12288)填充解决。</p><p><code>&lt;填充&gt;</code>：用于填充的单个字符</p><p><code>&lt;对齐&gt;</code>：&lt;左对齐    &gt;右对齐        ^居中对齐</p><p><code>&lt;宽度&gt;</code>：槽的设定输出宽度</p><p><code>,</code>：数字的千位分隔符适用于整数和浮点数</p><p><code>&lt;精度&gt;</code>：浮点数小数部分的精度或字符串的最大输出长度</p><p><code>&lt;类型&gt;</code>：整数类型b,c,d,o,x,X浮点数类型e,E,f,%</p><h2 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout= <span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fillUnivList</span><span class="params">(ulist, html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> soup.find(<span class="string">'tbody'</span>).children:</span><br><span class="line">        <span class="keyword">if</span> isinstance(tr, bs4.element.Tag):</span><br><span class="line">            tds = tr(<span class="string">'td'</span>)</span><br><span class="line">            ulist.append([tds[<span class="number">0</span>].string, tds[<span class="number">1</span>].string, tds[<span class="number">3</span>].string])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printUnivList</span><span class="params">(ulist, num)</span>:</span></span><br><span class="line">    tplt = <span class="string">"&#123;0:^10&#125;\t&#123;1:&#123;3&#125;^10&#125;\t&#123;2:^10&#125;"</span></span><br><span class="line">    print(tplt.format(<span class="string">"排名"</span>, <span class="string">"学校名称"</span>, <span class="string">"分数"</span>,chr(<span class="number">12288</span>)))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        u = ulist[i]</span><br><span class="line">        print(tplt.format(u[<span class="number">0</span>], u[<span class="number">1</span>], u[<span class="number">2</span>],chr(<span class="number">12288</span>)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    uinfo = []</span><br><span class="line">    url = <span class="string">'http://www.zuihaodaxue.cn/zuihaodaxuepaiming2016.html'</span></span><br><span class="line">    html = getHTMLText(url)</span><br><span class="line">    fillUnivList(uinfo,html)</span><br><span class="line">    printUnivList(uinfo,<span class="number">20</span>) <span class="comment">#20 univs</span></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="5-实战之Re库入门"><a href="#5-实战之Re库入门" class="headerlink" title="5.实战之Re库入门"></a>5.实战之Re库入门</h1><p>正则表达式</p><ul><li>通用的字符串表达框架</li><li>简介表达一组字符串的表达式</li><li>针对字符串表达“简洁”和“特征”思想的工具</li><li>判断某字符串的特征归属</li></ul><h2 id="正则表达式的语法"><a href="#正则表达式的语法" class="headerlink" title="正则表达式的语法"></a>正则表达式的语法</h2><table><thead><tr><th>操作符</th><th>说明</th><th>实例</th></tr></thead><tbody><tr><td>.</td><td>表示任何单个字符</td><td></td></tr><tr><td>[ ]</td><td>字符集，对单个字符给出取值范围</td><td>[abc]表达式a、b、c,[a-z]表示a到z单个字符</td></tr><tr><td>[^ ]</td><td>非字符集，对单个字符给出排除范围</td><td>[^abc]表示非a或b或c的单个字符</td></tr><tr><td>*</td><td>前一个字符0次或无限次扩展</td><td>abc* 表示 ab、abc、abcc、abccc等</td></tr><tr><td>+</td><td>前一个字符1次或无限次扩展</td><td>abc+ 表示 abc、abcc、abccc等</td></tr><tr><td>?</td><td>前一个字符0次或1次扩展</td><td>abc？表示 ab、abc</td></tr><tr><td>|</td><td>左右表达式任意一个</td><td>abc|def 表示 abc 、def</td></tr><tr><td>{m}</td><td>扩展前一个字符m次</td><td>ab{2}c表示abbc</td></tr><tr><td>{m,n}</td><td>扩展前一个字符m至n次（含n）</td><td>ab{1,2}c表示abc、abbc</td></tr><tr><td>^</td><td>匹配字符串开头</td><td>^abc表示abc且在一个字符串的开头</td></tr><tr><td>$</td><td>匹配字符串结尾</td><td>abc$表示abc且在一个字符串的结尾</td></tr><tr><td>( )</td><td>分组标记，内部只能使用|操作符</td><td>(abc)表示abc，{abc|def}表示abc、def</td></tr><tr><td>\d</td><td>数字，等价于[0-9]</td><td></td></tr><tr><td>\w</td><td>单词字符，等价于[A-Za-z0-9_]</td><td></td></tr></tbody></table><h3 id="经典正则表达式实例"><a href="#经典正则表达式实例" class="headerlink" title="经典正则表达式实例"></a>经典正则表达式实例</h3><table><thead><tr><th>正则表达式</th><th>说明</th></tr></thead><tbody><tr><td><code>^[A-Za-z]+$</code></td><td>由26个字母组成的字符串</td></tr><tr><td><code>^[A-Za-z0-9]+$</code></td><td>由26个字母和数字组成的字符串</td></tr><tr><td><code>^-?\d+$</code></td><td>整数形式的字符串</td></tr><tr><td><code>^[0-9]*[1-9][0-9]*$</code></td><td>正整数形式的字符串</td></tr><tr><td><code>[1-9]\d{5}</code></td><td>中国境内邮政编码，6位</td></tr><tr><td><code>[\u4e00-\u9fa5]</code></td><td>匹配中文字符</td></tr><tr><td>`\d{3}-\d{8}</td><td>\d{4}-\d{7}`</td></tr></tbody></table><h2 id="Re库的基本使用"><a href="#Re库的基本使用" class="headerlink" title="Re库的基本使用"></a>Re库的基本使用</h2><p>Re库是Python的标准库，主要用于字符串匹配。</p><h3 id="正则表达式的表示类型"><a href="#正则表达式的表示类型" class="headerlink" title="正则表达式的表示类型"></a>正则表达式的表示类型</h3><p>raw string类型（原生字符串类型）,是不包含转义符<code>\</code>的字符串</p><p>re库采用raw string类型表示正则表达式，表示为：r’text’</p><p>例如：<code>r&#39;[1-9]\d{5}&#39;</code></p><p>​       <code>r&#39;\d{3}-\d{8}|\d{4}-\d{7}&#39;</code></p><h3 id="Re库主要功能函数"><a href="#Re库主要功能函数" class="headerlink" title="Re库主要功能函数"></a>Re库主要功能函数</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>re.search()</td><td>在一个字符串中搜索匹配正则表达式的第一个位置，返回match对象</td></tr><tr><td>re.match()</td><td>从一个字符串的开始位置起匹配正则表达式，返回match对象</td></tr><tr><td>re.findall()</td><td>搜索字符串，以列表类型返回全部能匹配的子串</td></tr><tr><td>re.split()</td><td>将一个字符串按照正则表达式匹配结果进行分割，返回列表类型</td></tr><tr><td>re.finditer()</td><td>搜索字符串，返回一个匹配结果的迭代类型，每个迭代元素是match对象</td></tr><tr><td>re.sub()</td><td>在一个字符串中替换所有匹配正则表达式的子串，返回替换后的字符串</td></tr></tbody></table><h4 id="re-search-pattern-string-flags-0"><a href="#re-search-pattern-string-flags-0" class="headerlink" title="re.search(pattern,string,flags=0)"></a>re.search(pattern,string,flags=0)</h4><blockquote><p>re.search(pattern,string,flags=0)</p></blockquote><ul><li><p>在一个字符串中搜索匹配正则表达式的第一个位置，返回match对象；</p><ul><li><p>pattern：正则表达式的字符串或原生字符串表示；</p></li><li><p>string：待匹配字符串；</p></li><li><p>flags：正则表达式使用时的控制标记；</p><table><thead><tr><th>常用标记</th><th>说明</th></tr></thead><tbody><tr><td>re.I|re.IGNORECASE</td><td>忽略正则表达式的大小写，[A-Z]能匹配小写字符</td></tr><tr><td>re.M|re.MUTILINE</td><td>正则表达式中的^操作符能够将给定字符串的每行当做匹配开始</td></tr><tr><td>re.S|re.DOTILL</td><td>正则表达式中的.操作符能够匹配所有字符，默认匹配除换行符外的所有字符</td></tr></tbody></table></li></ul></li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">match = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>,<span class="string">'BIT 100081'</span>)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    print(match.group(<span class="number">0</span>))  <span class="comment">#'100081'</span></span><br></pre></td></tr></table></figure><h4 id="re-match-pattern-string-flags-0"><a href="#re-match-pattern-string-flags-0" class="headerlink" title="re.match(pattern,string,flags=0)"></a>re.match(pattern,string,flags=0)</h4><blockquote><p>re.match(pattern,string,flags=0)</p></blockquote><ul><li>从一个字符串的开始位置起匹配正则表达式，返回match对象<ul><li>pattern：正则表达式的字符串或原生字符串表示；</li><li>string：待匹配字符串；</li><li>flags：正则表达式使用时的控制标记；</li></ul></li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">match = re.match(<span class="string">r'[1-9]\d&#123;5&#125;'</span>,<span class="string">'BIT 100081'</span>)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    print(match.group(<span class="number">0</span>))  <span class="comment">#NULL</span></span><br><span class="line">match = re.match(<span class="string">r'[1-9]\d&#123;5&#125;'</span>,<span class="string">'100081 BIT'</span>)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    print(match.group(<span class="number">0</span>))  <span class="comment">#'100081'</span></span><br></pre></td></tr></table></figure><h4 id="re-findall-pattern-string-flags-0"><a href="#re-findall-pattern-string-flags-0" class="headerlink" title="re.findall(pattern,string,flags=0)"></a>re.findall(pattern,string,flags=0)</h4><blockquote><p>re.findall(pattern,string,flags=0)</p></blockquote><ul><li>搜索字符串，以列表类型返回全部能匹配的子串<ul><li>pattern：正则表达式的字符串或原生字符串表示；</li><li>string：待匹配字符串；</li><li>flags：正则表达式使用时的控制标记；</li></ul></li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">ls = re.findall(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>)</span><br><span class="line">print(ls) <span class="comment">#['100081', '100084']</span></span><br></pre></td></tr></table></figure><h4 id="re-split-pattern-string-maxsplit-0-flags-0"><a href="#re-split-pattern-string-maxsplit-0-flags-0" class="headerlink" title="re.split(pattern,string,maxsplit=0,flags=0)"></a>re.split(pattern,string,maxsplit=0,flags=0)</h4><blockquote><p>re.split(pattern,string,flags=0)</p></blockquote><ul><li>将一个字符串按照正则表达式匹配结果进行分割，返回列表类型<ul><li>pattern：正则表达式的字符串或原生字符串表示；</li><li>string：待匹配字符串；</li><li>maxsplit：最大分割数，剩余部分作为最后一个元素输出；</li><li>flags：正则表达式使用时的控制标记；</li></ul></li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">ls = re.split(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>)</span><br><span class="line">print(ls) <span class="comment">#['BIT', ' TSU', '']</span></span><br><span class="line">ls2 = re.split(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>, maxsplit=<span class="number">1</span>)</span><br><span class="line">print(ls2) <span class="comment">#['BIT', ' TSU10084']</span></span><br></pre></td></tr></table></figure><h4 id="re-finditer-pattern-string-flags-0"><a href="#re-finditer-pattern-string-flags-0" class="headerlink" title="re.finditer(pattern,string,flags=0)"></a>re.finditer(pattern,string,flags=0)</h4><blockquote><p>re.finditer(pattern,string,flags=0)</p></blockquote><ul><li>搜索字符串，返回一个匹配结果的迭代类型，每个迭代元素都是match对象<ul><li>pattern：正则表达式的字符串或原生字符串表示；</li><li>string：待匹配字符串；</li><li>flags：正则表达式使用时的控制标记；</li></ul></li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> re.finditer(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>):</span><br><span class="line">    <span class="keyword">if</span> m:</span><br><span class="line">        print(m.group(<span class="number">0</span>)) <span class="comment">#100081 100084</span></span><br></pre></td></tr></table></figure><h4 id="re-sub-pattern-repl-string-count-0-flags-0"><a href="#re-sub-pattern-repl-string-count-0-flags-0" class="headerlink" title="re.sub(pattern,repl,string,count=0,flags=0)"></a>re.sub(pattern,repl,string,count=0,flags=0)</h4><blockquote><p>re.sub(pattern,repl,string,count=0,flags=0)</p></blockquote><ul><li>在一个字符串中替换所有匹配正则表达式的子串，并返回替换后的字符串<ul><li>pattern：正则表达式的字符串或原生字符串表示；</li><li>repl：替换匹配字符串的字符串；</li><li>string：待匹配字符串；</li><li>count：匹配的最大替换次数</li><li>flags：正则表达式使用时的控制标记；</li></ul></li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">rst = re.sub(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">':zipcode'</span>, <span class="string">'BIT 100081,TSU 100084'</span>)</span><br><span class="line">print(rst) <span class="comment"># 'BIT :zipcode TSU :zipcode'</span></span><br></pre></td></tr></table></figure><h3 id="Re库的另一种用法"><a href="#Re库的另一种用法" class="headerlink" title="Re库的另一种用法"></a>Re库的另一种用法</h3><p>编译后的对象拥有的方法和re库主要功能函数相同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#函数式用法：一次性操作</span></span><br><span class="line">rst = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT 100081'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#面向对象用法：编译后的多次操作</span></span><br><span class="line">pat = re.compile(<span class="string">r'[1-9]\d&#123;5&#125;'</span>)</span><br><span class="line">rst = pat.search(<span class="string">'BIT 100081'</span>)</span><br></pre></td></tr></table></figure><h4 id="re-compile-pattern-flags-0"><a href="#re-compile-pattern-flags-0" class="headerlink" title="re.compile(pattern,flags=0)"></a>re.compile(pattern,flags=0)</h4><ul><li>将正则表达式的字符串形式编译成正则表达式对象<ul><li>pattern：正则表达式的字符串或原生字符串表示；</li><li>flags：正则表达式使用时的控制标记；</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regex = re.compile(<span class="string">r'[1-9]\d&#123;5&#125;'</span>)</span><br></pre></td></tr></table></figure><h3 id="Re库的match对象"><a href="#Re库的match对象" class="headerlink" title="Re库的match对象"></a>Re库的match对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">match = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>,<span class="string">'BIT 100081'</span>)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    print(match.group(<span class="number">0</span>))  <span class="comment"># '100081'</span></span><br><span class="line">print(type(match)) <span class="comment"># &lt;class 're.Match'&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Match对象的属性"><a href="#Match对象的属性" class="headerlink" title="Match对象的属性"></a>Match对象的属性</h4><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.string</td><td>待匹配的文本</td></tr><tr><td>.re</td><td>匹配时使用的pattern对象（正则表达式）</td></tr><tr><td>.pos</td><td>正则表达式搜索文本的开始位置</td></tr><tr><td>.endpos</td><td>正则表达式搜索文本的结束位置</td></tr></tbody></table><h4 id="Match对象的方法"><a href="#Match对象的方法" class="headerlink" title="Match对象的方法"></a>Match对象的方法</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>.group(0)</td><td>获得匹配后的字符串</td></tr><tr><td>.start()</td><td>匹配字符串在原始字符串的开始位置</td></tr><tr><td>.end()</td><td>匹配字符串在原始字符串的结束位置</td></tr><tr><td>.span()</td><td>返回(.start(),.end())</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">m = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>)</span><br><span class="line">print(m.string) <span class="comment"># BIT100081 TSU100084</span></span><br><span class="line">print(m.re) <span class="comment"># re.compile('[1-9]\\d&#123;5&#125;')</span></span><br><span class="line">print(m.pos) <span class="comment"># 0</span></span><br><span class="line">print(m.endpos) <span class="comment"># 19</span></span><br><span class="line">print(m.group(<span class="number">0</span>)) <span class="comment"># '100081' 返回的是第一次匹配的结果,获取所有使用re.finditer()方法</span></span><br><span class="line">print(m.start()) <span class="comment"># 3</span></span><br><span class="line">print(m.end()) <span class="comment"># 9</span></span><br><span class="line">print(m.span()) <span class="comment"># (3, 9)</span></span><br></pre></td></tr></table></figure><h3 id="Re库的贪婪匹配和最小匹配"><a href="#Re库的贪婪匹配和最小匹配" class="headerlink" title="Re库的贪婪匹配和最小匹配"></a>Re库的贪婪匹配和最小匹配</h3><p>Re库默认采用贪婪匹配，即输出匹配最长的子串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">match = re.search(<span class="string">r'PY.*N'</span>, <span class="string">'PYANBNCNDN'</span>)</span><br><span class="line">print(match.group(<span class="number">0</span>)) <span class="comment"># PYANBNCNDN</span></span><br></pre></td></tr></table></figure><p>最小匹配方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">match = re.search(<span class="string">r'PY.*?N'</span>, <span class="string">'PYANBNCNDN'</span>)</span><br><span class="line">print(match.group(<span class="number">0</span>)) <span class="comment"># PYAN</span></span><br></pre></td></tr></table></figure><p>最小匹配操作符</p><table><thead><tr><th>操作符</th><th>说明</th></tr></thead><tbody><tr><td>*?</td><td>前一个字符0次或无限次扩展，最小匹配</td></tr><tr><td>+?</td><td>前一个字符1次或无限次扩展，最小匹配</td></tr><tr><td>??</td><td>前一个字符0次或1次扩展，最小匹配</td></tr><tr><td>{m,n}?</td><td>扩展前一个字符m至n次（含n），最小匹配</td></tr></tbody></table><h2 id="Re库实例之淘宝商品比价定向爬虫"><a href="#Re库实例之淘宝商品比价定向爬虫" class="headerlink" title="Re库实例之淘宝商品比价定向爬虫"></a>Re库实例之淘宝商品比价定向爬虫</h2><blockquote><p>功能描述：</p><ul><li>目标：获取淘宝搜索页面的信息，提取其中的商品名称和价格</li><li>理解：<ul><li>淘宝的搜索接口</li><li>翻页的处理</li></ul></li><li>技术路线：requests-re</li></ul></blockquote><blockquote><p>程序的结构设计：</p><ul><li>步骤1：提交商品搜索请求，循环获取页面</li><li>步骤2：对于每个页面，提取商品的名称和价格信息</li><li>步骤3：将信息输出到屏幕上</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="comment">#浏览器请求头中的User-Agent，代表当前请求的用户代理信息（下方有获取方式）</span></span><br><span class="line">    headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'</span>&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#浏览器请求头中的cookie，包含自己账号的登录信息（下方有获取方式）</span></span><br><span class="line">        coo = <span class="string">''</span></span><br><span class="line">        cookies = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> coo.split(<span class="string">';'</span>): <span class="comment">#浏览器伪装</span></span><br><span class="line">            name, value = line.strip().split(<span class="string">'='</span>, <span class="number">1</span>)</span><br><span class="line">            cookies[name] = value</span><br><span class="line">        r = requests.get(url, cookies = cookies, headers=headers, timeout = <span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#解析请求到的页面，提取出相关商品的价格和名称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parsePage</span><span class="params">(ilt, html)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        plt = re.findall(<span class="string">r'\"view_price\"\:\"[\d\.]*\"'</span>, html)</span><br><span class="line">        tlt = re.findall(<span class="string">r'\"raw_title\"\:\".*?\"'</span>, html)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plt)):</span><br><span class="line">            price = eval(plt[i].split(<span class="string">':'</span>)[<span class="number">1</span>])</span><br><span class="line">            title = eval(tlt[i].split(<span class="string">':'</span>)[<span class="number">1</span>])</span><br><span class="line">            ilt.append([price, title])</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printGoodsList</span><span class="params">(ilt)</span>:</span></span><br><span class="line">    tplt = <span class="string">"&#123;:4&#125;\t&#123;:8&#125;\t&#123;:16&#125;"</span></span><br><span class="line">    print(tplt.format(<span class="string">"序号"</span>, <span class="string">"价格"</span>, <span class="string">"商品名称"</span>))</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> ilt:</span><br><span class="line">        count = count + <span class="number">1</span></span><br><span class="line">        print(tplt.format(count, g[<span class="number">0</span>], g[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    goods = <span class="string">'书包'</span></span><br><span class="line">    depth = <span class="number">2</span> <span class="comment">#爬取深度，2表示爬取两页数据</span></span><br><span class="line">    start_url = <span class="string">'https://s.taobao.com/search?q='</span> + goods</span><br><span class="line">    infoList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(depth):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            url = start_url + <span class="string">'&amp;s='</span> + str(<span class="number">44</span>*i)</span><br><span class="line">            html = getHTMLText(url)</span><br><span class="line">            parsePage(infoList, html)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    printGoodsList(infoList)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>​    需要注意的是，淘宝网站本身有反爬虫机制，所以在使用<code>requests</code>库的<code>get()</code>方法爬取网页信息时，需要加入本地的cookie信息，否则淘宝返回的是一个错误页面，无法获取数据。</p><p>​    代码中的<code>coo</code>变量中需要自己添加浏览器中的<code>cookie</code>信息，具体做法是在浏览器中按F12，在出现的窗口中进入<code>network</code>（网络）内，搜索“书包”，然后找到请求的url（一般是第一个），点击请求在右侧<code>header</code>（消息头）中找到<code>Request Header</code>（请求头），在请求头中找到<code>User-Agent</code>和<code>cookie</code>字段，放到代码相应位置即可。</p><h2 id="Re库实例之股票数据定向爬虫"><a href="#Re库实例之股票数据定向爬虫" class="headerlink" title="Re库实例之股票数据定向爬虫"></a>Re库实例之股票数据定向爬虫</h2><blockquote><p>功能描述：</p><ul><li>目标：获取上交所和深交所所有股票的名称和交易信息</li><li>输出：保存到文件中</li><li>技术路线：requests-bs4-re</li></ul></blockquote><blockquote><p>候选数据网站的选择：</p><ul><li>新浪股票：<a href="https://finance.sina.com.cn/stock/" target="_blank" rel="noopener">https://finance.sina.com.cn/stock/</a></li><li>百度股票：<a href="https://gupiao.baidu.com/stock/" target="_blank" rel="noopener">https://gupiao.baidu.com/stock/</a></li><li>选取原则：股票信息静态存在于HTML页面中，非js代码生成，没有Robots协议限制。</li></ul></blockquote><blockquote><p>程序的结构设计</p><ul><li>步骤1：从东方财富网获取股票列表</li><li>步骤2：根据股票列表逐个到百度股票获取个股信息</li><li>步骤3：将结果存储到文件</li></ul></blockquote><h3 id="初步代码编写-error"><a href="#初步代码编写-error" class="headerlink" title="初步代码编写(error)"></a>初步代码编写(error)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getStockList</span><span class="params">(lst, stockURL)</span>:</span></span><br><span class="line">    html = getHTMLText(stockURL)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">'html.parser'</span>) </span><br><span class="line">    a = soup.find_all(<span class="string">'a'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            href = i.attrs[<span class="string">'href'</span>]</span><br><span class="line">            lst.append(re.findall(<span class="string">r"[s][hz]\d&#123;6&#125;"</span>, href)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getStockInfo</span><span class="params">(lst, stockURL, fpath)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> stock <span class="keyword">in</span> lst:</span><br><span class="line">        url = stockURL + stock + <span class="string">".html"</span></span><br><span class="line">        html = getHTMLText(url)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> html==<span class="string">""</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            infoDict = &#123;&#125;</span><br><span class="line">            soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br><span class="line">            stockInfo = soup.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'stock-bets'</span>&#125;)</span><br><span class="line"> </span><br><span class="line">            name = stockInfo.find_all(attrs=&#123;<span class="string">'class'</span>:<span class="string">'bets-name'</span>&#125;)[<span class="number">0</span>]</span><br><span class="line">            infoDict.update(&#123;<span class="string">'股票名称'</span>: name.text.split()[<span class="number">0</span>]&#125;)</span><br><span class="line">             </span><br><span class="line">            keyList = stockInfo.find_all(<span class="string">'dt'</span>)</span><br><span class="line">            valueList = stockInfo.find_all(<span class="string">'dd'</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(keyList)):</span><br><span class="line">                key = keyList[i].text</span><br><span class="line">                val = valueList[i].text</span><br><span class="line">                infoDict[key] = val</span><br><span class="line">             </span><br><span class="line">            <span class="keyword">with</span> open(fpath, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write( str(infoDict) + <span class="string">'\n'</span> )</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            traceback.print_exc()</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    stock_list_url = <span class="string">'https://quote.eastmoney.com/stocklist.html'</span></span><br><span class="line">    stock_info_url = <span class="string">'https://gupiao.baidu.com/stock/'</span></span><br><span class="line">    output_file = <span class="string">'D:/BaiduStockInfo.txt'</span></span><br><span class="line">    slist=[]</span><br><span class="line">    getStockList(slist, stock_list_url)</span><br><span class="line">    getStockInfo(slist, stock_info_url, output_file)</span><br><span class="line"> </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="代码优化-error"><a href="#代码优化-error" class="headerlink" title="代码优化(error)"></a>代码优化(error)</h3><p>速度提高：编码识别的优化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url, code=<span class="string">"utf-8"</span>)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = code</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getStockList</span><span class="params">(lst, stockURL)</span>:</span></span><br><span class="line">    html = getHTMLText(stockURL, <span class="string">"GB2312"</span>)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">'html.parser'</span>) </span><br><span class="line">    a = soup.find_all(<span class="string">'a'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            href = i.attrs[<span class="string">'href'</span>]</span><br><span class="line">            lst.append(re.findall(<span class="string">r"[s][hz]\d&#123;6&#125;"</span>, href)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getStockInfo</span><span class="params">(lst, stockURL, fpath)</span>:</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> stock <span class="keyword">in</span> lst:</span><br><span class="line">        url = stockURL + stock + <span class="string">".html"</span></span><br><span class="line">        html = getHTMLText(url)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> html==<span class="string">""</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            infoDict = &#123;&#125;</span><br><span class="line">            soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br><span class="line">            stockInfo = soup.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'stock-bets'</span>&#125;)</span><br><span class="line"> </span><br><span class="line">            name = stockInfo.find_all(attrs=&#123;<span class="string">'class'</span>:<span class="string">'bets-name'</span>&#125;)[<span class="number">0</span>]</span><br><span class="line">            infoDict.update(&#123;<span class="string">'股票名称'</span>: name.text.split()[<span class="number">0</span>]&#125;)</span><br><span class="line">             </span><br><span class="line">            keyList = stockInfo.find_all(<span class="string">'dt'</span>)</span><br><span class="line">            valueList = stockInfo.find_all(<span class="string">'dd'</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(keyList)):</span><br><span class="line">                key = keyList[i].text</span><br><span class="line">                val = valueList[i].text</span><br><span class="line">                infoDict[key] = val</span><br><span class="line">             </span><br><span class="line">            <span class="keyword">with</span> open(fpath, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write( str(infoDict) + <span class="string">'\n'</span> )</span><br><span class="line">                count = count + <span class="number">1</span></span><br><span class="line">                print(<span class="string">"\r当前进度: &#123;:.2f&#125;%"</span>.format(count*<span class="number">100</span>/len(lst)),end=<span class="string">""</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            count = count + <span class="number">1</span></span><br><span class="line">            print(<span class="string">"\r当前进度: &#123;:.2f&#125;%"</span>.format(count*<span class="number">100</span>/len(lst)),end=<span class="string">""</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    stock_list_url = <span class="string">'https://quote.eastmoney.com/stocklist.html'</span></span><br><span class="line">    stock_info_url = <span class="string">'https://gupiao.baidu.com/stock/'</span></span><br><span class="line">    output_file = <span class="string">'D:/BaiduStockInfo.txt'</span></span><br><span class="line">    slist=[]</span><br><span class="line">    getStockList(slist, stock_list_url)</span><br><span class="line">    getStockInfo(slist, stock_info_url, output_file)</span><br><span class="line"> </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="测试成功代码"><a href="#测试成功代码" class="headerlink" title="测试成功代码"></a>测试成功代码</h3><p>由于东方财富网链接访问时出现错误，所以更换了一个新的网站去获取股票列表，具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span><span class="string">""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getStockList</span><span class="params">(lst, stockListURL)</span>:</span></span><br><span class="line">    html = getHTMLText(stockListURL)</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br><span class="line">    a = soup.find_all(<span class="string">'a'</span>)</span><br><span class="line">    lst = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            href = i.attrs[<span class="string">'href'</span>]</span><br><span class="line">            lst.append(re.findall(<span class="string">r"[S][HZ]\d&#123;6&#125;"</span>, href)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    lst = [item.lower() <span class="keyword">for</span> item <span class="keyword">in</span> lst]  <span class="comment"># 将爬取信息转换小写</span></span><br><span class="line">    <span class="keyword">return</span> lst</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getStockInfo</span><span class="params">(lst, stockInfoURL, fpath)</span>:</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> stock <span class="keyword">in</span> lst:</span><br><span class="line">        url = stockInfoURL + stock + <span class="string">".html"</span></span><br><span class="line">        html = getHTMLText(url)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> html == <span class="string">""</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            infoDict = &#123;&#125;</span><br><span class="line">            soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br><span class="line">            stockInfo = soup.find(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">'stock-bets'</span>&#125;)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> isinstance(stockInfo, bs4.element.Tag):  <span class="comment"># 判断类型</span></span><br><span class="line">                name = stockInfo.find_all(attrs=&#123;<span class="string">'class'</span>: <span class="string">'bets-name'</span>&#125;)[<span class="number">0</span>]</span><br><span class="line">                infoDict.update(&#123;<span class="string">'股票名称'</span>: name.text.split(<span class="string">'\n'</span>)[<span class="number">1</span>].replace(<span class="string">' '</span>,<span class="string">''</span>)&#125;)</span><br><span class="line">                keylist = stockInfo.find_all(<span class="string">'dt'</span>)</span><br><span class="line">                valuelist = stockInfo.find_all(<span class="string">'dd'</span>)</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(len(keylist)):</span><br><span class="line">                    key = keylist[i].text</span><br><span class="line">                    val = valuelist[i].text</span><br><span class="line">                    infoDict[key] = val</span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> open(fpath, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(str(infoDict) + <span class="string">'\n'</span>)</span><br><span class="line">                count = count + <span class="number">1</span></span><br><span class="line">                print(<span class="string">"\r当前速度：&#123;:.2f&#125;%"</span>.format(count*<span class="number">100</span>/len(lst)), end=<span class="string">""</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            count = count + <span class="number">1</span></span><br><span class="line">            print(<span class="string">"\r当前速度：&#123;:.2f&#125;%"</span>.format(count*<span class="number">100</span>/len(lst)), end=<span class="string">""</span>)</span><br><span class="line">            traceback.print_exc()</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    fpath = <span class="string">'D://gupiao.txt'</span></span><br><span class="line">    stock_list_url = <span class="string">'https://hq.gucheng.com/gpdmylb.html'</span></span><br><span class="line">    stock_info_url = <span class="string">'https://gupiao.baidu.com/stock/'</span></span><br><span class="line">    slist = []</span><br><span class="line">    list = getStockList(slist, stock_list_url)</span><br><span class="line">    getStockInfo(list, stock_info_url, fpath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="6-爬虫框架-Scrapy"><a href="#6-爬虫框架-Scrapy" class="headerlink" title="6.爬虫框架-Scrapy"></a>6.爬虫框架-Scrapy</h1><p>爬虫框架：是实现爬虫功能的一个软件结构和功能组件集合。</p><p>爬虫框架是一个半成品，能够帮助用户实现专业网络爬虫。</p><p><img src="https://zsy0216.gitee.io/images/hexo/20190604/1558688318694.png" alt="1558688318694"></p><h2 id="安装Scrapy"><a href="#安装Scrapy" class="headerlink" title="安装Scrapy"></a>安装Scrapy</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy</span><br><span class="line"><span class="meta">#</span>验证</span><br><span class="line">scrapy -h</span><br></pre></td></tr></table></figure><h3 id="遇到错误"><a href="#遇到错误" class="headerlink" title="遇到错误"></a>遇到错误</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">building &apos;twisted.test.raiser&apos; extension</span><br><span class="line">   error: Microsoft Visual C++ 14.0 is required. Get it with &quot;Microsoft Visual C++ Build Tools&quot;: https://visualstudio.microsoft.com/downloads/</span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li><p>查看python版本及位数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\ASUS&gt;python</span><br><span class="line">Python 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)] on win32</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br></pre></td></tr></table></figure><p>可知，python版本为3.7.2, 64位</p></li><li><p>下载Twisted</p><p>到 <a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted" target="_blank" rel="noopener">http://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted</a> 下载twisted对应版本的whl文件;<br>根据版本应下载Twisted‑17.9.0‑cp37‑cp37m‑win_amd64.whl</p><p>注意：cp后面是python版本，amd64代表64位，32位的下载32位对应的文件。</p></li><li><p>安装Twisted</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install D:\download\Twisted‑19.2.0‑cp37‑cp37m‑win_amd64.whl</span><br></pre></td></tr></table></figure></li><li><p>安装Scrapy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install scrapy</span><br></pre></td></tr></table></figure></li></ol><h2 id="Scrapy爬虫框架解析"><a href="#Scrapy爬虫框架解析" class="headerlink" title="Scrapy爬虫框架解析"></a>Scrapy爬虫框架解析</h2><ol><li>Engine：不需要用户修改<ul><li>控制所有模块之间的数据流</li><li>根据条件触发事件</li></ul></li><li>Downloader：不需要用户修改<ul><li>根据请求下载网页</li></ul></li><li>Scheduler：不需要用户修改<ul><li>对所有爬取请求进行调度管理</li></ul></li><li>Downloader Middleware：用户可编写配置代码<ul><li>目的：实施Engine、Scheduler和Downloader之间进行用户可配置的控制</li><li>功能：修改、丢弃、新增请求或响应</li></ul></li><li>Spider：需要用户编写配置代码<ul><li>解析Downloader返回的响应（Response）</li><li>产生爬取项（scraped item）</li><li>产生额外的爬取请求（Request）</li></ul></li><li>Item Pipelines：需要用户编写配置代码<ul><li>以流水线方式处理Spider产生的爬取项</li><li>由一组操作顺序组成，类似流水线，每个操作是一个Item Pipeline类型</li><li>可能操作包括：清理、检验、和查重爬取项中的HTML数据、将数据存储到数据库</li></ul></li><li>Spider Middleware：用户可以编写配置代码<ul><li>目的：对请求和爬取项的再处理</li><li>功能：修改、丢弃、新增请求或爬取项</li></ul></li></ol><h2 id="requests-vs-Scrapy"><a href="#requests-vs-Scrapy" class="headerlink" title="requests vs. Scrapy"></a>requests vs. Scrapy</h2><ul><li><p>相同点</p><ul><li>两者都可以进行页面请求和爬取，Python爬虫的两个重要技术路线</li><li>两者可用性都好，文档丰富，入门简单</li><li>两者都没有处理js、提交表单、应对验证码等功能（可扩展）</li></ul></li><li><p>不同点</p><table><thead><tr><th>requests</th><th>Scrapy</th></tr></thead><tbody><tr><td>页面级爬虫</td><td>网站级爬虫</td></tr><tr><td>功能库</td><td>框架</td></tr><tr><td>并发性考虑不足，性能较差</td><td>并发性好，性能较高</td></tr><tr><td>重点在于页面下载</td><td>重点在于爬虫结构</td></tr><tr><td>定制灵活</td><td>一般定制灵活，深度定制困难</td></tr><tr><td>上手十分简单</td><td>入门稍难</td></tr></tbody></table><h2 id="Scrapy爬虫的常用命令"><a href="#Scrapy爬虫的常用命令" class="headerlink" title="Scrapy爬虫的常用命令"></a>Scrapy爬虫的常用命令</h2></li></ul><p>Scrapy命令行</p><p>​    Scrapy是为持续运行设计的专业爬虫框架，提供操作的Scrapy命令行</p><table><thead><tr><th>命令</th><th>说明</th><th>格式</th></tr></thead><tbody><tr><td>startproject</td><td>创建一个新工程</td><td>scrapy startproject <name>[dir]</name></td></tr><tr><td>genspider</td><td>创建一个爬虫</td><td>scrapy genspider [options] <name> <domain></domain></name></td></tr><tr><td>settings</td><td>获得爬虫配置信息</td><td>scrapy setting [options]</td></tr><tr><td>crawl</td><td>运行一个爬虫</td><td>scrapy crawl <spider></spider></td></tr><tr><td>list</td><td>列出工程中所有爬虫</td><td>scrapy list</td></tr><tr><td>shell</td><td>启动URL调试命令行</td><td>scrapy shell [url]</td></tr></tbody></table><h2 id="Scrapy框架的基本使用"><a href="#Scrapy框架的基本使用" class="headerlink" title="Scrapy框架的基本使用"></a>Scrapy框架的基本使用</h2><h3 id="步骤1：建立一个Scrapy爬虫工程"><a href="#步骤1：建立一个Scrapy爬虫工程" class="headerlink" title="步骤1：建立一个Scrapy爬虫工程"></a>步骤1：建立一个Scrapy爬虫工程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>打开命令提示符-win+r 输入cmd</span><br><span class="line"><span class="meta">#</span>进入存放工程的目录</span><br><span class="line">D:\&gt;cd demo</span><br><span class="line">D:\demo&gt;</span><br><span class="line"><span class="meta">#</span>建立一个工程，工程名python123demo</span><br><span class="line">D:\demo&gt;scrapy startproject python123demo</span><br><span class="line">New Scrapy project 'python123demo', using template directory 'd:\program files\python\lib\site-packages\scrapy\templates\project', created in:</span><br><span class="line">    D:\demo\python123demo</span><br><span class="line"></span><br><span class="line">You can start your first spider with:</span><br><span class="line">    cd python123demo</span><br><span class="line">    scrapy genspider example example.com</span><br><span class="line">D:\demo&gt;</span><br></pre></td></tr></table></figure><p>生成的目录工程介绍：</p><blockquote><p>python123demo/          —————-&gt; 外层目录</p><p>​    scrapy.cfg                        ———&gt; 部署Scrapy爬虫的配置文件   </p><p>​    python123demo/          ———&gt; Scrapy框架的用户自定义Python代码</p><p>​        <code>__init__.py</code>           —-&gt; 初始化脚本</p><p>​        items.py                —-&gt; Items代码模板（继承类）</p><p>​        middlewares.py       —-&gt; Middlewares代码模板（继承类）</p><p>​        pipelines.py              —-&gt; Pipelines代码模板（继承类）</p><p>​        settings.py            —-&gt; Scrapy爬虫的配置文件</p><p>​        spiders/                —-&gt; Spiders代码模板目录（继承类）</p></blockquote><blockquote><p>spiders/            —————-&gt; Spiders代码模板目录（继承类）</p><p>​    <code>__init__.py</code>        ——–&gt; 初始文件，无需修改</p><p>​    <code>__pycache__/</code>          ——–&gt; 缓存目录，无需修改    </p></blockquote><h3 id="步骤2：在工程中产生一个Scrapy爬虫"><a href="#步骤2：在工程中产生一个Scrapy爬虫" class="headerlink" title="步骤2：在工程中产生一个Scrapy爬虫"></a>步骤2：在工程中产生一个Scrapy爬虫</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>切换到工程目录</span><br><span class="line">D:\demo&gt;cd python123demo</span><br><span class="line"><span class="meta">#</span>产生一个scrapy爬虫</span><br><span class="line">D:\demo\python123demo&gt;scrapy genspider demo python123.io</span><br><span class="line">Created spider 'demo' using template 'basic' in module:</span><br><span class="line">  python123demo.spiders.demo</span><br><span class="line"></span><br><span class="line">D:\demo\python123demo&gt;</span><br></pre></td></tr></table></figure><h3 id="步骤3：配置产生的spider爬虫"><a href="#步骤3：配置产生的spider爬虫" class="headerlink" title="步骤3：配置产生的spider爬虫"></a>步骤3：配置产生的spider爬虫</h3><p>修改D:\demo\python123demo\python123demo\spiders\demo.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'demo'</span></span><br><span class="line"><span class="comment">#    allowed_domains = ['python123.io']</span></span><br><span class="line">    start_urls = [<span class="string">'http://python123.io/ws/demo.html'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        fname = response.url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">with</span> open(fname, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.body)</span><br><span class="line">        self.log(<span class="string">'Save file %s.'</span> % name)</span><br></pre></td></tr></table></figure><p>完整版代码编写方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"demo"</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></span><br><span class="line">        urls = [</span><br><span class="line">        <span class="string">'http://python123.io/ws/demo.html'</span></span><br><span class="line">        ]</span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Requests(url=url, callback=self.parse)</span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        fname = response.url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">with</span> open(fname, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.body)</span><br><span class="line">        self.log(<span class="string">'Saved file %s.'</span> % fname)</span><br></pre></td></tr></table></figure><h3 id="步骤4：运行爬虫，获取网页"><a href="#步骤4：运行爬虫，获取网页" class="headerlink" title="步骤4：运行爬虫，获取网页"></a>步骤4：运行爬虫，获取网页</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>输入运行命令 scrapy crawl</span><br><span class="line">D:\demo\python123demo&gt;scrapy crawl demo</span><br></pre></td></tr></table></figure><h4 id="可能出现的错误"><a href="#可能出现的错误" class="headerlink" title="可能出现的错误"></a>可能出现的错误</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ModuleNotFoundError: No module named &apos;win32api&apos;</span><br></pre></td></tr></table></figure><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ol><li><p>到 <a href="https://pypi.org/project/pypiwin32/#files" target="_blank" rel="noopener">https://pypi.org/project/pypiwin32/#files</a> 下载py3版本的<a href="https://files.pythonhosted.org/packages/d0/1b/2f292bbd742e369a100c91faa0483172cd91a1a422a6692055ac920946c5/pypiwin32-223-py3-none-any.whl" target="_blank" rel="noopener">pypiwin32-223-py3-none-any.whl</a>文件；</p></li><li><p>安装pypiwin32-223-py3-none-any.whl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install D:\download\pypiwin32-223-py3-none-any.whl</span><br></pre></td></tr></table></figure></li><li><p>再次在工程目录下运行爬虫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl demo</span><br></pre></td></tr></table></figure></li></ol><h2 id="yield关键字的使用"><a href="#yield关键字的使用" class="headerlink" title="yield关键字的使用"></a>yield关键字的使用</h2><ul><li>yield&lt;———————–&gt;生成器<ul><li>生成器是一个不断产生值的函数；</li><li>包含yield语句的函数是一个生成器；</li><li>生成器每次产生一个值（yield语句），函数会被冻结，被唤醒后再产生一个值；</li></ul></li></ul><p>实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">        <span class="keyword">yield</span> i**<span class="number">2</span></span><br><span class="line"><span class="comment">#产生小于n的所有2的平方值</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> gen(<span class="number">5</span>):</span><br><span class="line">    print(i, <span class="string">" "</span>, end=<span class="string">""</span>)</span><br><span class="line"><span class="comment">#0 1 4 9 16</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#普通写法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">square</span><span class="params">(n)</span>:</span></span><br><span class="line">    ls = [i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(n)]</span><br><span class="line">    <span class="keyword">return</span> ls</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> square(<span class="number">5</span>):</span><br><span class="line">    print(i, <span class="string">" "</span>, end=<span class="string">""</span>)</span><br><span class="line"><span class="comment">#0 1 4 9 16</span></span><br></pre></td></tr></table></figure><h3 id="为何要有生成器？"><a href="#为何要有生成器？" class="headerlink" title="为何要有生成器？"></a>为何要有生成器？</h3><ul><li>生成器比一次列出所有内容的优势<ul><li>更节省存储空间</li><li>响应更迅速</li><li>使用更灵活</li></ul></li></ul><h3 id="Scrapy爬虫的使用步骤"><a href="#Scrapy爬虫的使用步骤" class="headerlink" title="Scrapy爬虫的使用步骤"></a>Scrapy爬虫的使用步骤</h3><ul><li>步骤1：创建一个工程和Spider模板；</li><li>步骤2：编写Spider；</li><li>步骤3：编写Item Pipeline</li><li>步骤4：优化配置策略</li></ul><h2 id="Scrapy爬虫的数据类型"><a href="#Scrapy爬虫的数据类型" class="headerlink" title="Scrapy爬虫的数据类型"></a>Scrapy爬虫的数据类型</h2><h3 id="Request类"><a href="#Request类" class="headerlink" title="Request类"></a>Request类</h3><blockquote><p>class scrapy.http.Request()</p></blockquote><ul><li>Request对象表示一个HTTP请求</li><li>由Spider生成，由Downloader执行</li></ul><table><thead><tr><th>属性或方法</th><th>说明</th></tr></thead><tbody><tr><td>.url</td><td>Request对应的请求URL地址</td></tr><tr><td>.method</td><td>对应的请求方法，’GET‘ ’POST‘等</td></tr><tr><td>.headers</td><td>字典类型风格的请求头</td></tr><tr><td>.body</td><td>请求内容主体，字符串类型</td></tr><tr><td>.meta</td><td>用户添加的扩展信息，在Scrapy内部模块间传递信息使用</td></tr><tr><td>.copy()</td><td>复制该请求</td></tr></tbody></table><h3 id="Response类"><a href="#Response类" class="headerlink" title="Response类"></a>Response类</h3><blockquote><p>class scrapy.http.Response()</p></blockquote><ul><li>Response对象表示一个HTTP响应</li><li>由Downloader生成，由Spider处理</li></ul><table><thead><tr><th>属性或方法</th><th>说明</th></tr></thead><tbody><tr><td>.url</td><td>Response对应的URL地址</td></tr><tr><td>.status</td><td>HTTP状态码，默认是200</td></tr><tr><td>.headers</td><td>Response对应的头部信息</td></tr><tr><td>.body</td><td>Response对应的内容信息，字符串类型</td></tr><tr><td>.flags</td><td>一组标记</td></tr><tr><td>.request</td><td>产生Response类型对应的Request对象</td></tr><tr><td>.copy()</td><td>复制该响应</td></tr></tbody></table><h3 id="Item类"><a href="#Item类" class="headerlink" title="Item类"></a>Item类</h3><p>class scrapy.item.Item()</p><ul><li>Item对象表示一个从HTML页面中提取的信息内容</li><li>由Spider生成，由Item Pipeline处理</li><li>Item类似字典类型，可以按照字典类型操作</li></ul><h2 id="CSS-Selector的基本使用"><a href="#CSS-Selector的基本使用" class="headerlink" title="CSS Selector的基本使用"></a>CSS Selector的基本使用</h2><blockquote><html>.css('a::attr(href)').extract()</html></blockquote><p>CSS Selector由W3C组织维护并规范。</p><h2 id="股票数据Scrapy爬虫实例"><a href="#股票数据Scrapy爬虫实例" class="headerlink" title="股票数据Scrapy爬虫实例"></a>股票数据Scrapy爬虫实例</h2><blockquote><p>功能描述：</p><ul><li>技术路线：scrapy</li><li>目标：获取上交所和深交所所有股票的名称和交易信息</li><li>输出：保存到文件中</li></ul></blockquote><h3 id="实例编写"><a href="#实例编写" class="headerlink" title="实例编写"></a>实例编写</h3><ul><li>步骤1：首先进入命令提示符建立工程和Spider模板</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject BaiduStocks</span><br><span class="line">cd BaiduStocks</span><br><span class="line">scrapy genspider stocks baidu.com</span><br><span class="line"><span class="meta">#</span>进一步修改spiders/stocks.py文件</span><br></pre></td></tr></table></figure><ul><li>步骤2：编写Spider<ul><li>配置stock.py文件</li><li>修改对返回页面的处理</li><li>修改对新增URL爬取请求的处理</li></ul></li></ul><p>打开spider.stocks.py文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StocksSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"stocks"</span></span><br><span class="line">    start_urls = [<span class="string">'https://quote.eastmoney.com/stocklist.html'</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> href <span class="keyword">in</span> response.css(<span class="string">'a::attr(href)'</span>).extract():</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                stock = re.findall(<span class="string">r"[s][hz]\d&#123;6&#125;"</span>, href)[<span class="number">0</span>]</span><br><span class="line">                url = <span class="string">'https://gupiao.baidu.com/stock/'</span> + stock + <span class="string">'.html'</span></span><br><span class="line">                <span class="keyword">yield</span> scrapy.Request(url, callback=self.parse_stock)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_stock</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        infoDict = &#123;&#125;</span><br><span class="line">        stockInfo = response.css(<span class="string">'.stock-bets'</span>)</span><br><span class="line">        name = stockInfo.css(<span class="string">'.bets-name'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        keyList = stockInfo.css(<span class="string">'dt'</span>).extract()</span><br><span class="line">        valueList = stockInfo.css(<span class="string">'dd'</span>).extract()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(keyList)):</span><br><span class="line">            key = re.findall(<span class="string">r'&gt;.*&lt;/dt&gt;'</span>, keyList[i])[<span class="number">0</span>][<span class="number">1</span>:<span class="number">-5</span>]</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                val = re.findall(<span class="string">r'\d+\.?.*&lt;/dd&gt;'</span>, valueList[i])[<span class="number">0</span>][<span class="number">0</span>:<span class="number">-5</span>]</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                val = <span class="string">'--'</span></span><br><span class="line">            infoDict[key]=val</span><br><span class="line">    </span><br><span class="line">        infoDict.update(</span><br><span class="line">            &#123;<span class="string">'股票名称'</span>: re.findall(<span class="string">'\s.*\('</span>,name)[<span class="number">0</span>].split()[<span class="number">0</span>] + \</span><br><span class="line">                re.findall(<span class="string">'\&gt;.*\&lt;'</span>, name)[<span class="number">0</span>][<span class="number">1</span>:<span class="number">-1</span>]&#125;)</span><br><span class="line">        <span class="keyword">yield</span> infoDict</span><br></pre></td></tr></table></figure><ul><li>步骤3：编写Pipelines<ul><li>配置pipelines.py文件</li><li>定义对爬取项（Scrapy Item）的处理类</li><li>配置ITEM_PIPELINES选项</li></ul></li></ul><p>pipelines.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaidustocksPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaidustocksInfoPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open_spider</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        self.f = open(<span class="string">'BaiduStockInfo.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        self.f.close()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            line = str(dict(item)) + <span class="string">'\n'</span></span><br><span class="line">            self.f.write(line)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><p>setting.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See https://scrapy.readthedocs.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line"><span class="string">'BaiduStocks.pipelines.BaidustocksInfoPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置并发连接选项"><a href="#配置并发连接选项" class="headerlink" title="配置并发连接选项"></a>配置并发连接选项</h3><p>settings.py</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>CONCURRENT_REQUESTS</td><td>Downloader最大并发请求下载数量，默认为32</td></tr><tr><td>CONCURRENT_ITEMS</td><td>Item Pipeline最大并发ITEM处理数量，默认为100</td></tr><tr><td>CONCURRENT_REQUESTS_PRE_DOMAIN</td><td>每个目标域名最大的并发请求数量，默认为8</td></tr><tr><td>CONCURRENT_REQUESTS_PRE_IP</td><td>每个目标IP最大的并发请求数量，默认为0，非0有效</td></tr></tbody></table><p>来源：中国大学MOOC-北京理工大学-嵩天-Python网络爬虫与信息提取</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5-27</title>
      <link href="/2019/06/02/5-27/"/>
      <url>/2019/06/02/5-27/</url>
      
        <content type="html"><![CDATA[<h3 id="5-27"><a href="#5-27" class="headerlink" title="5.27"></a>5.27</h3><hr><p>​    nice，新的一周。</p><p>​    本周周二的实训中期检查移到下周了，这周好好写吧。</p><p>​    下周周二除了中期检查之外还有上午的科二考试。</p><p>​    为了下周能科二考试，周四还要去再练一次车去把课时刷完。</p><p>​    下周周五是端午节，放假的同时也是高考的日子，他们真可怜，少了一次假期。</p><p>​    下下周周末6月15号，是六级考试的日子，现在依然什么都没有看，前段时间坚持背的单词也很久没看了。</p><p>​    六级考完下一周也就是下下下周，是期末考试的日子。今天测试了一下，os好像什么也不会。</p><p>​    还能做什么呢？现在依然是什么也不想干。为什么人不能一直闲着什么不干呢？</p><p>​    孙燕姿听了好几周了，还是喜欢。</p><h3 id="5-28"><a href="#5-28" class="headerlink" title="5.28"></a>5.28</h3><hr><p>​    什么事一旦定下一定的章程来，按部就班的再去做时，就慢慢形成一种仪式感。</p><p>​    每天写点东西也是我灵光一闪，初心本是记录一下自己的心境，这是从蔡康永的情商课中得来的灵感。再有就是为了锻炼一下自己的文笔，平时写的东西太多拿不上台面来的了。还有就是本身每天都有大量的间隙时间悄悄溜走，总是抓也抓不住，还不如静下心来写一些东西来的舒服。</p><p>​    从开始这个到现在已经六周了，当时也没想到能写这么久吧。除去第一周的全部发布到微博上之外，之后的几周写的东西只有少部分抽出发了出去，其余的都未曾发布。前两天在简书上发布以作记录，由于上面无人观赏只做记录，在此不算发布。偷偷留一下东西给自己，就像我偶尔会翻翻曾经的东西，以前翻过空间，一翻都是以小时记，现在也会翻翻微博，从不发说说开始，微博数已经有了建设性的增长，翻阅起来也更有缠绵之意。</p><p>​    我本身是个怀旧的人，从小就是这样，对于发布的东西，我也一直把它当做是我的一部分，想到时会翻过去，看到时又怀想当初。  距离感是会产生美的，无论是空间上的距离还是时间上的距离，都应该有一些的；无论是人与人还是人与物，都应该有一些的。</p><h3 id="5-29"><a href="#5-29" class="headerlink" title="5.29"></a>5.29</h3><hr><p>​    突然发现已经放假了。</p><p>​    昨天晚上又重新开始翻阅我的百年孤独，作者大量的文字白描依然让我自愧不如，其中大量想象的天马行空更是让我叹为观止。想象力是创造的源泉，独立的思想是创造的前提，一个人的思想若是被时代牵引，那么这个人也必定成为这个时代中随波逐流的一个庸碌之人。</p><h3 id="5-31"><a href="#5-31" class="headerlink" title="5.31"></a>5.31</h3><hr><p>​    好吧，昨天确实忘了。比较忙。</p><p>​    无论何时，都不应该暴露出自己的所有，一定要让自己对外界有所保留。只有这样，你在别人眼中才有无限的吸引力。对于大多数人，其实展现出自己的一部分就已经足够与这个世界交流了，我认为这个世界的其他人一定有意无意的有所保留。只有呆子和心智不成熟的人才会全盘托出。</p><p>​    保留能够让自己无论做什么事都更有底气，不到最后的一刻不暴露出自己的所有，应该成为一种习惯。像那些网文作者，不都会偷偷留几稿以备不时之需么？过早的暴露自己或许会让别人惊叹一时，但随着时间推移，你所表现的能力就会让别人在心底的评价有所降低了。</p><h3 id="6-1"><a href="#6-1" class="headerlink" title="6.1"></a>6.1</h3><hr><p>​    六一快乐呀。</p><p>​    视频剪辑真的繁琐啊，从昨夜到今晨，9.46，终于弄好了。从下载软件到下载视频然后再去学如何去剪辑，学习新东西的过程很充实，就像要剪辑的那部电影里面说的那样，快乐是在过程中产生的。学习是快乐的，学习不同的东西总能充实自己并获得快乐。</p><p>​    现在正在导出视频呢，导出完就发到b站去。趁着这个时间正好来写点东西。</p><p>​    六月了，2019年了，时间飞快啊。六级马上要考试了，还有半个月。期末考试也快来了，还有半个月。英语从今天开始要开始继续学习了，无论这次六级是否通过，对于英语的学习都不该再停止了。不知道什么时候才能掌握这门语言啊，看英文，听英文，说英文，对于英语也越来越爱了，我一定要学会它。</p><p>​    导出视频完成了，上传视频却又要等待，上传完还要等待审核。就在等待的时候突然在微博上看到高考最后一课的字眼，让我也想到当时高三的班主任讲的东西了。他当时给我们讲的是平常心，我到现在依然记忆犹新。平常心就是保持平常的心态，遇到什么事都保持应有的心态去面对，不过度的夸大和缩小其本身应有的对本身的作用。我当时初听时觉得不过尔尔，但听到后来便觉得十分受益了，不然也不会记到现在不是？</p><h3 id="6-2"><a href="#6-2" class="headerlink" title="6.2"></a>6.2</h3><hr><p>​    发现灵感常从微博来啊，其实挺危险的，微博现在其实已经不是一个适合大多数人的东西了，令人想笑的是软件往往希望有更多的人使用，但人数超过了限度时，却又无法管理。这也就是很多东西火了之后又没落的原因了吧。</p><p>​    突然想到胡适说过的一句话，“怕什么真理无穷，进一寸有一寸的欢喜”。然后又在微博搜自己曾经是否发过时，又发现了当时一同发的另外四句，“不如意事常八九，可与言者无二三”；“人是生而自由的，但无往不在枷锁之中，自以为是其他一切主人的人，反而比其他一切更是奴隶”；“所谓的完美就是可以有不完美”；“种一棵树的最好的时间是十年前，其次是现在”。</p><p>​    孤独，自由，完美，当下。都是应当做一个人应当关注的东西，因为人的一生中都伴随着这些东西或者是追求它们。孤独应该是一个人必须要有的，孤独其实应该是一个人最宝贵的东西，但现在的人都趋之若鹜，孤独有什么可怕的呢？现在的世界难道还不够喧嚣吗？或许每个人的理解都不同吧，珍惜属于自己时光的那一片平静。</p><p>​    说到自由，我前段时间在微博上又刷到一次奇葩说上陈铭辩论“键盘侠是不是侠”的那一段视频，听完之后仍然记得当时第一次听到就震撼不已的那句，“自由，多少罪恶假汝之名”，当时我是第一次听过这句话的，当时自己还去查了一下，一直在脑海里记忆尤深。自由在近来的时间里已经被说的太多了，让人们好像都觉得自己真的拥有了自由一样，好像我们真的已经到达了一个自由平等的时期，无论何时都以此为借口来行苟且之事。昨天看爱在黎明破晓前里面对话也谈到一个事情，就是说那些女权主义者是不是也是男人们主动推崇的呢，好让女人们解放然后去和男人们交往，然后go to sleep呢？</p><p>​    所谓的完美就是可以有不完美，我在上面刚敲下这几个字的时候就已经想好什么时候用了……。在一个平静的午后，坐在客厅沙发上，微躺着靠着沙发或者那个人，然后眼神迷离的看着她说，”你就是我此生遇到的最完美的人了“，这是她必定嗤之以鼻，”那你说完美到底是什么呢“？然后这句话就要排上用场了，”所谓的完美就是可以有不完美“……hhhhh。</p><p>​    当下的时间总是让人不知不觉的就舍弃掉了，如果十年后，上帝让你看到现在的时间，再给你一次选择，你会不会重新再去掌握当下的时间呢？还是选择过后又重新庸庸碌碌的度过呢？人对拥有的永远不会珍惜，这话说得的实在在理，人若是没有危机感，迟早是要一无所有，是要走向毁灭的。无论什么东西，只要当下让人心中确认拥有，必定会对其有所看轻。当你心中确定拥有一件东西的时候，那就是你将要失去的时候。</p><p>​    本来写之前是没什么想法的，不知道为什么写了这么久。可能真的是无所事事吧。算了，就这样吧。</p>]]></content>
      
      
      <categories>
          
          <category> Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5-20</title>
      <link href="/2019/06/01/5-20/"/>
      <url>/2019/06/01/5-20/</url>
      
        <content type="html"><![CDATA[<blockquote><p>520的周一，像每一个平平凡凡的周一一般，独自漫步于浩瀚星空下的小径。</p></blockquote><h3 id="5-20"><a href="#5-20" class="headerlink" title="5.20"></a>5.20</h3><hr><p>​    人的堕落是不是天生的呢，说实在的很羡慕那些十分自律有明确的目标且一直为之努力奋斗的那种人，而我永远是三分钟热度的贪图享乐。我一直觉得有句话说的很好，学的时候就好好学，玩的时候就好好玩。我总是该学习的时候不知道努力，该玩的时候又不能够尽兴。说实在的我很惭愧，不仅对不起自己，更加让我自责的是对不起那些不该辜负的人，我们都知道现在的我不该是这样的，未来的我也不应该是像现在的自己成为的那样的。无论怎样安慰自己，现在的自己仍然不能够让自己真心的喜欢，也不敢去奢望去取得别人的欣赏。</p><blockquote><p>现在不要动，忙着做梦没有空</p><p>现在开始动，每个结果大不同</p><p>现在半空中，飘着乐观的微风</p><p>活的自由自在，漫游无限漫游</p><p>种下梦想会有收获时候</p></blockquote><h3 id="5-21"><a href="#5-21" class="headerlink" title="5.21"></a>5.21</h3><hr><p>​    没有动力的源泉是缺少目标，生活中还是要给自己设立一些眼下通过一定时间努力的小目标，然后依次去执行，这样才能最充实的利用时间，而漫无目的的去把握时间的话，总会被这个那个无谓的琐事干扰，正因为没有明确的目标，在做事情时才缺少方向感，没有方向感时的人是最迷茫的。</p><h3 id="5-22"><a href="#5-22" class="headerlink" title="5.22"></a>5.22</h3><hr><p>​    加油哦，未来会很好的。</p><p>​    </p><p>​    9点半了，看着上面那句大早上一来就写下的话觉得想笑。这会不知道干嘛了，感觉还是有很多事情要做，但是不知道要怎么去做了。当面对杂乱无章的很多事情时总是这么的迷茫，其实只要去开始就行了，开始？对我来说还是难啊。不知道从什么时候开始就这么畏惧开始了，对于开始的畏惧感好像与生俱来一般，也这样度过了眼下的20年光阴。对于许多事情都不敢于去尝试，其实事后想想也觉得没什么，可能我就是个事后诸葛亮吧。在不到面对的时候总是觉得自己无所不能，当事情走到眼前的时候就又流露出畏惧的眼光。</p><p>​    路漫漫其修远兮，吾将上下而求索。怀求索万物之心，探苍穹隐蔽之物。</p><h3 id="5-23"><a href="#5-23" class="headerlink" title="5.23"></a>5.23</h3><hr><p>​    当真正每天关注自己到底有什么值得写下来的时候，才发现生活真的十分无趣，可能是我本人自处时确实无趣，或许也是我少于发现生活中乐趣的眼睛。</p><p>​    或许自己还是不够关注自己吧。</p><h3 id="5-24"><a href="#5-24" class="headerlink" title="5.24"></a>5.24</h3><hr><p>​    这日子过得还怪快哩。</p><p>​    5月即将结束了，除了准备科二之外，六级备考是要提上日程了，不能再说说就算了，这种技能性的证书还是尽快拿到比较好，实训，期末考试都快要来了，今年夏天比去年冬天更慵懒了，不是成长就是夏日的太阳太温暖了。</p><p>​    其实人生要做的事说多也多，说不多也不多。往少了说，结婚生子，养老送终。往多了说柴米油盐酱醋茶。对于很多事情还是看淡些吧，相对于漫漫人生长道来讲，眼下所有值得让自己劳神的事情都是不值得的。人生的意义不在于眼下的那些与将来的自己毫无关系的琐事，做一个成熟些的人，为人处世更好些。</p><h3 id="5-25"><a href="#5-25" class="headerlink" title="5.25"></a>5.25</h3><hr><p>​    最可怕的就是以为今天写过了，感觉自己好像还在昨天一样。</p><p>​    相比于分享，我似乎更喜欢一个人的独乐乐。我可能就是一个自私自利的人。这也没什么不好，人都是自私的，我觉得这样更容易让自己获得快乐。</p><p>​    今天上午的时候被爱国这个词刷新认知了。微博不知道从什么时候开始拿战狼2和华为来作为爱国的标志，每次看到都好像觉得这群人除了看战狼2和买华为手机吹嘘华为产品之外都不知道什么是爱国方式了。曾经有过一段时间砸日本（产）车的潮流，人们也称之为爱国。但事后被明白人点破，那些车也都是我们中国同胞的血汗钱买下的呀！今天这样跟那个例子不可同日而语，但这件事情背后也说明了有一些人的别有用心，既然有一些糊涂虫被鼓动着大喊旗号，自然会有另一部分人去出口反驳啊，这不就是真正的自由平等的到来吗？可惜不知是从微博还是从哪里带来的潮流，都不允许反对的声音出现了。</p><p>​    做为一个普通的民众，其实我是不关心到底他们爱不爱国的，如果看一部电影和买一部手机就是爱国的话，那爱国未免也太简单了。估计抗战时期每一个汉奸都要用华为手机铺张床，然后躺在床上一直看战狼了。</p><h3 id="5-26"><a href="#5-26" class="headerlink" title="5.26"></a>5.26</h3><hr><p>​    难受。</p><p>​    什么都不想干。</p><p>​    我在想如果一个人真的抱怨什么都不想干的时候，到底是顺应着说什么都不想干就什么都别干了还是逆其道鼓励他找些事情做呢？</p><p>​    其实生活中有很多类似这样的选择。一个人去选择哪一种回应其实挺梦幻的，我确实不知道对方心中所想，其实这个选择有很大的运气性质在里面。运气这种东西就更加虚无缥缈了，所有面对这个选择，肯定有人对有人错，至于取决于什么，可能在于自己也可能在于对方。</p>]]></content>
      
      
      <categories>
          
          <category> Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5-06</title>
      <link href="/2019/06/01/5-06/"/>
      <url>/2019/06/01/5-06/</url>
      
        <content type="html"><![CDATA[<h3 id="5-6"><a href="#5-6" class="headerlink" title="5.6"></a>5.6</h3><hr><p>​    一放假就是耽误一周啊。</p><p>​    今天是周一，好好学习吧。</p><p>​    学英语。做实训。</p><p>​    本来写到这里就要停了的，但是晚上来实训室电脑一直打不开网页，能上qq能听歌，看书也看不进去，唉，还是全是借口，还是自己学不下去了啊。</p><p>​    记得上上周写最后一篇之前看到微博上说的一个大学的老师的一段话，本来是要写到那一篇里面的，但是当时不知怎的没想起来，以致于拖到现在。不过既然这件事能在我脑子里存在这么久，说明它还是很让我在意的，或者说很触动我。</p><p>​    那是一个知名大学的老师，说到，我们考上大学，上了名校，是因为我们聪明吗？是因为我们比其他人更努力吗？不是，是我们足够幸运。因为我们身处的家庭能够负担得起我们上大学甚至深造，是我们足够幸运，我们才可以享受这一切，可以在大学里时而学习，时而玩耍；是我们足够幸运，我们才可以在享受大学生活的同时，一边讨论着这样的事情。从生命诞生的那一刻，你与其他任何一个个体都不存在公平这件事情，不知道为什么人们总是在所有事情上都强迫症似的追求公平，难道人与人之间的差异不才是这个世界能够千变万化的决定所在吗？个体的差异性决定了每个人不可能在所有事情上都能追求到公平的待遇，人的主观能动性决定了这一切，世上不存在一个人对其他人是一视同仁的。</p><h3 id="5-8"><a href="#5-8" class="headerlink" title="5.8"></a>5.8</h3><hr><p>​    这两天感冒了，难受啊。。脑子昏沉，什么都没干，昨天竟把这个事也忘却了。可能是要记的东西太多了吧，强迫自己学习也学不进去，还要去驾校练车，太多琐碎的事情在大脑里，加上感冒，这滋味真的是不可言表啊。</p><p>​    今天依旧昏昏沉沉的上了一天课，课上什么也没有听进去。希望感冒快些好，然后好好学习吧。</p><h3 id="5-11"><a href="#5-11" class="headerlink" title="5.11"></a>5.11</h3><hr><p>​    有点想不起来这个了啊，不知道自己在忙什么，好像自我的提升也没有多大，还是一直感觉在浪费时间，但不这样浪费的话，也不知道要干什么，年纪轻轻最难受的就是不知道自己想要什么或者说知道想要什么却不知道要怎么去往前走去获取再或者是自己无法鞭策自己持续的努力得到那些距离现在的自己太远的东西。</p><p>​    大三一结束，大学就差不多快要完了吧，还有一个月的时间，争取这次把英语六级过了吧，平时还是要多学英语的，过六级不是最后的目的，要长时间的学习英语，让英语能够成为自己的一项技能，不然学这么久的英语是为了什么呢？之前的时间不就都浪费了吗？</p><p>​    除了英语，专业知识还是要慢慢捡起来的，现在的专业基础还是太过于薄弱了，java，python，linux慢慢的学吧。</p><p>​    这周末是母亲节了，虽然亲情对于每一个中国人来说都看的很重（当然除去哪些”个”例），但含蓄而间接的表达爱是中国人自古以来的习惯，无论是子女向父母还是父母向子女，往往没有外国的那种直接了当的说爱，我想我也是无法做到的，心中的无限感情是永远不能说出口的。曾多次见过人说中国人对爱情也是如此，还常常引用那句今晚月色很美来论证此例。但是我觉得现在大多数人已经不再如此了，就像亲情也如此慢慢转变，但我觉得爱与亲情是无法相比的，亲情中那种无言的爱是远远超过爱情中的你侬我侬的。虽然说如此比较难免不妥，一个人在面临真正的爱情和亲情之间的抉择时不可能因为这样的理由而做出判断，否则也未免太过于偏驳了。</p><h3 id="5-12"><a href="#5-12" class="headerlink" title="5.12"></a>5.12</h3><hr><p>​    人为什么非要聚集而居呢，对于当前的社会发展来说，理应一个人依赖网络可以解决任何问题，但是人们还是有与人相处的需求，似乎每个人都无法脱离社会群体而独立生存。</p><p>​    昨天在微博上面看到一个让我感触挺深的话题，原问题是说当一个女生有男朋友的时候又遇到更好的男生怎么办？在下面引用了一条知乎的回答，里面有一句话是这样的，“可以降，但不可以判”。回答中举的例子是一个条件很好的男生去挖别的男的墙角，然后再甩了挖来的那个女生。本来看到这个的时候是没有什么感觉的，我以前也见过这样的问题，但都没有让我有很大的感触，但是上面那句话确实让我感到意义非凡。</p><p>​    在下面评论有问这句话的意思的，我给出的解释是，一个人可以受降，但不要背叛。降是由于迫不得已，而判是自己主动，你背叛现在的人归顺我，未来有一天就会背叛我去归顺别人。背叛在全人类的认知中应该都是这样的，在战争中，现实的感情中，都应该保持对背叛零容忍的态度，现实中还是有很多人不这样选择，而最后受到的只会是再次伤害。</p>]]></content>
      
      
      <categories>
          
          <category> Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5-13</title>
      <link href="/2019/06/01/5-13/"/>
      <url>/2019/06/01/5-13/</url>
      
        <content type="html"><![CDATA[<h3 id="5-14"><a href="#5-14" class="headerlink" title="5.14"></a>5.14</h3><hr><p>昨天又忘了这茬了，今天再拖就又没机会写了。</p><h3 id="5-15"><a href="#5-15" class="headerlink" title="5.15"></a>5.15</h3><hr><p>​    当你对一个人不在意的时候，你就不会再去在意他对你的感受了。</p><p>​    人想要很好的生存，就必须时刻保持警惕，时刻观察着周围，像一只受伤的狐狸独自走在陌生的森林里一样。但想要这样去生活，实在是很累的。我们为什么要一次次的受到伤害后还要在人群中期待找到与自己相伴的人呢？就是为了让我们在和这人在一起的时候可以放松警惕，可以凭借本能的向前走，而不是像那只狐狸时刻担心身边的野兽什么时候跳出来把自己吃掉。</p><p>​    然而，不说知己难遇，我觉得要想让自己变得更加强大，成长的更快，还是要独自走过一段陌生的路的。长久的依赖会让自己慢慢的产生惰性，在下次遇到老虎的时候，你就不知道到底往哪里逃跑了。</p><h3 id="5-16"><a href="#5-16" class="headerlink" title="5.16"></a>5.16</h3><hr><p>​    好像越来越没动力了，没有前前前前一段时间的那种感觉了。。。</p><blockquote><p>​    在回宿舍的路上慢走，</p><p>​    尽可能的慢，</p><p>​    慢慢的感受黑暗，</p><p>​    感受这平和的温度，</p><p>​    感受那淡淡的微风，</p><p>​    感受着身边来往的行人，</p><p>​    感受远处的光，和心中的你。 </p></blockquote><p>​    昨天回宿舍的时候写的，灵感总是转瞬即逝，所以在脑海中浮现的时候一定要及时的记下来，不知道什么时候就会忘掉了。</p><h3 id="5-17"><a href="#5-17" class="headerlink" title="5.17"></a>5.17</h3><hr><p>​    做一个有感情的生物真的是挺累的啊，人在乎的越多，软肋和逆鳞就越多，你收到伤害的可能性就越大。</p><p>​    情深不寿，强极则辱。做一个平平淡淡的人，对外界的事物少一些在意，多关心自我内心的建造。</p><p>​    平平淡淡才是真。</p><blockquote><p>​    北国的雪</p><p>​    天上的月</p><p>​    喧闹的街</p><p>​    想你的夜</p></blockquote><p>​    又是昨天回宿舍的路上想到的，原创度很低，但不妨碍自我欣赏。</p><blockquote><p>​    昨日复昨日，昨日何其多。若不忘昨日，今日成蹉跎。</p></blockquote><h3 id="5-18"><a href="#5-18" class="headerlink" title="5.18"></a>5.18</h3><hr><p>​    昨天夜里被蚊子咬惨了。。。刚闭上眼已经睡着了，蚊子就已经咬到我的手了，强忍睡意起身下床抹花露水，咬到手真的是难受啊。接着睡到半夜不知道什么时候，蚊子又咬到我的脚。手足之恨，不共戴天啊。手脚上的伤害永远是无法忍受的。就像看到权力的游戏中弑君者被人砍掉右手，我能想象他内心的愤怒。所以我只能再一次下床找花露水解救。虽然一个晚上就这两次，但其中的折磨也让我难受非常。如果不是咬到手脚，就大可不必起身下床打散睡意，早上也不会不想起床了。</p><p>​    昨天又开始看一部小说《雪中悍刀行》，玄幻武侠类型的，武侠风还是让我感到喜欢的。权势滔天的北凉王世子，沉迷风月。。。。不介绍了，微信读书已经都有了。</p><h3 id="5-19"><a href="#5-19" class="headerlink" title="5.19"></a>5.19</h3><hr><p>​    初闻生活大爆炸，只听说是一部非常好的美剧，偏在那时自己恰好喜欢看些美剧，抱着一试的心态开始去看。初始看到十一季时还以为是多么耗时的工程，没想到一口气看完之后也越来越怀念。第十二季是一点一点的看的，边等边看。从开始看到现在，过程中有时也有些不是十分出彩的地方，但一路看来也让我感到十分不错。</p><p>​    早就听说十二季是最后一季了，在没看到最后总是不知道最后的最后会给自己带来多少惊喜和感动。想来每个人都渴望最终这样的友谊吧，一群人，就像是家人们一样，Sheldon最后也声称这是他另一个家。他站在台上看着他的朋友呆住的样子，像他又不像他，他完全没了获奖的欣喜，有的只是看着朋友们仍然在自己身边的感动。</p><p>​    本来是要打游戏的，但突然想到生活大爆炸最后两集要更新了，还是有了取舍。感动。。。让人不舍，在开头时他们就让我的心情起伏，最终终于是有些泪目。</p><p>​    继续努力吧，走向更高层次的世界，去接触那些曾经自己仰望的人，让自己变得更加优秀，去收获和守护未来自己所要拥有的东西。</p><p>​    </p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4-22</title>
      <link href="/2019/06/01/4-22/"/>
      <url>/2019/06/01/4-22/</url>
      
        <content type="html"><![CDATA[<p>这里记录自己的心灵之路。</p><p>用于更好的了解自己和敦促自己。</p><hr><h3 id="2019-4-22"><a href="#2019-4-22" class="headerlink" title="2019.4.22"></a>2019.4.22</h3><p>[哔一声之后·王菲]<br>    应该从所有事情中学习到对自己有用的东西。今天在微博和本校的一个学妹交流了一下，微博上还是不全是充满戾气的人的，或许人都充满戾气但在很多时候都不曾表现出来。<br>    应该多一些简单的快乐和伤感，而不是大喜大悲。自从去年从那集奇葩说听过人应该保持平静的态度生活之后，我就越来越对此深感赞同。平静才是真正的生活方式，偶尔来一些简单的快乐和伤感点缀一下生活的平淡就够了，大喜大悲对人的整体情绪来说都是不好的。还说到上面说的微博的对话，很简短，但是从此也看出来了年轻人的那种简单快乐，英语上机多考了三分，就已经很开心了。曾经的我是否也是有这么简单的想法呢？</p><hr><h3 id="4-23"><a href="#4-23" class="headerlink" title="4.23"></a>4.23</h3><p>​    本来的打算是在电脑上码字的，正好用一下我的新键盘，无奈刚开始写两次却都是在手机上完成的。昨天是由于当时不方便在电脑上写，又有突如其来的想法，就直接在手机上想简单记录，却写的挺有感觉就干脆在手机上完成的。今天呢，是由于在实训室“学习”时间太长，又太过投入，所以导致回到宿舍才想到这个事情…<br>​    今天呢，是想记一下昨天晚上看到的一个视频，讲的是花20个小时学会一项新的技能。开头讲到，如果精通一项技能大致需要10000个小时，但如果只是想要学会的话，20个小时就足够了。他还展开讲了一下要怎么利用这20个小时。一是要有明确的目的，就是你学这项技能是要用来做什么的，不能漫无目的的学习，不容易想到方向。二是要有足够的实践，就是在掌握足够多的知识后，在实践练习中自我矫正。三则是清楚学习过程中的障碍，也就是要专心利用时间，克服外界的干扰。四是要练习够20个小时，这20个小时是需要专心的投入的。<br>​    之后他又讲了障碍的主要来源——情感，指学习过程中的恐慌感。在学习一项技能的初期，可能会有挫败感，觉得自己笨，让人感觉不舒服。这种情感需要自我的克服，这就需要我们要有足够的自信和对学习清楚的认知，我们要有信心在我们付出一定的时间之后会收获到一些东西，对于新事物的学习，我们应该保持一种积极索取的态度，通过时间的投入来获得足够的知识，从而学习到这项技能。</p><hr><h3 id="4-24"><a href="#4-24" class="headerlink" title="4.24"></a>4.24</h3><p>​    现在是下午六点零八分，又度过了荒废的一天，上课不好好听课，下课又总打游戏。但是今天是值得被记住的，当在不久后的某一天，我相信不会等很长时间，当自己再次因为自己一无所成时，就该记起今天，以及曾经无数个像今天一样的日子，想一想自己是怎样把时间荒废掉，是怎样的堕落。那时，无论内心再多么低沉难过，也都是应该的。</p><p>​    我还想再记录一下写的这个东西。今天是用电脑写的，写这个东西就是为了记录每天自己内心的感受，本来是想着以我匮乏的辞藻，每天肯定也就一两句就完事了。以前也没有这么写过，也不知道我竟然还挺能啰嗦。这两天写的是越来越长，今天也不知道能写多少。对自己的了解还是太浅了，一个人不够了解自己，又怎么能安稳的过好自己的生活，做好自己的事呢？但是我们每个人都会有一种对自己了如指掌的错觉，既然说是错觉那肯定就是不对的。我们自以为了解自己，但每当回首自己做过的那些事情的时候又觉得不可思议，这正是自己不够了解自己的表现。不知道自己会做出什么事情，特别是在愤怒冲动时，这是十分可怕的。因为真正到了那个时候而你又掌控不了自己，这时往往会表现出十分反常的表现。平日每个人都是平和的，做的事也都是理性的，而在失去控制的时候，就像喝醉了酒，吸了毒一样，你不会知道自己会做出什么可怕的事情，这些事情肯定也都是你平日里所不愿和厌恶的。</p><hr><h3 id="4-25"><a href="#4-25" class="headerlink" title="4.25"></a>4.25</h3><p>​    电脑又不在…以后还是要多去学习啊。<br>​    我今天就想到，本来我写心路是打算来督促自己天天向上的，现在不知道怎么搞得，反而越来越堕落，是因为快放假了吗，是因为什么呢？<br>​    算了…不写了，无语。=_=</p><hr><h3 id="4-26"><a href="#4-26" class="headerlink" title="4.26"></a>4.26</h3><p>​    不到来临的时刻，你永远不会知道美妙的时光何时到来。</p><p>​    今天晚上，也就是刚刚，一起从实训室回去吃饭的路上，同行三人互相谈了一些事情，并跟另外两人分别展开了两场十分激烈的辩论。</p><p>​    第一个是在对方说出一个比较火的话：”可怜之人必有可恨之处“。其实我这两天脑海中就出现过这句话，也想过这件事情。由于我已有准备，所以我便无需客气的反驳道”可恨之人必有可怜之处“。世上可怜之人可恨之人并不缺少，无论在生活中还是在网络上，经常会掌握各种各样的见闻。今天微博上见到一条热搜，讲的是由于医生的误诊，导致一孕妇生下一个缺少右臂的孩子，在看评论的时候尽管我早有心理准备，但还是对于很多人那种无畏的言论感到十分的可悲。每次在微博评论下，都会引发自己不同于平常的心境，刚开始的时候我还会回复两句，但慢慢的，到了现在也就习以为常了。每个人所成长的环境，从小接收的教育，在身处环境中受到的耳濡目染不同，导致其长大获得一定自由缺乏约束时暴露出让人无法理解和认同的部分。每一个可恨之人在其形成现在的他自己的过程中必然是可怜的。</p><p>​    在这个说完之后，不知为何竟又提出了一个我曾经想过的问题，也是我曾经在微博上说过的，也就是人之初，性本善还是性本恶的问题。这是由上面那个同学提出的。在遇到这样的让我已经准备过的话题中，我当然是让仁不让的。我曾经在微博上就发表过人之初性本恶的观点，我还记得那是因为当时在微博上频频爆出各种害人的负面新闻，那段时间这种新闻出现的很多，让我不忍想到了人性本恶的必然性。而另一个同学讲出的观点是人生下来，应该是无害的，纯洁的，不具有任何善恶性质的。而作为一个生物，在出现生命的那一刹那，都必然有其本性，那就是利己性，生物的本能就是利己。我认为在初始状态一味的寻求利己，必然会对外界产生伤害，无论是否是有意的。所以人从小的教育和环境才如此重要，这也可以回归到上面那个话题，好的教育和让孩子耳濡目染成为更好的环境的重要性就不言而喻了。</p><hr><h3 id="4-27"><a href="#4-27" class="headerlink" title="4.27"></a>4.27</h3><p>​    时间总是过得飞快，只要你不在等待时间过去，那你就无法觉察到时间的偷偷流逝。</p><p>​    人一生的时间是有限的，但一个人想做的事情是无限的，以有限换无限必然是失败的，所以我们必须从无限的事情中挑选自己最想要的那一部分优先完成，而不是将大部分时间荒废后，随意的度过往后的余生。</p><hr><h3 id="4-28"><a href="#4-28" class="headerlink" title="4.28"></a>4.28</h3><p>​    路漫漫其修远兮，吾将上下而求索。</p><p>​    时间过得飞快，有时候也总会羡慕别人的生活，我记得我以前很多次都幻想着我生过在各种各样的家庭，有各种各样的兄弟姐妹，有这样那样的家庭条件。。。</p><p>​    我还记得小时候还总幻想着自己拥有超能力，会飞啊，隐身啊，瞬移啊，让时间静止啊。。。</p><p>​    没有网络和不接触社交软件的时候总是那么的单纯无聊，自己想着各种各样的事情。现在网络时代信息爆炸，却也让自己近乎丧失了思考的能力。。。</p><p>时刻认清自己<br>时刻敦促自己<br>时刻面对自己</p>]]></content>
      
      
      <categories>
          
          <category> Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4-29</title>
      <link href="/2019/06/01/4-29/"/>
      <url>/2019/06/01/4-29/</url>
      
        <content type="html"><![CDATA[<h3 id="4-29"><a href="#4-29" class="headerlink" title="4.29"></a>4.29</h3><hr><p>996.icu</p><p>​    明天就放假了，放假之后就要开始做项目了，对于实训还是要认真对待的，好好的学习更多的东西，才能在以后稍微的轻松一些。</p><p>​    道理其实是很容易懂的，无论是什么样的，你总是知道哪些该做哪些不该做，也知道到底什么是对的什么是错的，但有时候人偏偏选择不该做的事情去做，选择那个错误的。一次次的与自己妥协，一次次的让自己变得陌生。从高中到现在鸡汤为什么如此丰盛，就是因为它太容易了，容易到让每个人都可以发表出自己的看法，单纯的想法都是没用的，就像说纸上谈兵一样，只有实践过才知道到底自己在遇到事情的时候会面临什么样的选择，又会选择什么。</p>]]></content>
      
      
      <categories>
          
          <category> Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo搭建博客</title>
      <link href="/2019/05/31/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/05/31/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前提：</p><p>1.新建一个github仓库</p><p>2.安装配置Node.js</p><p>3.安装配置Git</p></blockquote><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><h2 id="步骤1-新建一个github仓库"><a href="#步骤1-新建一个github仓库" class="headerlink" title="步骤1.新建一个github仓库"></a>步骤1.新建一个github仓库</h2><ol><li>打开<a href="https://github.com/" target="_blank" rel="noopener">github网站</a>，（注册）登录账号，<a href="https://github.com/new" target="_blank" rel="noopener">新建一个仓库</a>;</li></ol><p>注：==仓库名称要求，yourname.github.io；==</p><p>​    勾选Initialize this repository with a README；</p><ol start="2"><li>新建完成后打开仓库，点击右侧settings按钮，找到下面的GitHub Pages；</li><li>Source保存为master branch，上面的链接是之后博客访问的链接</li></ol><h2 id="步骤2-安装Node-js"><a href="#步骤2-安装Node-js" class="headerlink" title="步骤2.安装Node.js"></a>步骤2.安装Node.js</h2><ol><li><p>打开<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js官网</a>下载对应操作系统版本及位数的node.js</p></li><li><p>安装完成后可通过以下命令验证是否已配置成功（默认安装已自动配置环境变量）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></li></ol><h2 id="步骤3-安装git"><a href="#步骤3-安装git" class="headerlink" title="步骤3.安装git"></a>步骤3.安装git</h2><ol><li><p>打开<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git官网</a>下载对应操作系统版本及位数的git</p></li><li><p>安装完成后可通过一下命令验证是否配置成功（默认安装已自动配置环境变量,即选择use Git from the Windows Command Prompt）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></li><li><p>配置git</p><ol><li><p>鼠标右键打开git bash here(以下命令都是在git bash下执行)</p></li><li><p>设置git的user name和email（第一次使用）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "yourname"</span><br><span class="line">git config --global user.email "youremail"</span><br></pre></td></tr></table></figure></li><li><p>配置ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>生成密钥，默认存储路径：C:\User\Administrator\.ssh</span><br><span class="line">ssh-keygen -t rsa -C"youremail"</span><br><span class="line"><span class="meta">#</span>添加密钥到ssh-agent</span><br><span class="line">eval "$(ssh-agent -s)"</span><br><span class="line"><span class="meta">#</span>添加生成的SSH key到ssh-agent</span><br><span class="line">ssh -add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></li><li><p>在github上添加ssh key.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>步骤1</span><br><span class="line">登录github，点击头像下的settings</span><br><span class="line"><span class="meta">#</span>步骤2</span><br><span class="line">打开左侧的SSH and GPG keys</span><br><span class="line"><span class="meta">#</span>步骤3</span><br><span class="line">点击右侧的new SSH key</span><br><span class="line"><span class="meta">#</span>步骤4</span><br><span class="line">Title 自定义</span><br><span class="line">Key输入刚才生成的C:\User\Administrator\.ssh路径下的id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>验证ssh是否添加成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li><li><p>ssh-key配置失败解决方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">首先，清除所有的key-pair</span><br><span class="line">ssh-add -D</span><br><span class="line">rm -r ~/.ssh</span><br><span class="line">删除你在github中的public-key</span><br><span class="line"></span><br><span class="line">重新生成ssh密钥对</span><br><span class="line">ssh-keygen -t rsa -C "xxx@xxx.com"</span><br><span class="line"></span><br><span class="line">接下来正常操作</span><br><span class="line">在github上添加公钥public-key:</span><br><span class="line">1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板</span><br><span class="line">2、在github上添加公钥时，直接复制即可</span><br><span class="line">3、保存</span><br></pre></td></tr></table></figure></li></ol></li></ol><blockquote><p>小试牛刀</p></blockquote><h1 id="hexo-github设置"><a href="#hexo-github设置" class="headerlink" title="hexo+github设置"></a>hexo+github设置</h1><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ol><li><p>找到一个合适的位置创建一个新的文件夹，必须是空的。实例文件夹：D:\Blog</p></li><li><p>打开cmd，进入新建的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d:</span><br><span class="line">cd Blog</span><br></pre></td></tr></table></figure></li><li><p>安装hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure></li><li><p>验证是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h2><ol><li><p>初始化Blog文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li><p>安装必要的组件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>生成目录结构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line"><span class="meta">#</span>或</span><br><span class="line">hexo generate</span><br></pre></td></tr></table></figure></li><li><p>开启hexo服务,预览界面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line"><span class="meta">#</span>或</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></li><li><p>第一次访问</p><p>访问：localhost:4000,可看到加载的页面。</p></li></ol><h2 id="Hexo联系Github"><a href="#Hexo联系Github" class="headerlink" title="Hexo联系Github"></a>Hexo联系Github</h2><p>打开hexo配置文件；D:\Blog\_config.yml</p><p>文件末尾处配置：</p><p>repository:打开github仓库点击Clone or download，复制里面ssh对应的仓库地址；</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:username/username.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo静态博客主题配置</title>
      <link href="/2019/05/30/blog-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/05/30/blog-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="更换博客主题"><a href="#更换博客主题" class="headerlink" title="更换博客主题"></a>更换博客主题</h3><p>主题可参考：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a> </p><p>hexo默认主题：Landscape</p><p>示例主题：Next</p><h4 id="下载Next主题"><a href="#下载Next主题" class="headerlink" title="下载Next主题"></a>下载Next主题</h4><ol><li><p>进入Blog所在目录，输入下载命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>进入Blog所在目录</span><br><span class="line">d:</span><br><span class="line">cd Blog</span><br><span class="line"><span class="meta">#</span>下载</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li><li><p>启用Next主题</p><p>在Blog文件夹下打开配置文件_config.yml,找到theme字段，将默认的landscape修改为next。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p>保存。</p></li><li><p>验证</p><p>命令行窗口输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure><p>浏览器输入：localhost:4000查看界面主题。</p></li></ol><h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><ol><li><p>主题配置文件在：/Blog/themes/next/_config.yml</p></li><li><p>打开主题配置文件，选择next提供的4种子主题,示例启动Mist</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h4><ol><li><p>打开主题配置文件，/Blog/themes/next/_config.yml；</p></li><li><p>找到menu settings</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">  schedule:</span> <span class="string">/schedule/</span> <span class="string">||</span> <span class="string">calendar</span></span><br><span class="line"><span class="attr">  sitemap:</span> <span class="string">/sitemap.xml</span> <span class="string">||</span> <span class="string">sitemap</span></span><br><span class="line"> <span class="comment"># commonweal: /404/ || heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="comment">#icon name(和http://fontawesome.io/icons/ 上面图标name对应) </span></span><br><span class="line"><span class="comment">#上方||后面的即为menu_icon名称，不许在下面重复定义</span></span><br><span class="line"><span class="attr">menu_icons:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>关闭注释即可打开博客菜单。</p></li><li><p>创建菜单文件目录，打开菜单后需要创建菜单文件存放的目录；</p><p>一下命令是在命令窗口，Blog目录下执行：D:\Blog&gt;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>标签菜单</span><br><span class="line">hexo new page tags</span><br><span class="line"><span class="meta">#</span>分类菜单</span><br><span class="line">hexo new page categories</span><br><span class="line"><span class="meta">#</span>关于菜单</span><br><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>执行完上面的命令后，会在Blog/source目录下多出tags和categories文件夹，文件夹下的makedown文件即为标签和分类菜单的展示页面内容，下面为标签和分类添加配置。</p><p>打开/tags/index.md</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-05-30 14:07:09</span><br><span class="line">type: "tags"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>打开/categories/index.md</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2019-05-30 14:07:09</span><br><span class="line">type: "categories"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存后，即可在新的文章撰写前添加标签和分类。</p><p>标签分类示例：（新建文件参考上一篇start my blog）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: my first blog</span><br><span class="line">date: 2019-05-30 14:07:09</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">- </span>hexo</span><br><span class="line"><span class="bullet">- </span>example</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">- </span>Example</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">the blog content.</span><br></pre></td></tr></table></figure><p>上面新建文件标签为：<code>hexo</code>,<code>example</code>;分类为：<code>Example</code>.</p><p>其他菜单类似。</p></li></ol><h4 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h4><ol><li><p>打开主题配置文件，/Blog/themes/next/_config.yml；</p></li><li><p>找到sidebar settings</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Social Links.</span></span><br><span class="line"><span class="comment">#取消注释即可打开社交网络链接</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/yourname</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line">  <span class="comment">#E-Mail: mailto:yourname@gmail.com || envelope</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#上方||后面的即为social_icon名称，不许在下面重复定义</span></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="string">github</span></span><br><span class="line"><span class="attr">  icons_only:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  transition:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>头像设置</p><p>在Blog/source目录下新建images文件夹，将自己喜欢的头像放在文件夹下，</p><p>Blog/source/head.jpg，</p><p>在主题配置文件中找到avatar，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/images/head.jpg</span></span><br></pre></td></tr></table></figure></li><li><p>作者和简述及语言</p><p>打开hexo配置文件，/Blog/_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Tassel</span>   <span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">welcome</span> <span class="string">to</span> <span class="string">my</span> <span class="string">blog.</span> <span class="comment">#描述</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">tassel</span> <span class="comment">#作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span> <span class="comment">#语言：简体中文</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="首页文章设置"><a href="#首页文章设置" class="headerlink" title="首页文章设置"></a>首页文章设置</h4><p>​    控制在首页文章显示字数，next主题默认显示文章所有内容，可以通过以下配置实现缩略显示，并给出显示更多按钮。</p><ol><li><p>方法一：</p><p>在每一篇文章任意位置添加</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure></li><li><p>方法二：</p><p>在文章的front-matter（即头部添加标签和分类的地方）中添加description，并提供文章摘录。</p></li><li><p>方法三：</p><p>自动形成摘要，在主题配置文件中(/Blog/themes/next/config.yml)修改如下配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Automatically Excerpt. Not recommend.</span></span><br><span class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure></li></ol><p>修改完配置后需要重新生成并部署到github</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure><p>其他更多更高级配置参考next主题官方网站：<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">Next</a></p>]]></content>
      
      
      <categories>
          
          <category> Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo新建提交流程</title>
      <link href="/2019/05/30/start-my-blog/"/>
      <url>/2019/05/30/start-my-blog/</url>
      
        <content type="html"><![CDATA[<p>记录一下如何新建-编写-生成-部署博客的全过程</p><h3 id="1、使用cmd完成"><a href="#1、使用cmd完成" class="headerlink" title="1、使用cmd完成"></a>1、使用cmd完成</h3><ol><li><p>打开命令提示符[win+r输入cmd]</p></li><li><p>切换到自己本地blog目录</p></li><li><p>创建md文件，以供后面的文章编写</p></li><li><p>创建好的文件在D:\Blog\source_posts下，打开后即可进行编辑</p></li><li><p>编辑完成后进行对文章的页面生成及部署</p></li><li><p>成功访问</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>1.打开命令提示符cmd</span><br><span class="line">win+r :cmd</span><br><span class="line"><span class="meta">#</span>2.切换到本地目录</span><br><span class="line">d:</span><br><span class="line">cd Blog</span><br><span class="line"><span class="meta">#</span>3.创建可编辑的文件</span><br><span class="line">hexo new post "blog-name"</span><br><span class="line"><span class="meta">#</span>4.进入到文件所在目录双击编辑</span><br><span class="line"><span class="meta">#</span>5.对文章进行生成部署</span><br><span class="line">hexo d -g</span><br><span class="line"><span class="meta">#</span>5.1.需要的扩展：</span><br><span class="line">npm install hexo-deployer-git</span><br><span class="line"><span class="meta">#</span>6.访问</span><br><span class="line">https://zsy0216.github.io</span><br></pre></td></tr></table></figure><h3 id="2-在git-bash下完成"><a href="#2-在git-bash下完成" class="headerlink" title="2.在git bash下完成"></a>2.在git bash下完成</h3><ol><li>编辑文章同上</li><li>发布时进入文章所在目录</li><li>生成与部署</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>1.</span><br><span class="line">win+r :cmd</span><br><span class="line">d:</span><br><span class="line">cd Blog</span><br><span class="line">hexo new post "blog-name"</span><br><span class="line"><span class="meta">#</span>1.1.进入到文件所在目录双击编辑</span><br><span class="line"><span class="meta">#</span>2.进入文章所在目录鼠标右键选择git bash here</span><br><span class="line"><span class="meta">#</span>3.生成部署</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>### </p>]]></content>
      
      
      <categories>
          
          <category> Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2019/05/30/%E8%A8%80%E8%AE%BA/"/>
      <url>/2019/05/30/%E8%A8%80%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="鲁迅"><a href="#鲁迅" class="headerlink" title="鲁迅"></a>鲁迅</h3><ul><li>当我沉默的时候，我觉得很充实，当我开口说话，就感到了空虚。</li><li>从来如此，便对么？</li><li>哀其不幸，怒其不争。</li><li>其实地上本没有路，走的人多了，也便成了路。</li><li>贪安稳就没有自由，要自由就要历些危险。只有这两条路。</li><li>中国人的性情是总喜欢调和折中的，譬如你说，这屋子太暗，须在这里开一个窗，大家一定不允许的。但如果你主张拆掉屋顶他们就来调和，愿意开窗了。</li><li>猛兽总是独行，牛羊才成群结队。</li></ul><h3 id="王小波"><a href="#王小波" class="headerlink" title="王小波"></a>王小波</h3><ul><li>假设有一个领悟，谦虚的人、明理的人以为它太困难、太暧昧，不肯说话，那么开口说话的就必然是浅薄之徒，狂妄之辈。这导致一种负筛选：越是傻子越敢叫唤——马上我就要说到，这些傻子也不见得真的傻，但喊出来的都是假话。</li><li>人生唯一的不幸就是自己的无能。</li><li>当你一步步回溯一件过去的事时，当然会知道下一步会发生什么。但是假如你在一步步经历意见当前逾期的事，你就会对未来一无所知。</li><li></li></ul><h3 id="老舍"><a href="#老舍" class="headerlink" title="老舍"></a>老舍</h3><ul><li>明天只是今天的继续，明天承继着今天的委屈。</li><li>苦人的懒是努力而落了空的自然结果，苦人的耍刺儿含着一些公理。</li><li>自己的路既走不通，便没法不承认别人做得对。</li><li>人间的真话本来就不多，一个女子的脸红胜过一大片话。</li><li>悲哀中的礼貌是虚伪。</li><li>其实，雨并不公道，因为下落在一个没有公道的世界上。</li><li></li></ul><h3 id="胡适"><a href="#胡适" class="headerlink" title="胡适"></a>胡适</h3><ul><li>成功不必在我，而功力必不唐捐。</li><li>生活的”为什么“，就是生活的意思。</li><li>生活本没有意义，你要能给他什么意义，他就有什么意义。逾期终日冥想人生有何意义，不如试用此生做点有意义的事。</li><li></li></ul><ol><li>你剥夺了我的理智，却要我清醒的去思考。  ——《高老头》</li><li>狐狸用尾巴扫干净蘑菇上的灰尘，刺猬们也把肚子露了出来，蜗牛也害羞地钻进自己的壳里，长颈鹿不停地吃掉颜色不好的叶子，因为你到我的森林里来了。</li><li>不乱于心，不困于情，不畏将来，不念过往，如此，安好。无愧于天，无愧于地，无怍于人，无惧于鬼，这样，人生。  ——丰子恺</li><li>如果有来生，要做一棵树，站成永恒。没有悲欢的姿势，一半在尘土里安详，一半在风中飞扬；一半洒落荫凉，一半沐浴阳光。  ——三毛</li><li>只缘感君一回顾，使我思君朝与暮。</li><li>我将于茫茫人海寻找我唯一之灵魂伴侣，得之，我幸，不得，我命。</li><li>寒山云：世人谤我、欺我、辱我、笑我、轻我、贱我、恶我、骗我、如何处置乎？拾得云：只是忍他、让他、由他、避他、耐他、敬他、不要理他、再待几年你且看他。</li><li>友谊悖论：你总是觉得，自己的朋友比自己有更多的朋友。</li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
